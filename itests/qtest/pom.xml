<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.hive</groupId>
    <artifactId>hive-it</artifactId>
    <version>0.13.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>hive-it-qfile</artifactId>
  <packaging>jar</packaging>
  <name>Hive Integration - QFile Tests</name>

  <properties>
    <hive.path.to.root>../..</hive.path.to.root>

    <qfile></qfile>
    <qfile_regex></qfile_regex>
    <run_disabled>false</run_disabled>
    <clustermode></clustermode>
    <execute.beeline.tests>false</execute.beeline.tests>
    <minimr.query.files>stats_counter_partitioned.q,list_bucket_dml_10.q,input16_cc.q,scriptfile1.q,scriptfile1_win.q,bucket4.q,bucketmapjoin6.q,disable_merge_for_bucketing.q,reduce_deduplicate.q,smb_mapjoin_8.q,join1.q,groupby2.q,bucketizedhiveinputformat.q,bucketmapjoin7.q,optrstat_groupby.q,bucket_num_reducers.q,bucket5.q,load_fs2.q,bucket_num_reducers2.q,infer_bucket_sort_merge.q,infer_bucket_sort_reducers_power_two.q,infer_bucket_sort_dyn_part.q,infer_bucket_sort_bucketed_table.q,infer_bucket_sort_map_operators.q,infer_bucket_sort_num_buckets.q,leftsemijoin_mr.q,schemeAuthority.q,schemeAuthority2.q,truncate_column_buckets.q,remote_script.q,,load_hdfs_file_with_space_in_the_name.q,parallel_orderby.q,import_exported_table.q,stats_counter.q,auto_sortmerge_join_16.q,quotedid_smb.q,file_with_header_footer.q,external_table_with_space_in_location_path.q,root_dir_external_table.q,index_bitmap3.q,ql_rewrite_gbtoidx.q,index_bitmap_auto.q,udf_using.q</minimr.query.files>
    <minimr.query.negative.files>cluster_tasklog_retrieval.q,minimr_broken_pipe.q,mapreduce_stack_trace.q,mapreduce_stack_trace_turnoff.q,mapreduce_stack_trace_hadoop20.q,mapreduce_stack_trace_turnoff_hadoop20.q,file_with_header_footer_negative.q,udf_local_resource.q</minimr.query.negative.files>
    <minitez.query.files>tez_join_tests.q,tez_joins_explain.q,mrr.q,tez_dml.q,tez_insert_overwrite_local_directory_1.q</minitez.query.files>
    <minitez.query.files.shared>join0.q,join1.q,auto_join0.q,auto_join1.q,bucket2.q,bucket3.q,bucket4.q,count.q,create_merge_compressed.q,cross_join.q,ctas.q,custom_input_output_format.q,disable_merge_for_bucketing.q,enforce_order.q,filter_join_breaktask.q,filter_join_breaktask2.q,groupby1.q,groupby2.q,groupby3.q,having.q,insert1.q,insert_into1.q,insert_into2.q,leftsemijoin.q,limit_pushdown.q,load_dyn_part1.q,load_dyn_part2.q,load_dyn_part3.q,mapjoin_mapjoin.q,mapreduce1.q,mapreduce2.q,merge1.q,merge2.q,metadata_only_queries.q,sample1.q,subquery_in.q,subquery_exists.q,vectorization_15.q,ptf.q,stats_counter.q,stats_noscan_1.q,stats_counter_partitioned.q,union2.q,union3.q,union4.q,union5.q,union6.q,union7.q,union8.q,union9.q</minitez.query.files.shared>
    <beeline.positive.exclude>add_part_exist.q,alter1.q,alter2.q,alter4.q,alter5.q,alter_rename_partition.q,alter_rename_partition_authorization.q,archive.q,archive_corrupt.q,archive_multi.q,archive_mr_1806.q,archive_multi_mr_1806.q,authorization_1.q,authorization_2.q,authorization_4.q,authorization_5.q,authorization_6.q,authorization_7.q,ba_table1.q,ba_table2.q,ba_table3.q,ba_table_udfs.q,binary_table_bincolserde.q,binary_table_colserde.q,cluster.q,columnarserde_create_shortcut.q,combine2.q,constant_prop.q,create_nested_type.q,create_or_replace_view.q,create_struct_table.q,create_union_table.q,database.q,database_location.q,database_properties.q,ddltime.q,describe_database_json.q,drop_database_removes_partition_dirs.q,escape1.q,escape2.q,exim_00_nonpart_empty.q,exim_01_nonpart.q,exim_02_00_part_empty.q,exim_02_part.q,exim_03_nonpart_over_compat.q,exim_04_all_part.q,exim_04_evolved_parts.q,exim_05_some_part.q,exim_06_one_part.q,exim_07_all_part_over_nonoverlap.q,exim_08_nonpart_rename.q,exim_09_part_spec_nonoverlap.q,exim_10_external_managed.q,exim_11_managed_external.q,exim_12_external_location.q,exim_13_managed_location.q,exim_14_managed_location_over_existing.q,exim_15_external_part.q,exim_16_part_external.q,exim_17_part_managed.q,exim_18_part_external.q,exim_19_00_part_external_location.q,exim_19_part_external_location.q,exim_20_part_managed_location.q,exim_21_export_authsuccess.q,exim_22_import_exist_authsuccess.q,exim_23_import_part_authsuccess.q,exim_24_import_nonexist_authsuccess.q,global_limit.q,groupby_complex_types.q,groupby_complex_types_multi_single_reducer.q,index_auth.q,index_auto.q,index_auto_empty.q,index_bitmap.q,index_bitmap1.q,index_bitmap2.q,index_bitmap3.q,index_bitmap_auto.q,index_bitmap_rc.q,index_compact.q,index_compact_1.q,index_compact_2.q,index_compact_3.q,index_stale_partitioned.q,init_file.q,input16.q,input16_cc.q,input46.q,input_columnarserde.q,input_dynamicserde.q,input_lazyserde.q,input_testxpath3.q,input_testxpath4.q,insert2_overwrite_partitions.q,insertexternal1.q,join_thrift.q,lateral_view.q,load_binary_data.q,load_exist_part_authsuccess.q,load_nonpart_authsuccess.q,load_part_authsuccess.q,loadpart_err.q,lock1.q,lock2.q,lock3.q,lock4.q,merge_dynamic_partition.q,multi_insert.q,multi_insert_move_tasks_share_dependencies.q,null_column.q,ppd_clusterby.q,query_with_semi.q,rename_column.q,sample6.q,sample_islocalmode_hook.q,set_processor_namespaces.q,show_tables.q,source.q,split_sample.q,str_to_map.q,transform1.q,udaf_collect_set.q,udaf_context_ngrams.q,udaf_histogram_numeric.q,udaf_ngrams.q,udaf_percentile_approx.q,udf_array.q,udf_bitmap_and.q,udf_bitmap_or.q,udf_explode.q,udf_format_number.q,udf_map.q,udf_map_keys.q,udf_map_values.q,udf_max.q,udf_min.q,udf_named_struct.q,udf_percentile.q,udf_printf.q,udf_sentences.q,udf_sort_array.q,udf_split.q,udf_struct.q,udf_substr.q,udf_translate.q,udf_union.q,udf_xpath.q,udtf_stack.q,view.q,virtual_column.q</beeline.positive.exclude>
  </properties>

  <dependencies>
    <!-- dependencies are always listed in sorted order by groupId, artifectId -->
    <!-- test intra-project -->
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-ant</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-contrib</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-it-custom-serde</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-it-util</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-serde</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- test inter-project -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <!-- replaces -Dclustermode=minimr which I am sure sure was used? -->
      <id>minimr</id>
      <properties>
        <test.warehouse.scheme></test.warehouse.scheme>
      </properties>
    </profile>
    <profile>
      <id>hadoop-1</id>
      <properties>
        <active.hadoop.version>${hadoop-20S.version}</active.hadoop.version>
        <test.dfs.mkdir>-mkdir</test.dfs.mkdir>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop1-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop1-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hadoop-2</id>
      <properties>
        <active.hadoop.version>${hadoop-23.version}</active.hadoop.version>
        <test.dfs.mkdir>-mkdir -p</test.dfs.mkdir>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-servlet</artifactId>
          <version>${jersey.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-archives</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-hs</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-core</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>${commons-logging.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-server-tests</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-client</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop2-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop2-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId> 
          <artifactId>tez-tests</artifactId>
          <version>${tez.version}</version>
          <type>test-jar</type>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-api</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-runtime-library</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-mapreduce</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-dag</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-tests-sources</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <target>
                <property name="test.classpath" refid="maven.test.classpath"/>
                <echo message="${test.classpath}"/>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                  classpathref="maven.plugin.classpath" />
                <taskdef name="qtestgen" classname="org.apache.hadoop.hive.ant.QTestGenTask"
                  classpath="${test.classpath}" />
                <mkdir dir="${project.build.directory}/qfile-results/clientpositive/" />
                <mkdir dir="${project.build.directory}/qfile-results/clientnegative/" />
                <mkdir dir="${project.build.directory}/qfile-results/clientcompare"/>
                <mkdir dir="${project.build.directory}/qfile-results/positive/" />
                <mkdir dir="${project.build.directory}/qfile-results/negative/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/positive/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/negative/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/minimrpositive/" />

                <mkdir dir="${project.build.directory}/qfile-results/contribpositive"/>
                <mkdir dir="${project.build.directory}/qfile-results/contribnegative"/>
                <mkdir dir="${project.build.directory}/qfile-results/contribclientpositive"/>
                <mkdir dir="${project.build.directory}/qfile-results/contribclientnegative"/>


                <!-- Parse -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/ql/parse/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestParse.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/positive/"
                  queryFile="${qfile}"
                  queryFileRegex="${qfile_regex}"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/compiler/" className="TestParse"
                  logFile="${project.build.directory}/testparsegen.log"
                  hadoopVersion="${active.hadoop.version}"
                  logDirectory="${project.build.directory}/qfile-results/positive/"/>

                <!-- Negative Parse -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/ql/parse/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestParseNegative.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/negative/"
                  queryFile="${qfile}"
                  queryFileRegex="${qfile_regex}"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/compiler/errors/" className="TestParseNegative"
                  logFile="${project.build.directory}/testparseneggen.log"
                  hadoopVersion="${active.hadoop.version}"
                  logDirectory="${project.build.directory}/qfile-results/negative/"/>

                <!-- Cli -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/"
                  queryFile="${qfile}"
                  excludeQueryFile="${minimr.query.files},${minitez.query.files}"
                  queryFileRegex="${qfile_regex}"
                  clusterMode="${clustermode}"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" className="TestCliDriver"
                  logFile="${project.build.directory}/testclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/clientpositive/"
                  hadoopVersion="${active.hadoop.version}"/>

                <!-- Negative Cli -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestNegativeCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientnegative/"
                  queryFile="${qfile}"
                  excludeQueryFile="${minimr.query.negative.files}"
                  queryFileRegex="${qfile_regex}"
                  clusterMode="${clustermode}"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientnegative/" className="TestNegativeCliDriver"
                  logFile="${project.build.directory}/testnegativeclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/clientnegative/"
                  hadoopVersion="${active.hadoop.version}"/>

                <!-- Compare Cli -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestCompareCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientcompare/"
                  queryFile="${qfile}"
                  queryFileRegex="${qfile_regex}"
                  clusterMode="${clustermode}"
                  runDisabled="${run_disabled}"
                  className="TestCompareCliDriver"
                  logFile="${project.build.directory}/testcompareclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/clientcompare/"
                  hadoopVersion="${active.hadoop.version}"/>

                <!-- Minimr -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/"
                  queryFile="${qfile}"
                  includeQueryFile="${minimr.query.files}"
                  queryFileRegex="${qfile_regex}"
                  clusterMode="miniMR"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" className="TestMinimrCliDriver"
                  logFile="${project.build.directory}/testminimrclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/clientpositive/"
                  hadoopVersion="${active.hadoop.version}"
                  />

                <if>
                  <equals arg1="${active.hadoop.version}" arg2="${hadoop-23.version}"/>
                  <then>
                    <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                              outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                              templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestCliDriver.vm"
                              queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/"
                              queryFile="${qfile}"
                              includeQueryFile="${minitez.query.files},${minitez.query.files.shared}"
                              queryFileRegex="${qfile_regex}"
                              clusterMode="tez"
                              runDisabled="${run_disabled}"
                              hiveConfDir="${basedir}/${hive.path.to.root}/data/conf/tez"
                              resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/tez" 
                              className="TestMiniTezCliDriver"
                              logFile="${project.build.directory}/testminitezclidrivergen.log"
                              logDirectory="${project.build.directory}/qfile-results/clientpositive/"
                              hadoopVersion="${active.hadoop.version}"
                              />
                  </then>
                  <else>
                  </else>
                </if>

                <!-- Negative Minimr -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestNegativeCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientnegative/"
                  queryFile="${qfile}"
                  includeQueryFile="${minimr.query.negative.files}"
                  queryFileRegex="${qfile_regex}"
                  clusterMode="miniMR"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientnegative/" className="TestNegativeMinimrCliDriver"
                  logFile="${project.build.directory}/testnegativeminimrclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/clientnegative/"
                  hadoopVersion="${hadoopVersion}"
                  />

                <!-- HBase Positive -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" template="TestHBaseCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/positive/"
                  queryFile="${qfile}"
                  runDisabled="${run_disabled}"
                  clusterMode="${clustermode}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/positive/" className="TestHBaseCliDriver"
                  logFile="${project.build.directory}/testhbaseclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/hbase-handler/positive/"/>

                <!-- HBase Minimr -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" template="TestHBaseCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/positive/"
                  queryFile="hbase_bulk.m"
                  runDisabled="${run_disabled}"
                  clusterMode="miniMR"
                  resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/positive/" className="TestHBaseMinimrCliDriver"
                  logFile="${project.build.directory}/testhbaseminimrclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/hbase-handler/minimrpositive/"/>

                <!-- HBase Negative -->
                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/"
                  templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" template="TestHBaseNegativeCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/negative/"
                  queryFile="${qfile}"
                  runDisabled="${run_disabled}"
                  clusterMode="${clustermode}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/negative/" className="TestHBaseNegativeCliDriver"
                  logFile="${project.build.directory}/testhbasenegativeclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/hbase-handler/negative"/>


                <!-- Beeline -->
                <if>
                  <equals arg1="${execute.beeline.tests}" arg2="true" />
                    <then>
                      <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                        outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hive/beeline/util/"
                        templatePath="${ql.test.template.dir}" template="TestBeeLineDriver.vm"
                        queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/"
                        queryFile="${qfile}"
                        excludeQueryFile="${beeline.positive.exclude}"
                        queryFileRegex="${qfile_regex}"
                        clusterMode="${clustermode}"
                        runDisabled="${run_disabled}"
                        resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" className="TestBeeLineDriver"
                        logFile="${project.build.directory}/testbeelinedrivergen.log"
                        logDirectory="${project.build.directory}/qfile-results/beelinepositive/"
                        hadoopVersion="${hadoopVersion}" />
                    </then>
                </if>



                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/queries/clientpositive"
                  queryFile="${qfile}"
                  queryFileRegex="${qfile_regex}"
                  runDisabled="${run_disabled}"
                  clusterMode="${clustermode}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/results/clientpositive/" className="TestContribCliDriver"
                  logFile="${project.build.directory}/testcontribclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/contribclientpositive"
                  hadoopVersion="${hadoopVersion}"
                />

                <qtestgen hiveRootDirectory="${basedir}/${hive.path.to.root}/"
                  outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli"
                  templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" template="TestNegativeCliDriver.vm"
                  queryDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/queries/clientnegative"
                  queryFile="${qfile}"
                  queryFileRegex="${qfile_regex}"
                  runDisabled="${run_disabled}"
                  resultsDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/results/clientnegative/" className="TestContribNegativeCliDriver"
                  logFile="${project.build.directory}/testcontribnegclidrivergen.log"
                  logDirectory="${project.build.directory}/qfile-results/contribclientnegative"/>


              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>add-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-test-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
