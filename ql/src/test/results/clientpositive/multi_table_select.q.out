PREHOOK: query: create table t1 (key int, value string) partitioned by (p1 string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table t1 (key int, value string) partitioned by (p1 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@t1
PREHOOK: query: create table t2 (key int, value string) partitioned by (p1 string, p2 string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table t2 (key int, value string) partitioned by (p1 string, p2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@t2
PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t1 PARTITION (p1='x')
PREHOOK: type: LOAD
PREHOOK: Output: default@t1
POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t1 PARTITION (p1='x')
POSTHOOK: type: LOAD
POSTHOOK: Output: default@t1
POSTHOOK: Output: default@t1@p1=x
PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t2 PARTITION (p1='y', p2='y1')
PREHOOK: type: LOAD
PREHOOK: Output: default@t2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t2 PARTITION (p1='y', p2='y1')
POSTHOOK: type: LOAD
POSTHOOK: Output: default@t2
POSTHOOK: Output: default@t2@p1=y/p2=y1
PREHOOK: query: explain extended select t.value, sum(t.key) from t1 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t1 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "x")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Select Operator
              expressions:
                    expr: value
                    type: string
                    expr: key
                    type: int
              outputColumnNames: value, key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: bigint
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: p1=x
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 x
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t1
              numFiles 1
              numRows 0
              partition_columns p1
              rawDataSize 0
              serialization.ddl struct t1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t1
                numFiles 1
                numPartitions 1
                numRows 0
                partition_columns p1
                rawDataSize 0
                serialization.ddl struct t1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t1
            name: default.t1
      Truncated Path -> Alias:
        /t1/p1=x [t]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t1 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t1@p1=x
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t1 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t1@p1=x
#### A masked pattern was here ####
val_0	0
val_10	10
val_100	200
val_103	206
val_104	208
val_105	105
val_11	11
val_111	111
val_113	226
val_114	114
val_116	116
val_118	236
val_119	357
val_12	24
val_120	240
val_125	250
val_126	126
val_128	384
val_129	258
val_131	131
val_133	133
val_134	268
val_136	136
val_137	274
val_138	552
val_143	143
val_145	145
val_146	292
val_149	298
val_15	30
val_150	150
val_152	304
val_153	153
val_155	155
val_156	156
val_157	157
val_158	158
val_160	160
val_162	162
val_163	163
val_164	328
val_165	330
val_166	166
val_167	501
val_168	168
val_169	676
val_17	17
val_170	170
val_172	344
val_174	348
val_175	350
val_176	352
val_177	177
val_178	178
val_179	358
val_18	36
val_180	180
val_181	181
val_183	183
val_186	186
val_187	561
val_189	189
val_19	19
val_190	190
val_191	382
val_192	192
val_193	579
val_194	194
val_195	390
val_196	196
val_197	394
val_199	597
val_2	2
val_20	20
val_200	400
val_201	201
val_202	202
val_203	406
val_205	410
val_207	414
val_208	624
val_209	418
val_213	426
val_214	214
val_216	432
val_217	434
val_218	218
val_219	438
val_221	442
val_222	222
val_223	446
val_224	448
val_226	226
val_228	228
val_229	458
val_230	1150
val_233	466
val_235	235
val_237	474
val_238	476
val_239	478
val_24	48
val_241	241
val_242	484
val_244	244
val_247	247
val_248	248
val_249	249
val_252	252
val_255	510
val_256	512
val_257	257
val_258	258
val_26	52
val_260	260
val_262	262
val_263	263
val_265	530
val_266	266
val_27	27
val_272	544
val_273	819
val_274	274
val_275	275
val_277	1108
val_278	556
val_28	28
val_280	560
val_281	562
val_282	564
val_283	283
val_284	284
val_285	285
val_286	286
val_287	287
val_288	576
val_289	289
val_291	291
val_292	292
val_296	296
val_298	894
val_30	30
val_302	302
val_305	305
val_306	306
val_307	614
val_308	308
val_309	618
val_310	310
val_311	933
val_315	315
val_316	948
val_317	634
val_318	954
val_321	642
val_322	644
val_323	323
val_325	650
val_327	981
val_33	33
val_331	662
val_332	332
val_333	666
val_335	335
val_336	336
val_338	338
val_339	339
val_34	34
val_341	341
val_342	684
val_344	688
val_345	345
val_348	1740
val_35	105
val_351	351
val_353	706
val_356	356
val_360	360
val_362	362
val_364	364
val_365	365
val_366	366
val_367	734
val_368	368
val_369	1107
val_37	74
val_373	373
val_374	374
val_375	375
val_377	377
val_378	378
val_379	379
val_382	764
val_384	1152
val_386	386
val_389	389
val_392	392
val_393	393
val_394	394
val_395	790
val_396	1188
val_397	794
val_399	798
val_4	4
val_400	400
val_401	2005
val_402	402
val_403	1209
val_404	808
val_406	1624
val_407	407
val_409	1227
val_41	41
val_411	411
val_413	826
val_414	828
val_417	1251
val_418	418
val_419	419
val_42	84
val_421	421
val_424	848
val_427	427
val_429	858
val_43	43
val_430	1290
val_431	1293
val_432	432
val_435	435
val_436	436
val_437	437
val_438	1314
val_439	878
val_44	44
val_443	443
val_444	444
val_446	446
val_448	448
val_449	449
val_452	452
val_453	453
val_454	1362
val_455	455
val_457	457
val_458	916
val_459	918
val_460	460
val_462	924
val_463	926
val_466	1398
val_467	467
val_468	1872
val_469	2345
val_47	47
val_470	470
val_472	472
val_475	475
val_477	477
val_478	956
val_479	479
val_480	1440
val_481	481
val_482	482
val_483	483
val_484	484
val_485	485
val_487	487
val_489	1956
val_490	490
val_491	491
val_492	984
val_493	493
val_494	494
val_495	495
val_496	496
val_497	497
val_498	1494
val_5	15
val_51	102
val_53	53
val_54	54
val_57	57
val_58	116
val_64	64
val_65	65
val_66	66
val_67	134
val_69	69
val_70	210
val_72	144
val_74	74
val_76	152
val_77	77
val_78	78
val_8	8
val_80	80
val_82	82
val_83	166
val_84	168
val_85	85
val_86	86
val_87	87
val_9	9
val_90	270
val_92	92
val_95	190
val_96	96
val_97	194
val_98	196
PREHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="y" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="y" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t2) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "y")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Select Operator
              expressions:
                    expr: value
                    type: string
                    expr: key
                    type: int
              outputColumnNames: value, key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: bigint
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: p2=y1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 y
              p2 y1
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t2
              numFiles 1
              numRows 0
              partition_columns p1/p2
              rawDataSize 0
              serialization.ddl struct t2 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t2
                numFiles 1
                numPartitions 1
                numRows 0
                partition_columns p1/p2
                rawDataSize 0
                serialization.ddl struct t2 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t2
            name: default.t2
      Truncated Path -> Alias:
        /t2/p1=y/p2=y1 [t]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="y" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t2
PREHOOK: Input: default@t2@p1=y/p2=y1
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="y" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t2@p1=y/p2=y1
#### A masked pattern was here ####
val_0	0
val_10	10
val_100	200
val_103	206
val_104	208
val_105	105
val_11	11
val_111	111
val_113	226
val_114	114
val_116	116
val_118	236
val_119	357
val_12	24
val_120	240
val_125	250
val_126	126
val_128	384
val_129	258
val_131	131
val_133	133
val_134	268
val_136	136
val_137	274
val_138	552
val_143	143
val_145	145
val_146	292
val_149	298
val_15	30
val_150	150
val_152	304
val_153	153
val_155	155
val_156	156
val_157	157
val_158	158
val_160	160
val_162	162
val_163	163
val_164	328
val_165	330
val_166	166
val_167	501
val_168	168
val_169	676
val_17	17
val_170	170
val_172	344
val_174	348
val_175	350
val_176	352
val_177	177
val_178	178
val_179	358
val_18	36
val_180	180
val_181	181
val_183	183
val_186	186
val_187	561
val_189	189
val_19	19
val_190	190
val_191	382
val_192	192
val_193	579
val_194	194
val_195	390
val_196	196
val_197	394
val_199	597
val_2	2
val_20	20
val_200	400
val_201	201
val_202	202
val_203	406
val_205	410
val_207	414
val_208	624
val_209	418
val_213	426
val_214	214
val_216	432
val_217	434
val_218	218
val_219	438
val_221	442
val_222	222
val_223	446
val_224	448
val_226	226
val_228	228
val_229	458
val_230	1150
val_233	466
val_235	235
val_237	474
val_238	476
val_239	478
val_24	48
val_241	241
val_242	484
val_244	244
val_247	247
val_248	248
val_249	249
val_252	252
val_255	510
val_256	512
val_257	257
val_258	258
val_26	52
val_260	260
val_262	262
val_263	263
val_265	530
val_266	266
val_27	27
val_272	544
val_273	819
val_274	274
val_275	275
val_277	1108
val_278	556
val_28	28
val_280	560
val_281	562
val_282	564
val_283	283
val_284	284
val_285	285
val_286	286
val_287	287
val_288	576
val_289	289
val_291	291
val_292	292
val_296	296
val_298	894
val_30	30
val_302	302
val_305	305
val_306	306
val_307	614
val_308	308
val_309	618
val_310	310
val_311	933
val_315	315
val_316	948
val_317	634
val_318	954
val_321	642
val_322	644
val_323	323
val_325	650
val_327	981
val_33	33
val_331	662
val_332	332
val_333	666
val_335	335
val_336	336
val_338	338
val_339	339
val_34	34
val_341	341
val_342	684
val_344	688
val_345	345
val_348	1740
val_35	105
val_351	351
val_353	706
val_356	356
val_360	360
val_362	362
val_364	364
val_365	365
val_366	366
val_367	734
val_368	368
val_369	1107
val_37	74
val_373	373
val_374	374
val_375	375
val_377	377
val_378	378
val_379	379
val_382	764
val_384	1152
val_386	386
val_389	389
val_392	392
val_393	393
val_394	394
val_395	790
val_396	1188
val_397	794
val_399	798
val_4	4
val_400	400
val_401	2005
val_402	402
val_403	1209
val_404	808
val_406	1624
val_407	407
val_409	1227
val_41	41
val_411	411
val_413	826
val_414	828
val_417	1251
val_418	418
val_419	419
val_42	84
val_421	421
val_424	848
val_427	427
val_429	858
val_43	43
val_430	1290
val_431	1293
val_432	432
val_435	435
val_436	436
val_437	437
val_438	1314
val_439	878
val_44	44
val_443	443
val_444	444
val_446	446
val_448	448
val_449	449
val_452	452
val_453	453
val_454	1362
val_455	455
val_457	457
val_458	916
val_459	918
val_460	460
val_462	924
val_463	926
val_466	1398
val_467	467
val_468	1872
val_469	2345
val_47	47
val_470	470
val_472	472
val_475	475
val_477	477
val_478	956
val_479	479
val_480	1440
val_481	481
val_482	482
val_483	483
val_484	484
val_485	485
val_487	487
val_489	1956
val_490	490
val_491	491
val_492	984
val_493	493
val_494	494
val_495	495
val_496	496
val_497	497
val_498	1494
val_5	15
val_51	102
val_53	53
val_54	54
val_57	57
val_58	116
val_64	64
val_65	65
val_66	66
val_67	134
val_69	69
val_70	210
val_72	144
val_74	74
val_76	152
val_77	77
val_78	78
val_8	8
val_80	80
val_82	82
val_83	166
val_84	168
val_85	85
val_86	86
val_87	87
val_9	9
val_90	270
val_92	92
val_95	190
val_96	96
val_97	194
val_98	196
PREHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t2) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "x")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate:
                  expr: (p1 = 'x')
                  type: boolean
              Select Operator
                expressions:
                      expr: value
                      type: string
                      expr: key
                      type: int
                outputColumnNames: value, key
                Group By Operator
                  aggregations:
                        expr: sum(key)
                  bucketGroup: false
                  keys:
                        expr: value
                        type: string
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Reduce Output Operator
                    key expressions:
                          expr: _col0
                          type: string
                    sort order: +
                    Map-reduce partition columns:
                          expr: _col0
                          type: string
                    tag: -1
                    value expressions:
                          expr: _col1
                          type: bigint
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
PREHOOK: query: explain extended select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1) (TOK_TABNAME t2) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "x")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Select Operator
              expressions:
                    expr: value
                    type: string
                    expr: key
                    type: int
              outputColumnNames: value, key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: bigint
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: p1=x
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 x
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t1
              numFiles 1
              numRows 0
              partition_columns p1
              rawDataSize 0
              serialization.ddl struct t1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t1
                numFiles 1
                numPartitions 1
                numRows 0
                partition_columns p1
                rawDataSize 0
                serialization.ddl struct t1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t1
            name: default.t1
      Truncated Path -> Alias:
        /t1/p1=x [t]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t1@p1=x
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t1@p1=x
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
val_0	0
val_10	10
val_100	200
val_103	206
val_104	208
val_105	105
val_11	11
val_111	111
val_113	226
val_114	114
val_116	116
val_118	236
val_119	357
val_12	24
val_120	240
val_125	250
val_126	126
val_128	384
val_129	258
val_131	131
val_133	133
val_134	268
val_136	136
val_137	274
val_138	552
val_143	143
val_145	145
val_146	292
val_149	298
val_15	30
val_150	150
val_152	304
val_153	153
val_155	155
val_156	156
val_157	157
val_158	158
val_160	160
val_162	162
val_163	163
val_164	328
val_165	330
val_166	166
val_167	501
val_168	168
val_169	676
val_17	17
val_170	170
val_172	344
val_174	348
val_175	350
val_176	352
val_177	177
val_178	178
val_179	358
val_18	36
val_180	180
val_181	181
val_183	183
val_186	186
val_187	561
val_189	189
val_19	19
val_190	190
val_191	382
val_192	192
val_193	579
val_194	194
val_195	390
val_196	196
val_197	394
val_199	597
val_2	2
val_20	20
val_200	400
val_201	201
val_202	202
val_203	406
val_205	410
val_207	414
val_208	624
val_209	418
val_213	426
val_214	214
val_216	432
val_217	434
val_218	218
val_219	438
val_221	442
val_222	222
val_223	446
val_224	448
val_226	226
val_228	228
val_229	458
val_230	1150
val_233	466
val_235	235
val_237	474
val_238	476
val_239	478
val_24	48
val_241	241
val_242	484
val_244	244
val_247	247
val_248	248
val_249	249
val_252	252
val_255	510
val_256	512
val_257	257
val_258	258
val_26	52
val_260	260
val_262	262
val_263	263
val_265	530
val_266	266
val_27	27
val_272	544
val_273	819
val_274	274
val_275	275
val_277	1108
val_278	556
val_28	28
val_280	560
val_281	562
val_282	564
val_283	283
val_284	284
val_285	285
val_286	286
val_287	287
val_288	576
val_289	289
val_291	291
val_292	292
val_296	296
val_298	894
val_30	30
val_302	302
val_305	305
val_306	306
val_307	614
val_308	308
val_309	618
val_310	310
val_311	933
val_315	315
val_316	948
val_317	634
val_318	954
val_321	642
val_322	644
val_323	323
val_325	650
val_327	981
val_33	33
val_331	662
val_332	332
val_333	666
val_335	335
val_336	336
val_338	338
val_339	339
val_34	34
val_341	341
val_342	684
val_344	688
val_345	345
val_348	1740
val_35	105
val_351	351
val_353	706
val_356	356
val_360	360
val_362	362
val_364	364
val_365	365
val_366	366
val_367	734
val_368	368
val_369	1107
val_37	74
val_373	373
val_374	374
val_375	375
val_377	377
val_378	378
val_379	379
val_382	764
val_384	1152
val_386	386
val_389	389
val_392	392
val_393	393
val_394	394
val_395	790
val_396	1188
val_397	794
val_399	798
val_4	4
val_400	400
val_401	2005
val_402	402
val_403	1209
val_404	808
val_406	1624
val_407	407
val_409	1227
val_41	41
val_411	411
val_413	826
val_414	828
val_417	1251
val_418	418
val_419	419
val_42	84
val_421	421
val_424	848
val_427	427
val_429	858
val_43	43
val_430	1290
val_431	1293
val_432	432
val_435	435
val_436	436
val_437	437
val_438	1314
val_439	878
val_44	44
val_443	443
val_444	444
val_446	446
val_448	448
val_449	449
val_452	452
val_453	453
val_454	1362
val_455	455
val_457	457
val_458	916
val_459	918
val_460	460
val_462	924
val_463	926
val_466	1398
val_467	467
val_468	1872
val_469	2345
val_47	47
val_470	470
val_472	472
val_475	475
val_477	477
val_478	956
val_479	479
val_480	1440
val_481	481
val_482	482
val_483	483
val_484	484
val_485	485
val_487	487
val_489	1956
val_490	490
val_491	491
val_492	984
val_493	493
val_494	494
val_495	495
val_496	496
val_497	497
val_498	1494
val_5	15
val_51	102
val_53	53
val_54	54
val_57	57
val_58	116
val_64	64
val_65	65
val_66	66
val_67	134
val_69	69
val_70	210
val_72	144
val_74	74
val_76	152
val_77	77
val_78	78
val_8	8
val_80	80
val_82	82
val_83	166
val_84	168
val_85	85
val_86	86
val_87	87
val_9	9
val_90	270
val_92	92
val_95	190
val_96	96
val_97	194
val_98	196
PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t2 PARTITION (p1='x', p2='x1')
PREHOOK: type: LOAD
PREHOOK: Output: default@t2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt' OVERWRITE INTO TABLE t2 PARTITION (p1='x', p2='x1')
POSTHOOK: type: LOAD
POSTHOOK: Output: default@t2
POSTHOOK: Output: default@t2@p1=x/p2=x1
PREHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t2) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "x")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Select Operator
              expressions:
                    expr: value
                    type: string
                    expr: key
                    type: int
              outputColumnNames: value, key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: bigint
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: p2=x1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 x
              p2 x1
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t2
              numFiles 1
              numRows 0
              partition_columns p1/p2
              rawDataSize 0
              serialization.ddl struct t2 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t2
                numFiles 2
                numPartitions 2
                numRows 0
                partition_columns p1/p2
                rawDataSize 0
                serialization.ddl struct t2 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 11624
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t2
            name: default.t2
      Truncated Path -> Alias:
        /t2/p1=x/p2=x1 [t]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t2
PREHOOK: Input: default@t2@p1=x/p2=x1
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t2@p1=x/p2=x1
#### A masked pattern was here ####
val_0	0
val_10	10
val_100	200
val_103	206
val_104	208
val_105	105
val_11	11
val_111	111
val_113	226
val_114	114
val_116	116
val_118	236
val_119	357
val_12	24
val_120	240
val_125	250
val_126	126
val_128	384
val_129	258
val_131	131
val_133	133
val_134	268
val_136	136
val_137	274
val_138	552
val_143	143
val_145	145
val_146	292
val_149	298
val_15	30
val_150	150
val_152	304
val_153	153
val_155	155
val_156	156
val_157	157
val_158	158
val_160	160
val_162	162
val_163	163
val_164	328
val_165	330
val_166	166
val_167	501
val_168	168
val_169	676
val_17	17
val_170	170
val_172	344
val_174	348
val_175	350
val_176	352
val_177	177
val_178	178
val_179	358
val_18	36
val_180	180
val_181	181
val_183	183
val_186	186
val_187	561
val_189	189
val_19	19
val_190	190
val_191	382
val_192	192
val_193	579
val_194	194
val_195	390
val_196	196
val_197	394
val_199	597
val_2	2
val_20	20
val_200	400
val_201	201
val_202	202
val_203	406
val_205	410
val_207	414
val_208	624
val_209	418
val_213	426
val_214	214
val_216	432
val_217	434
val_218	218
val_219	438
val_221	442
val_222	222
val_223	446
val_224	448
val_226	226
val_228	228
val_229	458
val_230	1150
val_233	466
val_235	235
val_237	474
val_238	476
val_239	478
val_24	48
val_241	241
val_242	484
val_244	244
val_247	247
val_248	248
val_249	249
val_252	252
val_255	510
val_256	512
val_257	257
val_258	258
val_26	52
val_260	260
val_262	262
val_263	263
val_265	530
val_266	266
val_27	27
val_272	544
val_273	819
val_274	274
val_275	275
val_277	1108
val_278	556
val_28	28
val_280	560
val_281	562
val_282	564
val_283	283
val_284	284
val_285	285
val_286	286
val_287	287
val_288	576
val_289	289
val_291	291
val_292	292
val_296	296
val_298	894
val_30	30
val_302	302
val_305	305
val_306	306
val_307	614
val_308	308
val_309	618
val_310	310
val_311	933
val_315	315
val_316	948
val_317	634
val_318	954
val_321	642
val_322	644
val_323	323
val_325	650
val_327	981
val_33	33
val_331	662
val_332	332
val_333	666
val_335	335
val_336	336
val_338	338
val_339	339
val_34	34
val_341	341
val_342	684
val_344	688
val_345	345
val_348	1740
val_35	105
val_351	351
val_353	706
val_356	356
val_360	360
val_362	362
val_364	364
val_365	365
val_366	366
val_367	734
val_368	368
val_369	1107
val_37	74
val_373	373
val_374	374
val_375	375
val_377	377
val_378	378
val_379	379
val_382	764
val_384	1152
val_386	386
val_389	389
val_392	392
val_393	393
val_394	394
val_395	790
val_396	1188
val_397	794
val_399	798
val_4	4
val_400	400
val_401	2005
val_402	402
val_403	1209
val_404	808
val_406	1624
val_407	407
val_409	1227
val_41	41
val_411	411
val_413	826
val_414	828
val_417	1251
val_418	418
val_419	419
val_42	84
val_421	421
val_424	848
val_427	427
val_429	858
val_43	43
val_430	1290
val_431	1293
val_432	432
val_435	435
val_436	436
val_437	437
val_438	1314
val_439	878
val_44	44
val_443	443
val_444	444
val_446	446
val_448	448
val_449	449
val_452	452
val_453	453
val_454	1362
val_455	455
val_457	457
val_458	916
val_459	918
val_460	460
val_462	924
val_463	926
val_466	1398
val_467	467
val_468	1872
val_469	2345
val_47	47
val_470	470
val_472	472
val_475	475
val_477	477
val_478	956
val_479	479
val_480	1440
val_481	481
val_482	482
val_483	483
val_484	484
val_485	485
val_487	487
val_489	1956
val_490	490
val_491	491
val_492	984
val_493	493
val_494	494
val_495	495
val_496	496
val_497	497
val_498	1494
val_5	15
val_51	102
val_53	53
val_54	54
val_57	57
val_58	116
val_64	64
val_65	65
val_66	66
val_67	134
val_69	69
val_70	210
val_72	144
val_74	74
val_76	152
val_77	77
val_78	78
val_8	8
val_80	80
val_82	82
val_83	166
val_84	168
val_85	85
val_86	86
val_87	87
val_9	9
val_90	270
val_92	92
val_95	190
val_96	96
val_97	194
val_98	196
PREHOOK: query: explain extended select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1) (TOK_TABNAME t2) t)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t) value)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t) key)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL t) p1) "x")) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t 
          TableScan
            alias: t
            GatherStats: false
            Select Operator
              expressions:
                    expr: value
                    type: string
                    expr: key
                    type: int
              outputColumnNames: value, key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: bigint
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: p1=x
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 x
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t1
              numFiles 1
              numRows 0
              partition_columns p1
              rawDataSize 0
              serialization.ddl struct t1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t1
                numFiles 1
                numPartitions 1
                numRows 0
                partition_columns p1
                rawDataSize 0
                serialization.ddl struct t1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t1
            name: default.t1
#### A masked pattern was here ####
          Partition
            base file name: p2=x1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              p1 x
              p2 x1
            properties:
              bucket_count -1
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.t2
              numFiles 1
              numRows 0
              partition_columns p1/p2
              rawDataSize 0
              serialization.ddl struct t2 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types int:string
#### A masked pattern was here ####
                name default.t2
                numFiles 2
                numPartitions 2
                numRows 0
                partition_columns p1/p2
                rawDataSize 0
                serialization.ddl struct t2 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 11624
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t2
            name: default.t2
      Truncated Path -> Alias:
        /t1/p1=x [t]
        /t2/p1=x/p2=x1 [t]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1
                    columns.types string:bigint
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t1@p1=x
PREHOOK: Input: default@t2
PREHOOK: Input: default@t2@p1=x/p2=x1
#### A masked pattern was here ####
POSTHOOK: query: select t.value, sum(t.key) from t1,t2 t where t.p1="x" group by t.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t1@p1=x
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t2@p1=x/p2=x1
#### A masked pattern was here ####
val_0	0
val_10	20
val_100	400
val_103	412
val_104	416
val_105	210
val_11	22
val_111	222
val_113	452
val_114	228
val_116	232
val_118	472
val_119	714
val_12	48
val_120	480
val_125	500
val_126	252
val_128	768
val_129	516
val_131	262
val_133	266
val_134	536
val_136	272
val_137	548
val_138	1104
val_143	286
val_145	290
val_146	584
val_149	596
val_15	60
val_150	300
val_152	608
val_153	306
val_155	310
val_156	312
val_157	314
val_158	316
val_160	320
val_162	324
val_163	326
val_164	656
val_165	660
val_166	332
val_167	1002
val_168	336
val_169	1352
val_17	34
val_170	340
val_172	688
val_174	696
val_175	700
val_176	704
val_177	354
val_178	356
val_179	716
val_18	72
val_180	360
val_181	362
val_183	366
val_186	372
val_187	1122
val_189	378
val_19	38
val_190	380
val_191	764
val_192	384
val_193	1158
val_194	388
val_195	780
val_196	392
val_197	788
val_199	1194
val_2	4
val_20	40
val_200	800
val_201	402
val_202	404
val_203	812
val_205	820
val_207	828
val_208	1248
val_209	836
val_213	852
val_214	428
val_216	864
val_217	868
val_218	436
val_219	876
val_221	884
val_222	444
val_223	892
val_224	896
val_226	452
val_228	456
val_229	916
val_230	2300
val_233	932
val_235	470
val_237	948
val_238	952
val_239	956
val_24	96
val_241	482
val_242	968
val_244	488
val_247	494
val_248	496
val_249	498
val_252	504
val_255	1020
val_256	1024
val_257	514
val_258	516
val_26	104
val_260	520
val_262	524
val_263	526
val_265	1060
val_266	532
val_27	54
val_272	1088
val_273	1638
val_274	548
val_275	550
val_277	2216
val_278	1112
val_28	56
val_280	1120
val_281	1124
val_282	1128
val_283	566
val_284	568
val_285	570
val_286	572
val_287	574
val_288	1152
val_289	578
val_291	582
val_292	584
val_296	592
val_298	1788
val_30	60
val_302	604
val_305	610
val_306	612
val_307	1228
val_308	616
val_309	1236
val_310	620
val_311	1866
val_315	630
val_316	1896
val_317	1268
val_318	1908
val_321	1284
val_322	1288
val_323	646
val_325	1300
val_327	1962
val_33	66
val_331	1324
val_332	664
val_333	1332
val_335	670
val_336	672
val_338	676
val_339	678
val_34	68
val_341	682
val_342	1368
val_344	1376
val_345	690
val_348	3480
val_35	210
val_351	702
val_353	1412
val_356	712
val_360	720
val_362	724
val_364	728
val_365	730
val_366	732
val_367	1468
val_368	736
val_369	2214
val_37	148
val_373	746
val_374	748
val_375	750
val_377	754
val_378	756
val_379	758
val_382	1528
val_384	2304
val_386	772
val_389	778
val_392	784
val_393	786
val_394	788
val_395	1580
val_396	2376
val_397	1588
val_399	1596
val_4	8
val_400	800
val_401	4010
val_402	804
val_403	2418
val_404	1616
val_406	3248
val_407	814
val_409	2454
val_41	82
val_411	822
val_413	1652
val_414	1656
val_417	2502
val_418	836
val_419	838
val_42	168
val_421	842
val_424	1696
val_427	854
val_429	1716
val_43	86
val_430	2580
val_431	2586
val_432	864
val_435	870
val_436	872
val_437	874
val_438	2628
val_439	1756
val_44	88
val_443	886
val_444	888
val_446	892
val_448	896
val_449	898
val_452	904
val_453	906
val_454	2724
val_455	910
val_457	914
val_458	1832
val_459	1836
val_460	920
val_462	1848
val_463	1852
val_466	2796
val_467	934
val_468	3744
val_469	4690
val_47	94
val_470	940
val_472	944
val_475	950
val_477	954
val_478	1912
val_479	958
val_480	2880
val_481	962
val_482	964
val_483	966
val_484	968
val_485	970
val_487	974
val_489	3912
val_490	980
val_491	982
val_492	1968
val_493	986
val_494	988
val_495	990
val_496	992
val_497	994
val_498	2988
val_5	30
val_51	204
val_53	106
val_54	108
val_57	114
val_58	232
val_64	128
val_65	130
val_66	132
val_67	268
val_69	138
val_70	420
val_72	288
val_74	148
val_76	304
val_77	154
val_78	156
val_8	16
val_80	160
val_82	164
val_83	332
val_84	336
val_85	170
val_86	172
val_87	174
val_9	18
val_90	540
val_92	184
val_95	380
val_96	192
val_97	388
val_98	392
