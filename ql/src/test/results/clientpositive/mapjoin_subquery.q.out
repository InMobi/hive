PREHOOK: query: -- Since the inputs are small, it should be automatically converted to mapjoin

EXPLAIN
SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: -- Since the inputs are small, it should be automatically converted to mapjoin

EXPLAIN
SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-5 depends on stages: Stage-7
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        subq:x 
          Fetch Operator
            limit: -1
        z 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        subq:x 
          TableScan
            alias: x
            Statistics: Num rows: 2 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              condition expressions:
                0 {key}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
        z 
          TableScan
            alias: z
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              condition expressions:
                0 {_col0}
                1 {value}
              keys:
                0 _col0 (type: string)
                1 key (type: string)

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  condition expressions:
                    0 {_col0}
                    1 {value}
                  keys:
                    0 _col0 (type: string)
                    1 key (type: string)
                  outputColumnNames: _col0, _col5
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col5 (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)
ORDER BY subq.key1, z.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: query: SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)
ORDER BY subq.key1, z.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
146	val_146
146	val_146
146	val_146
146	val_146
150	val_150
213	val_213
213	val_213
213	val_213
213	val_213
224	val_224
224	val_224
224	val_224
224	val_224
238	val_238
238	val_238
238	val_238
238	val_238
255	val_255
255	val_255
255	val_255
255	val_255
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
278	val_278
278	val_278
278	val_278
278	val_278
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
66	val_66
98	val_98
98	val_98
98	val_98
98	val_98
PREHOOK: query: EXPLAIN 
SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11) 
 order by subq.key1, z.value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN 
SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2 
 FROM src1 x JOIN src y ON (x.key = y.key)) subq
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11) 
 order by subq.key1, z.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-8 is a root stage
  Stage-3 depends on stages: Stage-8
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        subq:x 
          Fetch Operator
            limit: -1
        z 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        subq:x 
          TableScan
            alias: x
            Statistics: Num rows: 2 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              condition expressions:
                0 {key}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
        z 
          TableScan
            alias: z
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              condition expressions:
                0 {_col0}
                1 {value}
              keys:
                0 _col0 (type: string)
                1 key (type: string)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  condition expressions:
                    0 {_col0}
                    1 {value}
                  keys:
                    0 _col0 (type: string)
                    1 key (type: string)
                  outputColumnNames: _col0, _col5
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col5 (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string)
                      sort order: ++
                      Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string), _col1 (type: string)
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2  
 FROM src1 x JOIN src y ON (x.key = y.key)) subq 
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)  
 order by subq.key1, z.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: query: SELECT subq.key1, z.value
FROM
(SELECT x.key as key1, x.value as value1, y.key as key2, y.value as value2  
 FROM src1 x JOIN src y ON (x.key = y.key)) subq 
 JOIN srcpart z ON (subq.key1 = z.key and z.ds='2008-04-08' and z.hr=11)  
 order by subq.key1, z.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
128	val_128
146	val_146
146	val_146
146	val_146
146	val_146
150	val_150
213	val_213
213	val_213
213	val_213
213	val_213
224	val_224
224	val_224
224	val_224
224	val_224
238	val_238
238	val_238
238	val_238
238	val_238
255	val_255
255	val_255
255	val_255
255	val_255
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
273	val_273
278	val_278
278	val_278
278	val_278
278	val_278
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
311	val_311
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
369	val_369
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
406	val_406
66	val_66
98	val_98
98	val_98
98	val_98
98	val_98
