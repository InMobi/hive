PREHOOK: query: CREATE TABLE T1(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE T1(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1
PREHOOK: query: CREATE TABLE T2(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE T2(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2
PREHOOK: query: CREATE TABLE T3(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE T3(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T3
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t2
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T3.txt' INTO TABLE T3
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t3
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T3.txt' INTO TABLE T3
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t3
PREHOOK: query: EXPLAIN FROM T1 a JOIN src c ON c.key+1=a.key
SELECT a.key, a.val, c.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM T1 a JOIN src c ON c.key+1=a.key
SELECT a.key, a.val, c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: (key + 1) (type: double)
              sort order: +
              Map-reduce partition columns: (key + 1) (type: double)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: UDFToDouble(key) (type: double)
              sort order: +
              Map-reduce partition columns: UDFToDouble(key) (type: double)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string), val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col1, _col4
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), _col4 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: EXPLAIN FROM T1 a JOIN src c ON c.key+1=a.key
SELECT /*+ STREAMTABLE(a) */ a.key, a.val, c.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM T1 a JOIN src c ON c.key+1=a.key
SELECT /*+ STREAMTABLE(a) */ a.key, a.val, c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: (key + 1) (type: double)
              sort order: +
              Map-reduce partition columns: (key + 1) (type: double)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: UDFToDouble(key) (type: double)
              sort order: +
              Map-reduce partition columns: UDFToDouble(key) (type: double)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string), val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col1, _col4
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), _col4 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: FROM T1 a JOIN src c ON c.key+1=a.key
SELECT a.key, a.val, c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: FROM T1 a JOIN src c ON c.key+1=a.key
SELECT a.key, a.val, c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
1	11	0
1	11	0
1	11	0
3	13	2
PREHOOK: query: FROM T1 a JOIN src c ON c.key+1=a.key
SELECT /*+ STREAMTABLE(a) */ a.key, a.val, c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: FROM T1 a JOIN src c ON c.key+1=a.key
SELECT /*+ STREAMTABLE(a) */ a.key, a.val, c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
1	11	0
1	11	0
1	11	0
3	13	2
PREHOOK: query: EXPLAIN FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT a.key, b.key, a.val, c.val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT a.key, b.key, a.val, c.val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string), val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col1, _col4
          Statistics: Num rows: 0 Data size: 33 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string)
              sort order: +
              Map-reduce partition columns: _col1 (type: string)
              Statistics: Num rows: 0 Data size: 33 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col4 (type: string), _col0 (type: string), _col1 (type: string)
          TableScan
            alias: c
            Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: val (type: string)
              sort order: +
              Map-reduce partition columns: val (type: string)
              Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
              value expressions: val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col4} {VALUE._col5}
            1 {VALUE._col1}
          outputColumnNames: _col0, _col4, _col5, _col9
          Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: _col4 (type: string), _col0 (type: string), _col5 (type: string), _col9 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: EXPLAIN FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT /*+ STREAMTABLE(a) */ a.key, b.key, a.val, c.val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT /*+ STREAMTABLE(a) */ a.key, b.key, a.val, c.val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string), val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col1, _col4
          Statistics: Num rows: 0 Data size: 33 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string)
              sort order: +
              Map-reduce partition columns: _col1 (type: string)
              Statistics: Num rows: 0 Data size: 33 Basic stats: PARTIAL Column stats: NONE
              value expressions: _col4 (type: string), _col0 (type: string), _col1 (type: string)
          TableScan
            alias: c
            Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: val (type: string)
              sort order: +
              Map-reduce partition columns: val (type: string)
              Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
              value expressions: val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col4} {VALUE._col5}
            1 {VALUE._col1}
          outputColumnNames: _col0, _col4, _col5, _col9
          Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: _col4 (type: string), _col0 (type: string), _col5 (type: string), _col9 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 36 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT a.key, b.key, a.val, c.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT a.key, b.key, a.val, c.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
2	2	12	12
NULL	NULL	NULL	14
NULL	NULL	NULL	16
7	NULL	17	17
PREHOOK: query: FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT /*+ STREAMTABLE(a) */ a.key, b.key, a.val, c.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: FROM T1 a
  LEFT OUTER JOIN T2 b ON (b.key=a.key)
  RIGHT OUTER JOIN T3 c ON (c.val = a.val)
SELECT /*+ STREAMTABLE(a) */ a.key, b.key, a.val, c.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
2	2	12	12
NULL	NULL	NULL	14
NULL	NULL	NULL	16
7	NULL	17	17
PREHOOK: query: EXPLAIN FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT a.key, b.key, c.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT a.key, b.key, c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: c
            Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Unique Join0 to 0
               Unique Join0 to 0
               Unique Join0 to 0
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col0}
            2 {VALUE._col0}
          outputColumnNames: _col0, _col4, _col8
          Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col4 (type: string), _col8 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: EXPLAIN FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT /*+ STREAMTABLE(b) */ a.key, b.key, c.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT /*+ STREAMTABLE(b) */ a.key, b.key, c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: c
            Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 20 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string), val (type: string)
              sort order: ++
              Map-reduce partition columns: key (type: string), val (type: string)
              Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Unique Join0 to 0
               Unique Join0 to 0
               Unique Join0 to 0
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col0}
            2 {VALUE._col0}
          outputColumnNames: _col0, _col4, _col8
          Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col4 (type: string), _col8 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 66 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT a.key, b.key, c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT a.key, b.key, c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
1	NULL	NULL
2	NULL	2
NULL	2	NULL
3	3	NULL
NULL	4	4
NULL	5	NULL
NULL	NULL	6
7	NULL	7
8	8	NULL
8	8	NULL
8	NULL	NULL
PREHOOK: query: FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT /*+ STREAMTABLE(b) */ a.key, b.key, c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: FROM UNIQUEJOIN
  PRESERVE T1 a (a.key, a.val),
  PRESERVE T2 b (b.key, b.val),
  PRESERVE T3 c (c.key, c.val)
SELECT /*+ STREAMTABLE(b) */ a.key, b.key, c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
1	NULL	NULL
2	NULL	2
NULL	2	NULL
3	3	NULL
NULL	4	4
NULL	5	NULL
NULL	NULL	6
7	NULL	7
8	8	NULL
8	8	NULL
8	NULL	NULL
