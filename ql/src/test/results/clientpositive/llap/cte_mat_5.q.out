PREHOOK: query: create database mydb
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:mydb
POSTHOOK: query: create database mydb
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:mydb
PREHOOK: query: use mydb
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:mydb
POSTHOOK: query: use mydb
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:mydb
PREHOOK: query: create table q1 (colnum int, colstring string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:mydb
PREHOOK: Output: mydb@q1
POSTHOOK: query: create table q1 (colnum int, colstring string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:mydb
POSTHOOK: Output: mydb@q1
PREHOOK: query: insert into q1 values (5, 'A')
PREHOOK: type: QUERY
PREHOOK: Input: mydb@values__tmp__table__1
PREHOOK: Output: mydb@q1
POSTHOOK: query: insert into q1 values (5, 'A')
POSTHOOK: type: QUERY
POSTHOOK: Input: mydb@values__tmp__table__1
POSTHOOK: Output: mydb@q1
POSTHOOK: Lineage: q1.colnum EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: q1.colstring SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: show tables in mydb
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:mydb
POSTHOOK: query: show tables in mydb
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:mydb
q1
values__tmp__table__1
PREHOOK: query: show tables
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: show tables
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
alltypesorc
cbo_t1
cbo_t2
cbo_t3
lineitem
part
src
src1
src_cbo
src_json
src_sequencefile
src_thrift
srcbucket
srcbucket2
srcpart
PREHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-2, Stage-0
  Stage-0 depends on stages: Stage-1
  Stage-3 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = '5') (type: boolean)
                    Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: '5' (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.q1
            Execution mode: llap
            LLAP IO: no inputs

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 2 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: colnum is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: colnum (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: UDFToDouble(_col0) (type: double)
                        sort order: +
                        Map-reduce partition columns: UDFToDouble(_col0) (type: double)
                        Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int)
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        key expressions: UDFToDouble(_col0) (type: double)
                        sort order: +
                        Map-reduce partition columns: UDFToDouble(_col0) (type: double)
                        Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 UDFToDouble(_col0) (type: double)
                  1 UDFToDouble(_col0) (type: double)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-3
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@q1
PREHOOK: Input: default@src
PREHOOK: Input: mydb@q1
PREHOOK: Output: database:default
PREHOOK: Output: default@q1
#### A masked pattern was here ####
POSTHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@q1
POSTHOOK: Input: default@src
POSTHOOK: Input: mydb@q1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@q1
#### A masked pattern was here ####
5
5
5
