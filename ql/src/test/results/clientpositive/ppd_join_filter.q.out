PREHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_TABREF
            TOK_TABNAME
               src
            a
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_TABREF
                     TOK_TABNAME
                        src
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        TOK_TABLE_OR_COL
                           key
                     TOK_SELEXPR
                        TOK_FUNCTION
                           min
                           TOK_TABLE_OR_COL
                              key
                        k
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           1
                        k1
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           2
                        k2
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           3
                        k3
                  TOK_GROUPBY
                     TOK_TABLE_OR_COL
                        key
            b
         and
            =
               .
                  TOK_TABLE_OR_COL
                     a
                  key
               .
                  TOK_TABLE_OR_COL
                     b
                  key
            <
               .
                  TOK_TABLE_OR_COL
                     b
                  k1
               5
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k2
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k3


STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: min(key)
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: string)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [b:src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), (_col1 + 1) (type: double), (_col1 + 2) (type: double), (_col1 + 3) (type: double)
            outputColumnNames: _col0, _col2, _col3, _col4
            Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              isSamplingPred: false
              predicate: (_col2 < 5.0) (type: boolean)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col2,_col3,_col4
                      columns.types string,double,double,double
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: key (type: string)
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              tag: 1
              value expressions: _col3 (type: double), _col4 (type: double)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col2,_col3,_col4
              columns.types string,double,double,double
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col2,_col3,_col4
                columns.types string,double,double,double
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [a]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col3} {VALUE._col4}
          outputColumnNames: _col0, _col7, _col8
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col7 (type: double), _col8 (type: double)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1,_col2
                    columns.types string:double:double
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	2.0	3.0
0	2.0	3.0
0	2.0	3.0
2	4.0	5.0
PREHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_TABREF
            TOK_TABNAME
               src
            a
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_TABREF
                     TOK_TABNAME
                        src
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        TOK_TABLE_OR_COL
                           key
                     TOK_SELEXPR
                        TOK_FUNCTION
                           min
                           TOK_TABLE_OR_COL
                              key
                        k
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           1
                        k1
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           2
                        k2
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           3
                        k3
                  TOK_GROUPBY
                     TOK_TABLE_OR_COL
                        key
            b
         and
            =
               .
                  TOK_TABLE_OR_COL
                     a
                  key
               .
                  TOK_TABLE_OR_COL
                     b
                  key
            <
               .
                  TOK_TABLE_OR_COL
                     b
                  k1
               5
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k2
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k3


STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: min(key)
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: string)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [b:src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), (_col1 + 1) (type: double), (_col1 + 2) (type: double), (_col1 + 3) (type: double)
            outputColumnNames: _col0, _col2, _col3, _col4
            Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              isSamplingPred: false
              predicate: (_col2 < 5.0) (type: boolean)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col2,_col3,_col4
                      columns.types string,double,double,double
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: key (type: string)
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              tag: 1
              value expressions: _col3 (type: double), _col4 (type: double)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col2,_col3,_col4
              columns.types string,double,double,double
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col2,_col3,_col4
                columns.types string,double,double,double
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [a]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col3} {VALUE._col4}
          outputColumnNames: _col0, _col7, _col8
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col7 (type: double), _col8 (type: double)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1,_col2
                    columns.types string:double:double
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	2.0	3.0
0	2.0	3.0
0	2.0	3.0
2	4.0	5.0
PREHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_TABREF
            TOK_TABNAME
               src
            a
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_TABREF
                     TOK_TABNAME
                        src
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        TOK_TABLE_OR_COL
                           key
                     TOK_SELEXPR
                        TOK_FUNCTION
                           min
                           TOK_TABLE_OR_COL
                              key
                        k
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           1
                        k1
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           2
                        k2
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           3
                        k3
                  TOK_GROUPBY
                     TOK_TABLE_OR_COL
                        key
            b
         and
            =
               .
                  TOK_TABLE_OR_COL
                     a
                  key
               .
                  TOK_TABLE_OR_COL
                     b
                  key
            <
               .
                  TOK_TABLE_OR_COL
                     b
                  k1
               5
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k2
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k3


STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: min(key)
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: string)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [b:src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), (_col1 + 1) (type: double), (_col1 + 2) (type: double), (_col1 + 3) (type: double)
            outputColumnNames: _col0, _col2, _col3, _col4
            Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              isSamplingPred: false
              predicate: (_col2 < 5.0) (type: boolean)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col2,_col3,_col4
                      columns.types string,double,double,double
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: key (type: string)
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              tag: 1
              value expressions: _col3 (type: double), _col4 (type: double)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col2,_col3,_col4
              columns.types string,double,double,double
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col2,_col3,_col4
                columns.types string,double,double,double
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [a]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col3} {VALUE._col4}
          outputColumnNames: _col0, _col7, _col8
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col7 (type: double), _col8 (type: double)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1,_col2
                    columns.types string:double:double
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	2.0	3.0
0	2.0	3.0
0	2.0	3.0
2	4.0	5.0
PREHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_TABREF
            TOK_TABNAME
               src
            a
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_TABREF
                     TOK_TABNAME
                        src
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        TOK_TABLE_OR_COL
                           key
                     TOK_SELEXPR
                        TOK_FUNCTION
                           min
                           TOK_TABLE_OR_COL
                              key
                        k
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           1
                        k1
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           2
                        k2
                     TOK_SELEXPR
                        +
                           TOK_FUNCTION
                              min
                              TOK_TABLE_OR_COL
                                 key
                           3
                        k3
                  TOK_GROUPBY
                     TOK_TABLE_OR_COL
                        key
            b
         and
            =
               .
                  TOK_TABLE_OR_COL
                     a
                  key
               .
                  TOK_TABLE_OR_COL
                     b
                  key
            <
               .
                  TOK_TABLE_OR_COL
                     b
                  k1
               5
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k2
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               k3


STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: min(key)
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: string)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [b:src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), (_col1 + 1) (type: double), (_col1 + 2) (type: double), (_col1 + 3) (type: double)
            outputColumnNames: _col0, _col2, _col3, _col4
            Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              isSamplingPred: false
              predicate: (_col2 < 5.0) (type: boolean)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col2,_col3,_col4
                      columns.types string,double,double,double
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: key (type: string)
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 9 Data size: 901 Basic stats: COMPLETE Column stats: NONE
              tag: 1
              value expressions: _col3 (type: double), _col4 (type: double)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col2,_col3,_col4
              columns.types string,double,double,double
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col2,_col3,_col4
                columns.types string,double,double,double
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [a]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col3} {VALUE._col4}
          outputColumnNames: _col0, _col7, _col8
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col7 (type: double), _col8 (type: double)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    columns _col0,_col1,_col2
                    columns.types string:double:double
                    escape.delim \
                    hive.serialization.extend.nesting.levels true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select a.key, b.k2, b.k3
from src a
join (
select key,
min(key) as k,
min(key)+1 as k1,
min(key)+2 as k2,
min(key)+3 as k3
from src
group by key
) b
on a.key=b.key and b.k1 < 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	2.0	3.0
0	2.0	3.0
0	2.0	3.0
2	4.0	5.0
