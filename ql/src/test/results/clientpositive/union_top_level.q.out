PREHOOK: query: -- top level
explain
select * from (
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
) q1 order by key
PREHOOK: type: QUERY
POSTHOOK: query: -- top level
explain
select * from (
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
) q1 order by key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-3, Stage-4
  Stage-3 is a root stage
  Stage-4 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 1) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: int)
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: int)
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 0) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 2) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 2 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select * from (
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
) q1 order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from (
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
) q1 order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
165	0
238	1
255	0
27	0
278	2
311	2
409	1
484	1
86	2
PREHOOK: query: explain
select * from (
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
union all
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
) q1 order by k
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from (
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
union all
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
) q1 order by k
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-3 depends on stages: Stage-2, Stage-6
  Stage-5 is a root stage
  Stage-6 depends on stages: Stage-5
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: s1
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: s2
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: value (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col1}
          outputColumnNames: _col0, _col5
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col5 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            Limit
              Number of rows: 10
              Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 10
            Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: string)
          TableScan
            Union
              Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 20 Data size: 2020 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: s2
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: value (type: string)
          TableScan
            alias: s1
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col1}
          outputColumnNames: _col0, _col5
          Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col5 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
            Limit
              Number of rows: 10
              Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 10
            Statistics: Num rows: 10 Data size: 1010 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select * from (
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
union all
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
) q1 order by k
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from (
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
union all
select s1.key as k, s2.value as v from src s1 join src s2 on (s1.key = s2.key) limit 10
) q1 order by k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
10	val_10
10	val_10
PREHOOK: query: -- ctas
explain
create table union_top as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: query: -- ctas
explain
create table union_top as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: CREATETABLE_AS_SELECT
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-9, Stage-10
  Stage-8 depends on stages: Stage-2 , consists of Stage-5, Stage-4, Stage-6
  Stage-5
  Stage-0 depends on stages: Stage-5, Stage-4, Stage-7
  Stage-11 depends on stages: Stage-0
  Stage-3 depends on stages: Stage-11
  Stage-4
  Stage-6
  Stage-7 depends on stages: Stage-6
  Stage-9 is a root stage
  Stage-10 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 0) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top

  Stage: Stage-8
    Conditional Operator

  Stage: Stage-5
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-11
      Create Table Operator:
        Create Table
          columns: key string, value int
          input format: org.apache.hadoop.mapred.TextInputFormat
          output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          name: union_top

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-7
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 1) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-10
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 2) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 2 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

PREHOOK: query: create table union_top as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
POSTHOOK: query: create table union_top as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: default@union_top
PREHOOK: query: select * from union_top order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@union_top
#### A masked pattern was here ####
POSTHOOK: query: select * from union_top order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_top
#### A masked pattern was here ####
165	0
238	1
255	0
27	0
278	2
311	2
409	1
484	1
86	2
PREHOOK: query: truncate table union_top
PREHOOK: type: TRUNCATETABLE
PREHOOK: Output: default@union_top
POSTHOOK: query: truncate table union_top
POSTHOOK: type: TRUNCATETABLE
POSTHOOK: Output: default@union_top
PREHOOK: query: -- insert into
explain
insert into table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: QUERY
POSTHOOK: query: -- insert into
explain
insert into table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-9, Stage-10
  Stage-8 depends on stages: Stage-2 , consists of Stage-5, Stage-4, Stage-6
  Stage-5
  Stage-0 depends on stages: Stage-5, Stage-4, Stage-7
  Stage-3 depends on stages: Stage-0
  Stage-4
  Stage-6
  Stage-7 depends on stages: Stage-6
  Stage-9 is a root stage
  Stage-10 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 0) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top

  Stage: Stage-8
    Conditional Operator

  Stage: Stage-5
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.union_top

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-7
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 1) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-10
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 2) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 2 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

PREHOOK: query: insert into table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@union_top
POSTHOOK: query: insert into table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@union_top
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
PREHOOK: query: select * from union_top order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@union_top
#### A masked pattern was here ####
POSTHOOK: query: select * from union_top order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_top
#### A masked pattern was here ####
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
165	0
238	1
255	0
27	0
278	2
311	2
409	1
484	1
86	2
PREHOOK: query: explain
insert overwrite table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: QUERY
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-9, Stage-10
  Stage-8 depends on stages: Stage-2 , consists of Stage-5, Stage-4, Stage-6
  Stage-5
  Stage-0 depends on stages: Stage-5, Stage-4, Stage-7
  Stage-3 depends on stages: Stage-0
  Stage-4
  Stage-6
  Stage-7 depends on stages: Stage-6
  Stage-9 is a root stage
  Stage-10 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 0) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top
          TableScan
            Union
              Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 9 Data size: 900 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.union_top

  Stage: Stage-8
    Conditional Operator

  Stage: Stage-5
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.union_top

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.union_top

  Stage: Stage-7
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 1) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-10
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key % 3) = 2) (type: boolean)
              Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), 2 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 2906 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: string), _col1 (type: int)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 3
            Statistics: Num rows: 3 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

PREHOOK: query: insert overwrite table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@union_top
POSTHOOK: query: insert overwrite table union_top
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@union_top
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
PREHOOK: query: select * from union_top order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@union_top
#### A masked pattern was here ####
POSTHOOK: query: select * from union_top order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_top
#### A masked pattern was here ####
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
165	0
238	1
255	0
27	0
278	2
311	2
409	1
484	1
86	2
PREHOOK: query: -- create view
explain
create view union_top_view as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: CREATEVIEW
POSTHOOK: query: -- create view
explain
create view union_top_view as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: CREATEVIEW
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
      Create View Operator:
        Create View
          or replace: false
          columns: key string, value int
          expanded text: select `src`.`key`, 0 as `value` from `default`.`src` where `src`.`key` % 3 == 0 limit 3
union all
select `src`.`key`, 1 as `value` from `default`.`src` where `src`.`key` % 3 == 1 limit 3
union all
select `src`.`key`, 2 as `value` from `default`.`src` where `src`.`key` % 3 == 2 limit 3
          name: union_top_view
          original text: select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3

PREHOOK: query: create view union_top_view as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
POSTHOOK: query: create view union_top_view as
select key, 0 as value from src where key % 3 == 0 limit 3
union all
select key, 1 as value from src where key % 3 == 1 limit 3
union all
select key, 2 as value from src where key % 3 == 2 limit 3
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: default@union_top_view
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
PREHOOK: query: select * from union_top_view order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@union_top_view
#### A masked pattern was here ####
POSTHOOK: query: select * from union_top_view order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@union_top_view
#### A masked pattern was here ####
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
165	0
238	1
255	0
27	0
278	2
311	2
409	1
484	1
86	2
PREHOOK: query: drop table union_top
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@union_top
PREHOOK: Output: default@union_top
POSTHOOK: query: drop table union_top
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@union_top
POSTHOOK: Output: default@union_top
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
PREHOOK: query: drop view union_top_view
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@union_top_view
PREHOOK: Output: default@union_top_view
POSTHOOK: query: drop view union_top_view
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@union_top_view
POSTHOOK: Output: default@union_top_view
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: union_top.value EXPRESSION []
POSTHOOK: Lineage: union_top.value EXPRESSION []
