PREHOOK: query: create table dual(a string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: create table dual(a string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dual
PREHOOK: query: drop table if exists test_tbl
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists test_tbl
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table test_tbl (id string,name string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: create table test_tbl (id string,name string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_tbl
PREHOOK: query: insert into table test_tbl
select 'a','b' from dual
PREHOOK: type: QUERY
PREHOOK: Input: default@dual
PREHOOK: Output: default@test_tbl
POSTHOOK: query: insert into table test_tbl
select 'a','b' from dual
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dual
POSTHOOK: Output: default@test_tbl
POSTHOOK: Lineage: test_tbl.id SIMPLE []
POSTHOOK: Lineage: test_tbl.name SIMPLE []
PREHOOK: query: explain
select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
POSTHOOK: type: QUERY
POSTHOOK: Lineage: test_tbl.id SIMPLE []
POSTHOOK: Lineage: test_tbl.name SIMPLE []
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: test_tbl
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: ((name = 'c') and (id = 'a')) (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Select Operator
                expressions: id (type: string), name (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: (id = 'a') (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: id (type: string)
                sort order: +
                Map-reduce partition columns: id (type: string)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_tbl
#### A masked pattern was here ####
POSTHOOK: query: select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_tbl
#### A masked pattern was here ####
POSTHOOK: Lineage: test_tbl.id SIMPLE []
POSTHOOK: Lineage: test_tbl.name SIMPLE []
