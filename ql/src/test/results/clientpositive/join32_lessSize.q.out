PREHOOK: query: CREATE TABLE dest_j1(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE dest_j1(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_j1
PREHOOK: query: CREATE TABLE dest_j2(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE dest_j2(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_j2
PREHOOK: query: -- Since the inputs are small, it should be automatically converted to mapjoin

EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: -- Since the inputs are small, it should be automatically converted to mapjoin

EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_JOIN
            TOK_TABREF
               TOK_TABNAME
                  src1
               x
            TOK_TABREF
               TOK_TABNAME
                  src
               y
            =
               .
                  TOK_TABLE_OR_COL
                     x
                  key
               .
                  TOK_TABLE_OR_COL
                     y
                  key
         TOK_TABREF
            TOK_TABNAME
               srcpart
            z
         and
            and
               =
                  .
                     TOK_TABLE_OR_COL
                        x
                     value
                  .
                     TOK_TABLE_OR_COL
                        z
                     value
               =
                  .
                     TOK_TABLE_OR_COL
                        z
                     ds
                  '2008-04-08'
            =
               .
                  TOK_TABLE_OR_COL
                     z
                  hr
               11
   TOK_INSERT
      TOK_DESTINATION
         TOK_TAB
            TOK_TABNAME
               dest_j1
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  x
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  z
               value
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  y
               value


STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-5 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-5
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key} {value}
                1 {value}
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0, _col1, _col5
              Position of Big Table: 1
              Statistics: Num rows: 31 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col1,_col5
                      columns.types string,string,string
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            x 
              TableScan
                alias: x
                Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src [y]

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {_col5} {_col0}
                1 {value}
              keys:
                0 _col1 (type: string)
                1 value (type: string)
              outputColumnNames: _col1, _col4, _col9
              Position of Big Table: 0
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col4 (type: string), _col9 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j1
                        serialization.ddl struct dest_j1 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j1
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            z 
              Fetch Operator
                limit: -1
                Partition Description:
                    Partition
                      base file name: hr=11
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      partition values:
                        ds 2008-04-08
                        hr 11
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value
                        columns.types string:string
#### A masked pattern was here ####
                        name default.srcpart
                        numFiles 1
                        numRows 0
                        partition_columns ds/hr
                        rawDataSize 0
                        serialization.ddl struct srcpart { string key, string value}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 5812
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucket_count -1
                          columns key,value
                          columns.types string:string
#### A masked pattern was here ####
                          name default.srcpart
                          partition_columns ds/hr
                          serialization.ddl struct srcpart { string key, string value}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.srcpart
                      name: default.srcpart
          Alias -> Map Local Operator Tree:
            z 
              TableScan
                alias: z
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col1,_col5
              columns.types string,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col1,_col5
                columns.types string,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: hr=11
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
              hr 11
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.srcpart
              numFiles 1
              numRows 0
              partition_columns ds/hr
              rawDataSize 0
              serialization.ddl struct srcpart { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.srcpart
                partition_columns ds/hr
                serialization.ddl struct srcpart { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcpart
            name: default.srcpart
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value,val2
                columns.types string:string:string
#### A masked pattern was here ####
                name default.dest_j1
                serialization.ddl struct dest_j1 { string key, string value, string val2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j1

  Stage: Stage-2
    Stats-Aggr Operator
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j1
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j1
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j1 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j1 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src w JOIN src1 x ON (x.value = w.value) 
JOIN src y ON (x.key = y.key) 
JOIN src1 z ON (x.key = z.key)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src w JOIN src1 x ON (x.value = w.value) 
JOIN src y ON (x.key = y.key) 
JOIN src1 z ON (x.key = z.key)
POSTHOOK: type: QUERY
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_JOIN
            TOK_JOIN
               TOK_TABREF
                  TOK_TABNAME
                     src
                  w
               TOK_TABREF
                  TOK_TABNAME
                     src1
                  x
               =
                  .
                     TOK_TABLE_OR_COL
                        x
                     value
                  .
                     TOK_TABLE_OR_COL
                        w
                     value
            TOK_TABREF
               TOK_TABNAME
                  src
               y
            =
               .
                  TOK_TABLE_OR_COL
                     x
                  key
               .
                  TOK_TABLE_OR_COL
                     y
                  key
         TOK_TABREF
            TOK_TABNAME
               src1
            z
         =
            .
               TOK_TABLE_OR_COL
                  x
               key
            .
               TOK_TABLE_OR_COL
                  z
               key
   TOK_INSERT
      TOK_DESTINATION
         TOK_TAB
            TOK_TABNAME
               dest_j1
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  x
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  z
               value
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  y
               value


STAGE DEPENDENCIES:
  Stage-11 is a root stage
  Stage-10 depends on stages: Stage-11 , consists of Stage-7, Stage-8, Stage-9, Stage-2
  Stage-7 has a backup stage: Stage-2
  Stage-0 depends on stages: Stage-2, Stage-7, Stage-8, Stage-9
  Stage-3 depends on stages: Stage-0
  Stage-8 has a backup stage: Stage-2
  Stage-9 has a backup stage: Stage-2
  Stage-2

STAGE PLANS:
  Stage: Stage-11
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: w
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 
                1 {key}
              keys:
                0 value (type: string)
                1 value (type: string)
              outputColumnNames: _col4
              Position of Big Table: 0
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col4
                      columns.types string
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            x 
              TableScan
                alias: x
                Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src [w]

  Stage: Stage-10
    Conditional Operator

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              condition expressions:
                0 {_col4}
                1 {value}
                2 {value}
              keys:
                0 _col4 (type: string)
                1 key (type: string)
                2 key (type: string)
              outputColumnNames: _col4, _col9, _col13
              Position of Big Table: 0
              Select Operator
                expressions: _col4 (type: string), _col13 (type: string), _col9 (type: string)
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j1
                        numFiles 1
                        numRows 85
                        rawDataSize 1600
                        serialization.ddl struct dest_j1 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 1685
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j1
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            y 
              Fetch Operator
                limit: -1
            z 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            y 
              TableScan
                alias: y
                GatherStats: false
            z 
              TableScan
                alias: z
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col4
              columns.types string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col4
                columns.types string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value,val2
                columns.types string:string:string
#### A masked pattern was here ####
                name default.dest_j1
                numFiles 1
                numRows 85
                rawDataSize 1600
                serialization.ddl struct dest_j1 { string key, string value, string val2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 1685
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j1

  Stage: Stage-3
    Stats-Aggr Operator
#### A masked pattern was here ####

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              condition expressions:
                0 {_col4}
                1 {value}
                2 {value}
              keys:
                0 _col4 (type: string)
                1 key (type: string)
                2 key (type: string)
              outputColumnNames: _col4, _col9, _col13
              Position of Big Table: 1
              Select Operator
                expressions: _col4 (type: string), _col13 (type: string), _col9 (type: string)
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j1
                        numFiles 1
                        numRows 85
                        rawDataSize 1600
                        serialization.ddl struct dest_j1 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 1685
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j1
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            $INTNAME 
              Fetch Operator
                limit: -1
            z 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            $INTNAME 
              TableScan
                GatherStats: false
            z 
              TableScan
                alias: z
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col4
              columns.types string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col4
                columns.types string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src [y]

  Stage: Stage-9
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: z
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              condition expressions:
                0 {_col4}
                1 {value}
                2 {value}
              keys:
                0 _col4 (type: string)
                1 key (type: string)
                2 key (type: string)
              outputColumnNames: _col4, _col9, _col13
              Position of Big Table: 2
              Select Operator
                expressions: _col4 (type: string), _col13 (type: string), _col9 (type: string)
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j1
                        numFiles 1
                        numRows 85
                        rawDataSize 1600
                        serialization.ddl struct dest_j1 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 1685
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j1
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            $INTNAME 
              Fetch Operator
                limit: -1
            y 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            $INTNAME 
              TableScan
                GatherStats: false
            y 
              TableScan
                alias: y
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col4
              columns.types string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col4
                columns.types string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src1 [z]

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col4 (type: string)
              sort order: +
              Map-reduce partition columns: _col4 (type: string)
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: _col4 (type: string)
          TableScan
            alias: z
            Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
              tag: 2
              value expressions: value (type: string)
          TableScan
            alias: y
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              tag: 1
              value expressions: value (type: string)
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col4
              columns.types string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col4
                columns.types string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src [y]
        /src1 [z]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Inner Join 0 to 2
          condition expressions:
            0 {VALUE._col4}
            1 {VALUE._col1}
            2 {VALUE._col1}
          outputColumnNames: _col4, _col9, _col13
          Statistics: Num rows: 138 Data size: 14064 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col4 (type: string), _col13 (type: string), _col9 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 138 Data size: 14064 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 1
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 138 Data size: 14064 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE true
                    bucket_count -1
                    columns key,value,val2
                    columns.types string:string:string
#### A masked pattern was here ####
                    name default.dest_j1
                    numFiles 1
                    numRows 85
                    rawDataSize 1600
                    serialization.ddl struct dest_j1 { string key, string value, string val2}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 1685
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest_j1
              TotalFiles: 1
              GatherStats: true
              MultiFileSpray: false

PREHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src w JOIN src1 x ON (x.value = w.value) 
JOIN src y ON (x.key = y.key) 
JOIN src1 z ON (x.key = z.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Output: default@dest_j1
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
SELECT x.key, z.value, y.value
FROM src w JOIN src1 x ON (x.value = w.value) 
JOIN src y ON (x.key = y.key) 
JOIN src1 z ON (x.key = z.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@dest_j1
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j1 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j1 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j1
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_JOIN
                     TOK_TABREF
                        TOK_TABNAME
                           src1
                        x
                     TOK_TABREF
                        TOK_TABNAME
                           src
                        y
                     =
                        .
                           TOK_TABLE_OR_COL
                              x
                           key
                        .
                           TOK_TABLE_OR_COL
                              y
                           key
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        .
                           TOK_TABLE_OR_COL
                              x
                           key
                     TOK_SELEXPR
                        .
                           TOK_TABLE_OR_COL
                              x
                           value
            res
         TOK_TABREF
            TOK_TABNAME
               srcpart
            z
         and
            and
               =
                  .
                     TOK_TABLE_OR_COL
                        res
                     value
                  .
                     TOK_TABLE_OR_COL
                        z
                     value
               =
                  .
                     TOK_TABLE_OR_COL
                        z
                     ds
                  '2008-04-08'
            =
               .
                  TOK_TABLE_OR_COL
                     z
                  hr
               11
   TOK_INSERT
      TOK_DESTINATION
         TOK_TAB
            TOK_TABNAME
               dest_j2
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  res
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  z
               value
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  res
               value


STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-6 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-6
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key} {value}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0, _col1
              Position of Big Table: 1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1
                        columns.types string,string
                        escape.delim \
                        serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            res:x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            res:x 
              TableScan
                alias: x
                Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src [res:y]

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {_col0} {_col1}
                1 {value}
              keys:
                0 _col1 (type: string)
                1 value (type: string)
              outputColumnNames: _col0, _col1, _col3
              Position of Big Table: 0
              Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col3 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j2
                        serialization.ddl struct dest_j2 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j2
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            z 
              Fetch Operator
                limit: -1
                Partition Description:
                    Partition
                      base file name: hr=11
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      partition values:
                        ds 2008-04-08
                        hr 11
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value
                        columns.types string:string
#### A masked pattern was here ####
                        name default.srcpart
                        numFiles 1
                        numRows 0
                        partition_columns ds/hr
                        rawDataSize 0
                        serialization.ddl struct srcpart { string key, string value}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 5812
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucket_count -1
                          columns key,value
                          columns.types string:string
#### A masked pattern was here ####
                          name default.srcpart
                          partition_columns ds/hr
                          serialization.ddl struct srcpart { string key, string value}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.srcpart
                      name: default.srcpart
          Alias -> Map Local Operator Tree:
            z 
              TableScan
                alias: z
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col1
              columns.types string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col1
                columns.types string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: hr=11
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
              hr 11
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.srcpart
              numFiles 1
              numRows 0
              partition_columns ds/hr
              rawDataSize 0
              serialization.ddl struct srcpart { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.srcpart
                partition_columns ds/hr
                serialization.ddl struct srcpart { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcpart
            name: default.srcpart
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value,val2
                columns.types string:string:string
#### A masked pattern was here ####
                name default.dest_j2
                serialization.ddl struct dest_j2 { string key, string value, string val2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j2

  Stage: Stage-3
    Stats-Aggr Operator
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j2
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j2
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j2 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j2 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x LEFT OUTER JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x LEFT OUTER JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_SUBQUERY
            TOK_QUERY
               TOK_FROM
                  TOK_LEFTOUTERJOIN
                     TOK_TABREF
                        TOK_TABNAME
                           src1
                        x
                     TOK_TABREF
                        TOK_TABNAME
                           src
                        y
                     =
                        .
                           TOK_TABLE_OR_COL
                              x
                           key
                        .
                           TOK_TABLE_OR_COL
                              y
                           key
               TOK_INSERT
                  TOK_DESTINATION
                     TOK_DIR
                        TOK_TMP_FILE
                  TOK_SELECT
                     TOK_SELEXPR
                        .
                           TOK_TABLE_OR_COL
                              x
                           key
                     TOK_SELEXPR
                        .
                           TOK_TABLE_OR_COL
                              x
                           value
            res
         TOK_TABREF
            TOK_TABNAME
               srcpart
            z
         and
            and
               =
                  .
                     TOK_TABLE_OR_COL
                        res
                     value
                  .
                     TOK_TABLE_OR_COL
                        z
                     value
               =
                  .
                     TOK_TABLE_OR_COL
                        z
                     ds
                  '2008-04-08'
            =
               .
                  TOK_TABLE_OR_COL
                     z
                  hr
               11
   TOK_INSERT
      TOK_DESTINATION
         TOK_TAB
            TOK_TABNAME
               dest_j2
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  res
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  z
               value
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  res
               value


STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-6 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-6
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: x
            Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Map Join Operator
              condition map:
                   Left Outer Join0 to 1
              condition expressions:
                0 {key} {value}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0, _col1
              Position of Big Table: 0
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1
                        columns.types string,string
                        escape.delim \
                        serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            res:y 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            res:y 
              TableScan
                alias: y
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
#### A masked pattern was here ####
          Partition
            base file name: src1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.src1
              numFiles 1
              numRows 0
              rawDataSize 0
              serialization.ddl struct src1 { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 216
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.src1
                numFiles 1
                numRows 0
                rawDataSize 0
                serialization.ddl struct src1 { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 216
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src1
            name: default.src1
      Truncated Path -> Alias:
        /src1 [res:x]

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {_col0} {_col1}
                1 {value}
              keys:
                0 _col1 (type: string)
                1 value (type: string)
              outputColumnNames: _col0, _col1, _col3
              Position of Big Table: 0
              Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col3 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value,val2
                        columns.types string:string:string
#### A masked pattern was here ####
                        name default.dest_j2
                        numFiles 1
                        numRows 85
                        rawDataSize 1600
                        serialization.ddl struct dest_j2 { string key, string value, string val2}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 1685
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j2
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            z 
              Fetch Operator
                limit: -1
                Partition Description:
                    Partition
                      base file name: hr=11
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      partition values:
                        ds 2008-04-08
                        hr 11
                      properties:
                        COLUMN_STATS_ACCURATE true
                        bucket_count -1
                        columns key,value
                        columns.types string:string
#### A masked pattern was here ####
                        name default.srcpart
                        numFiles 1
                        numRows 0
                        partition_columns ds/hr
                        rawDataSize 0
                        serialization.ddl struct srcpart { string key, string value}
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        totalSize 5812
#### A masked pattern was here ####
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucket_count -1
                          columns key,value
                          columns.types string:string
#### A masked pattern was here ####
                          name default.srcpart
                          partition_columns ds/hr
                          serialization.ddl struct srcpart { string key, string value}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.srcpart
                      name: default.srcpart
          Alias -> Map Local Operator Tree:
            z 
              TableScan
                alias: z
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                GatherStats: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10001
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              columns _col0,_col1
              columns.types string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                columns _col0,_col1
                columns.types string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: hr=11
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
              hr 11
            properties:
              COLUMN_STATS_ACCURATE true
              bucket_count -1
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.srcpart
              numFiles 1
              numRows 0
              partition_columns ds/hr
              rawDataSize 0
              serialization.ddl struct srcpart { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                columns key,value
                columns.types string:string
#### A masked pattern was here ####
                name default.srcpart
                partition_columns ds/hr
                serialization.ddl struct srcpart { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcpart
            name: default.srcpart
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE true
                bucket_count -1
                columns key,value,val2
                columns.types string:string:string
#### A masked pattern was here ####
                name default.dest_j2
                numFiles 1
                numRows 85
                rawDataSize 1600
                serialization.ddl struct dest_j2 { string key, string value, string val2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 1685
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j2

  Stage: Stage-3
    Stats-Aggr Operator
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x LEFT OUTER JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j2
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, z.value, res.value
FROM (select x.key, x.value from src1 x LEFT OUTER JOIN src y ON (x.key = y.key)) res 
JOIN srcpart z ON (res.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j2
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j2 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j2 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
	val_165	val_165
	val_165	val_165
	val_193	val_193
	val_193	val_193
	val_193	val_193
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
	val_265	val_265
	val_265	val_265
	val_27	val_27
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
	val_409	val_409
	val_409	val_409
	val_409	val_409
	val_484	val_484
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, x.value, res.value  
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart x ON (res.value = x.value and x.ds='2008-04-08' and x.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, x.value, res.value  
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart x ON (res.value = x.value and x.ds='2008-04-08' and x.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-6 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-6
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key} {value}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            res:x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            res:x 
              TableScan
                alias: x
                Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {_col0} {_col1}
                1 {value}
              keys:
                0 _col1 (type: string)
                1 value (type: string)
              outputColumnNames: _col0, _col1, _col3
              Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col3 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j2
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            x 
              TableScan
                alias: x
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j2

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, x.value, res.value  
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart x ON (res.value = x.value and x.ds='2008-04-08' and x.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j2
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, x.value, res.value  
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart x ON (res.value = x.value and x.ds='2008-04-08' and x.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j2
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)x.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j2 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j2 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)x.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, y.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart y ON (res.value = y.value and y.ds='2008-04-08' and y.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_j2
SELECT res.key, y.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart y ON (res.value = y.value and y.ds='2008-04-08' and y.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)x.FieldSchema(name:value, type:string, comment:default), ]
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-6 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-6
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: y
            Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {key} {value}
                1 
              keys:
                0 key (type: string)
                1 key (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 63 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            res:x 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            res:x 
              TableScan
                alias: x
                Statistics: Num rows: 1 Data size: 216 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              condition expressions:
                0 {_col0} {_col1}
                1 {value}
              keys:
                0 _col1 (type: string)
                1 value (type: string)
              outputColumnNames: _col0, _col1, _col3
              Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col3 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 69 Data size: 7032 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_j2
      Local Work:
        Map Reduce Local Work
          Alias -> Map Local Tables:
            y 
              Fetch Operator
                limit: -1
          Alias -> Map Local Operator Tree:
            y 
              TableScan
                alias: y
                Statistics: Num rows: 58 Data size: 5812 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_j2

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, y.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart y ON (res.value = y.value and y.ds='2008-04-08' and y.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@dest_j2
POSTHOOK: query: INSERT OVERWRITE TABLE dest_j2
SELECT res.key, y.value, res.value
FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
JOIN srcpart y ON (res.value = y.value and y.ds='2008-04-08' and y.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@dest_j2
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)y.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from dest_j2 x order by x.value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: query: select * from dest_j2 x order by x.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_j2
#### A masked pattern was here ####
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 EXPRESSION [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.val2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j1.value SIMPLE [(src1)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.val2 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_j2.value SIMPLE [(srcpart)y.FieldSchema(name:value, type:string, comment:default), ]
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
146	val_146	val_146
150	val_150	val_150
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
213	val_213	val_213
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
238	val_238	val_238
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
278	val_278	val_278
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
311	val_311	val_311
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
401	val_401	val_401
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
66	val_66	val_66
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
98	val_98	val_98
