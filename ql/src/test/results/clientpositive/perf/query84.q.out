PREHOOK: query: explain select c_customer_id as customer_id ,concat(c_last_name, ', ', c_first_name) as customername from customer ,customer_address ,customer_demographics ,household_demographics ,income_band ,store_returns where ca_city = 'Hopewell' and customer.c_current_addr_sk = customer_address.ca_address_sk and ib_lower_bound >= 32287 and ib_upper_bound <= 32287 + 50000 and income_band.ib_income_band_sk = household_demographics.hd_income_band_sk and customer_demographics.cd_demo_sk = customer.c_current_cdemo_sk and household_demographics.hd_demo_sk = customer.c_current_hdemo_sk and store_returns.sr_cdemo_sk = customer_demographics.cd_demo_sk order by customer_id limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select c_customer_id as customer_id ,concat(c_last_name, ', ', c_first_name) as customername from customer ,customer_address ,customer_demographics ,household_demographics ,income_band ,store_returns where ca_city = 'Hopewell' and customer.c_current_addr_sk = customer_address.ca_address_sk and ib_lower_bound >= 32287 and ib_upper_bound <= 32287 + 50000 and income_band.ib_income_band_sk = household_demographics.hd_income_band_sk and customer_demographics.cd_demo_sk = customer.c_current_cdemo_sk and household_demographics.hd_demo_sk = customer.c_current_hdemo_sk and store_returns.sr_cdemo_sk = customer_demographics.cd_demo_sk order by customer_id limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 11 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 10 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_35]
        Limit [LIM_34] (rows=100 width=860)
          Number of rows:100
          Select Operator [SEL_33] (rows=234256017 width=860)
            Output:["_col0","_col1"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_32]
              Select Operator [SEL_31] (rows=234256017 width=860)
                Output:["_col0","_col1"]
                Merge Join Operator [MERGEJOIN_66] (rows=234256017 width=860)
                  Conds:RS_28._col11=RS_29._col0(Inner),Output:["_col0","_col4","_col5"]
                <-Map 10 [SIMPLE_EDGE]
                  SHUFFLE [RS_29]
                    PartitionCols:_col0
                    Select Operator [SEL_14] (rows=2 width=12)
                      Output:["_col0"]
                      Filter Operator [FIL_61] (rows=2 width=12)
                        predicate:((ib_lower_bound >= 32287) and (ib_upper_bound <= 82287) and ib_income_band_sk is not null)
                        TableScan [TS_12] (rows=20 width=12)
                          default@income_band,income_band,Tbl:COMPLETE,Col:NONE,Output:["ib_income_band_sk","ib_lower_bound","ib_upper_bound"]
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_28]
                    PartitionCols:_col11
                    Merge Join Operator [MERGEJOIN_65] (rows=212960011 width=860)
                      Conds:RS_25._col2=RS_26._col0(Inner),Output:["_col0","_col4","_col5","_col11"]
                    <-Map 9 [SIMPLE_EDGE]
                      SHUFFLE [RS_26]
                        PartitionCols:_col0
                        Select Operator [SEL_11] (rows=7200 width=107)
                          Output:["_col0","_col1"]
                          Filter Operator [FIL_60] (rows=7200 width=107)
                            predicate:(hd_demo_sk is not null and hd_income_band_sk is not null)
                            TableScan [TS_9] (rows=7200 width=107)
                              default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_income_band_sk"]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_25]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_64] (rows=193600006 width=860)
                          Conds:RS_21._col1=RS_22._col0(Inner),RS_22._col0=RS_23._col0(Inner),Output:["_col0","_col2","_col4","_col5"]
                        <-Map 11 [SIMPLE_EDGE]
                          SHUFFLE [RS_23]
                            PartitionCols:_col0
                            Select Operator [SEL_17] (rows=1 width=0)
                              Output:["_col0"]
                              Filter Operator [FIL_62] (rows=1 width=0)
                                predicate:sr_cdemo_sk is not null
                                TableScan [TS_15] (rows=1 width=0)
                                  default@store_returns,store_returns,Tbl:PARTIAL,Col:NONE,Output:["sr_cdemo_sk"]
                        <-Map 8 [SIMPLE_EDGE]
                          SHUFFLE [RS_22]
                            PartitionCols:_col0
                            Select Operator [SEL_8] (rows=19800 width=362)
                              Output:["_col0"]
                              Filter Operator [FIL_59] (rows=19800 width=362)
                                predicate:cd_demo_sk is not null
                                TableScan [TS_6] (rows=19800 width=362)
                                  default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_21]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_63] (rows=88000001 width=860)
                              Conds:RS_18._col3=RS_19._col0(Inner),Output:["_col0","_col1","_col2","_col4","_col5"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_18]
                                PartitionCols:_col3
                                Select Operator [SEL_2] (rows=80000000 width=860)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                  Filter Operator [FIL_57] (rows=80000000 width=860)
                                    predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_current_hdemo_sk is not null)
                                    TableScan [TS_0] (rows=80000000 width=860)
                                      default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_id","c_current_cdemo_sk","c_current_hdemo_sk","c_current_addr_sk","c_first_name","c_last_name"]
                            <-Map 7 [SIMPLE_EDGE]
                              SHUFFLE [RS_19]
                                PartitionCols:_col0
                                Select Operator [SEL_5] (rows=20000000 width=1014)
                                  Output:["_col0"]
                                  Filter Operator [FIL_58] (rows=20000000 width=1014)
                                    predicate:((ca_city = 'Hopewell') and ca_address_sk is not null)
                                    TableScan [TS_3] (rows=40000000 width=1014)
                                      default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_city"]

