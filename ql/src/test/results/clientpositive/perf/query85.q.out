PREHOOK: query: explain select substr(r_reason_desc,1,20) as r ,avg(ws_quantity) wq ,avg(wr_refunded_cash) ref ,avg(wr_fee) fee from web_sales, web_returns, web_page, customer_demographics cd1, customer_demographics cd2, customer_address, date_dim, reason where web_sales.ws_web_page_sk = web_page.wp_web_page_sk and web_sales.ws_item_sk = web_returns.wr_item_sk and web_sales.ws_order_number = web_returns.wr_order_number and web_sales.ws_sold_date_sk = date_dim.d_date_sk and d_year = 1998 and cd1.cd_demo_sk = web_returns.wr_refunded_cdemo_sk and cd2.cd_demo_sk = web_returns.wr_returning_cdemo_sk and customer_address.ca_address_sk = web_returns.wr_refunded_addr_sk and reason.r_reason_sk = web_returns.wr_reason_sk and ( ( cd1.cd_marital_status = 'M' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = '4 yr Degree' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 100.00 and 150.00 ) or ( cd1.cd_marital_status = 'D' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = 'Primary' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 50.00 and 100.00 ) or ( cd1.cd_marital_status = 'U' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = 'Advanced Degree' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 150.00 and 200.00 ) ) and ( ( ca_country = 'United States' and ca_state in ('KY', 'GA', 'NM') and ws_net_profit between 100 and 200 ) or ( ca_country = 'United States' and ca_state in ('MT', 'OR', 'IN') and ws_net_profit between 150 and 300 ) or ( ca_country = 'United States' and ca_state in ('WI', 'MO', 'WV') and ws_net_profit between 50 and 250 ) ) group by r_reason_desc order by r, wq, ref, fee limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select substr(r_reason_desc,1,20) as r ,avg(ws_quantity) wq ,avg(wr_refunded_cash) ref ,avg(wr_fee) fee from web_sales, web_returns, web_page, customer_demographics cd1, customer_demographics cd2, customer_address, date_dim, reason where web_sales.ws_web_page_sk = web_page.wp_web_page_sk and web_sales.ws_item_sk = web_returns.wr_item_sk and web_sales.ws_order_number = web_returns.wr_order_number and web_sales.ws_sold_date_sk = date_dim.d_date_sk and d_year = 1998 and cd1.cd_demo_sk = web_returns.wr_refunded_cdemo_sk and cd2.cd_demo_sk = web_returns.wr_returning_cdemo_sk and customer_address.ca_address_sk = web_returns.wr_refunded_addr_sk and reason.r_reason_sk = web_returns.wr_reason_sk and ( ( cd1.cd_marital_status = 'M' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = '4 yr Degree' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 100.00 and 150.00 ) or ( cd1.cd_marital_status = 'D' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = 'Primary' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 50.00 and 100.00 ) or ( cd1.cd_marital_status = 'U' and cd1.cd_marital_status = cd2.cd_marital_status and cd1.cd_education_status = 'Advanced Degree' and cd1.cd_education_status = cd2.cd_education_status and ws_sales_price between 150.00 and 200.00 ) ) and ( ( ca_country = 'United States' and ca_state in ('KY', 'GA', 'NM') and ws_net_profit between 100 and 200 ) or ( ca_country = 'United States' and ca_state in ('MT', 'OR', 'IN') and ws_net_profit between 150 and 300 ) or ( ca_country = 'United States' and ca_state in ('WI', 'MO', 'WV') and ws_net_profit between 50 and 250 ) ) group by r_reason_desc order by r, wq, ref, fee limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 13 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 14 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 15 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 3 <- Map 17 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 8 <- Map 16 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5
      File Output Operator [FS_59]
        Limit [LIM_58] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_57] (rows=39462256 width=135)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 4 [SIMPLE_EDGE]
            SHUFFLE [RS_56]
              Select Operator [SEL_55] (rows=39462256 width=135)
                Output:["_col0","_col1","_col2","_col3"]
                Group By Operator [GBY_54] (rows=39462256 width=135)
                  Output:["_col0","_col1","_col2","_col3"],aggregations:["avg(VALUE._col0)","avg(VALUE._col1)","avg(VALUE._col2)"],keys:KEY._col0
                <-Reducer 3 [SIMPLE_EDGE]
                  SHUFFLE [RS_53]
                    PartitionCols:_col0
                    Group By Operator [GBY_52] (rows=78924512 width=135)
                      Output:["_col0","_col1","_col2","_col3"],aggregations:["avg(_col6)","avg(_col16)","avg(_col15)"],keys:_col28
                      Select Operator [SEL_51] (rows=78924512 width=135)
                        Output:["_col28","_col6","_col16","_col15"]
                        Merge Join Operator [MERGEJOIN_109] (rows=78924512 width=135)
                          Conds:RS_48._col13=RS_49._col0(Inner),Output:["_col6","_col15","_col16","_col28"]
                        <-Map 17 [SIMPLE_EDGE]
                          SHUFFLE [RS_49]
                            PartitionCols:_col0
                            Select Operator [SEL_44] (rows=72 width=200)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_102] (rows=72 width=200)
                                predicate:r_reason_sk is not null
                                TableScan [TS_42] (rows=72 width=200)
                                  default@reason,reason,Tbl:COMPLETE,Col:NONE,Output:["r_reason_sk","r_reason_desc"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_48]
                            PartitionCols:_col13
                            Merge Join Operator [MERGEJOIN_108] (rows=71749555 width=135)
                              Conds:RS_45._col0=RS_46._col0(Inner),Output:["_col6","_col13","_col15","_col16"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_45]
                                PartitionCols:_col0
                                Select Operator [SEL_2] (rows=36524 width=1119)
                                  Output:["_col0"]
                                  Filter Operator [FIL_95] (rows=36524 width=1119)
                                    predicate:((d_year = 1998) and d_date_sk is not null)
                                    TableScan [TS_0] (rows=73049 width=1119)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                            <-Reducer 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_46]
                                PartitionCols:_col0
                                Select Operator [SEL_41] (rows=65226867 width=135)
                                  Output:["_col0","_col11","_col13","_col14","_col4"]
                                  Filter Operator [FIL_40] (rows=65226867 width=135)
                                    predicate:(((_col23) IN ('KY', 'GA', 'NM') and _col6 BETWEEN 100 AND 200) or ((_col23) IN ('MT', 'OR', 'IN') and _col6 BETWEEN 150 AND 300) or ((_col23) IN ('WI', 'MO', 'WV') and _col6 BETWEEN 50 AND 250))
                                    Select Operator [SEL_39] (rows=86969158 width=135)
                                      Output:["_col0","_col4","_col6","_col11","_col13","_col14","_col23"]
                                      Merge Join Operator [MERGEJOIN_107] (rows=86969158 width=135)
                                        Conds:RS_36._col20, _col21, _col13=RS_37._col1, _col2, _col0(Inner),Output:["_col1","_col3","_col7","_col9","_col14","_col16","_col17"]
                                      <-Map 16 [SIMPLE_EDGE]
                                        SHUFFLE [RS_37]
                                          PartitionCols:_col1, _col2, _col0
                                          Select Operator [SEL_32] (rows=1583 width=204)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_101] (rows=1583 width=204)
                                              predicate:(((cd_education_status = '4 yr Degree') or (cd_education_status = 'Primary') or (cd_education_status = 'Advanced Degree')) and ((cd_marital_status = 'M') or (cd_marital_status = 'D') or (cd_marital_status = 'U')) and cd_demo_sk is not null and cd_marital_status is not null and cd_education_status is not null)
                                              TableScan [TS_30] (rows=1583 width=204)
                                                default@customer_demographics,cd1,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                      <-Reducer 7 [SIMPLE_EDGE]
                                        SHUFFLE [RS_36]
                                          PartitionCols:_col20, _col21, _col13
                                          Merge Join Operator [MERGEJOIN_106] (rows=79062870 width=135)
                                            Conds:RS_33._col0=RS_34._col9(Inner),Output:["_col1","_col3","_col7","_col9","_col13","_col14","_col16","_col17","_col20","_col21"]
                                          <-Map 6 [SIMPLE_EDGE]
                                            SHUFFLE [RS_33]
                                              PartitionCols:_col0
                                              Select Operator [SEL_5] (rows=10000000 width=1014)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_96] (rows=10000000 width=1014)
                                                  predicate:((ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV') and (ca_country = 'United States') and ca_address_sk is not null)
                                                  TableScan [TS_3] (rows=40000000 width=1014)
                                                    default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state","ca_country"]
                                          <-Reducer 12 [SIMPLE_EDGE]
                                            SHUFFLE [RS_34]
                                              PartitionCols:_col9
                                              Select Operator [SEL_29] (rows=71875335 width=135)
                                                Output:["_col0","_col10","_col11","_col13","_col14","_col17","_col18","_col4","_col6","_col9"]
                                                Filter Operator [FIL_28] (rows=71875335 width=135)
                                                  predicate:(((_col17 = 'M') and (_col18 = '4 yr Degree') and _col5 BETWEEN 100.0 AND 150.0) or ((_col17 = 'D') and (_col18 = 'Primary') and _col5 BETWEEN 50.0 AND 100.0) or ((_col17 = 'U') and (_col18 = 'Advanced Degree') and _col5 BETWEEN 150.0 AND 200.0))
                                                  Select Operator [SEL_27] (rows=191667562 width=135)
                                                    Output:["_col0","_col4","_col5","_col6","_col9","_col10","_col11","_col13","_col14","_col17","_col18"]
                                                    Merge Join Operator [MERGEJOIN_105] (rows=191667562 width=135)
                                                      Conds:RS_24._col9=RS_25._col0(Inner),Output:["_col1","_col5","_col6","_col7","_col10","_col11","_col12","_col14","_col15","_col17","_col18"]
                                                    <-Map 15 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_25]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_17] (rows=1583 width=204)
                                                          Output:["_col0","_col1","_col2"]
                                                          Filter Operator [FIL_100] (rows=1583 width=204)
                                                            predicate:(((cd_education_status = '4 yr Degree') or (cd_education_status = 'Primary') or (cd_education_status = 'Advanced Degree')) and ((cd_marital_status = 'M') or (cd_marital_status = 'D') or (cd_marital_status = 'U')) and cd_demo_sk is not null and cd_education_status is not null and cd_marital_status is not null)
                                                            TableScan [TS_15] (rows=1583 width=204)
                                                              default@customer_demographics,cd1,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                                    <-Reducer 11 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_24]
                                                        PartitionCols:_col9
                                                        Merge Join Operator [MERGEJOIN_104] (rows=174243235 width=135)
                                                          Conds:RS_21._col2, _col4=RS_22._col0, _col5(Inner),Output:["_col1","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col14","_col15"]
                                                        <-Map 14 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_22]
                                                            PartitionCols:_col0, _col5
                                                            Select Operator [SEL_14] (rows=14398467 width=92)
                                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                              Filter Operator [FIL_99] (rows=14398467 width=92)
                                                                predicate:(wr_item_sk is not null and wr_order_number is not null and wr_refunded_cdemo_sk is not null and wr_returning_cdemo_sk is not null and wr_refunded_addr_sk is not null and wr_reason_sk is not null)
                                                                TableScan [TS_12] (rows=14398467 width=92)
                                                                  default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_item_sk","wr_refunded_cdemo_sk","wr_refunded_addr_sk","wr_returning_cdemo_sk","wr_reason_sk","wr_order_number","wr_fee","wr_refunded_cash"]
                                                        <-Reducer 10 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_21]
                                                            PartitionCols:_col2, _col4
                                                            Merge Join Operator [MERGEJOIN_103] (rows=158402938 width=135)
                                                              Conds:RS_18._col0=RS_19._col2(Inner),Output:["_col1","_col2","_col4","_col5","_col6","_col7"]
                                                            <-Map 13 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_19]
                                                                PartitionCols:_col2
                                                                Select Operator [SEL_11] (rows=144002668 width=135)
                                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                                  Filter Operator [FIL_98] (rows=144002668 width=135)
                                                                    predicate:((ws_sales_price BETWEEN 100.0 AND 150.0 or ws_sales_price BETWEEN 50.0 AND 100.0 or ws_sales_price BETWEEN 150.0 AND 200.0) and (ws_net_profit BETWEEN 100 AND 200 or ws_net_profit BETWEEN 150 AND 300 or ws_net_profit BETWEEN 50 AND 250) and ws_order_number is not null and ws_item_sk is not null and ws_web_page_sk is not null and ws_sold_date_sk is not null)
                                                                    TableScan [TS_9] (rows=144002668 width=135)
                                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_order_number","ws_quantity","ws_sales_price","ws_net_profit"]
                                                            <-Map 9 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_18]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_8] (rows=4602 width=585)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_97] (rows=4602 width=585)
                                                                    predicate:wp_web_page_sk is not null
                                                                    TableScan [TS_6] (rows=4602 width=585)
                                                                      default@web_page,web_page,Tbl:COMPLETE,Col:NONE,Output:["wp_web_page_sk"]

