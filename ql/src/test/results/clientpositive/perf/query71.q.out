PREHOOK: query: explain select i_brand_id brand_id, i_brand brand,t_hour,t_minute, sum(ext_price) ext_price from item JOIN (select ws_ext_sales_price as ext_price, ws_sold_date_sk as sold_date_sk, ws_item_sk as sold_item_sk, ws_sold_time_sk as time_sk from web_sales,date_dim where date_dim.d_date_sk = web_sales.ws_sold_date_sk and d_moy=12 and d_year=2001 union all select cs_ext_sales_price as ext_price, cs_sold_date_sk as sold_date_sk, cs_item_sk as sold_item_sk, cs_sold_time_sk as time_sk from catalog_sales,date_dim where date_dim.d_date_sk = catalog_sales.cs_sold_date_sk and d_moy=12 and d_year=2001 union all select ss_ext_sales_price as ext_price, ss_sold_date_sk as sold_date_sk, ss_item_sk as sold_item_sk, ss_sold_time_sk as time_sk from store_sales,date_dim where date_dim.d_date_sk = store_sales.ss_sold_date_sk and d_moy=12 and d_year=2001 ) tmp ON tmp.sold_item_sk = item.i_item_sk JOIN time_dim ON tmp.time_sk = time_dim.t_time_sk where i_manager_id=1 and (t_meal_time = 'breakfast' or t_meal_time = 'dinner') group by i_brand, i_brand_id,t_hour,t_minute order by ext_price desc, i_brand_id
PREHOOK: type: QUERY
POSTHOOK: query: explain select i_brand_id brand_id, i_brand brand,t_hour,t_minute, sum(ext_price) ext_price from item JOIN (select ws_ext_sales_price as ext_price, ws_sold_date_sk as sold_date_sk, ws_item_sk as sold_item_sk, ws_sold_time_sk as time_sk from web_sales,date_dim where date_dim.d_date_sk = web_sales.ws_sold_date_sk and d_moy=12 and d_year=2001 union all select cs_ext_sales_price as ext_price, cs_sold_date_sk as sold_date_sk, cs_item_sk as sold_item_sk, cs_sold_time_sk as time_sk from catalog_sales,date_dim where date_dim.d_date_sk = catalog_sales.cs_sold_date_sk and d_moy=12 and d_year=2001 union all select ss_ext_sales_price as ext_price, ss_sold_date_sk as sold_date_sk, ss_item_sk as sold_item_sk, ss_sold_time_sk as time_sk from store_sales,date_dim where date_dim.d_date_sk = store_sales.ss_sold_date_sk and d_moy=12 and d_year=2001 ) tmp ON tmp.sold_item_sk = item.i_item_sk JOIN time_dim ON tmp.time_sk = time_dim.t_time_sk where i_manager_id=1 and (t_meal_time = 'breakfast' or t_meal_time = 'dinner') group by i_brand, i_brand_id,t_hour,t_minute order by ext_price desc, i_brand_id
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 12 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 14 <- Map 13 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 8 (SIMPLE_EDGE)
Reducer 3 <- Map 16 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE), Union 8 (CONTAINS)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5
      File Output Operator [FS_53]
        Select Operator [SEL_52] (rows=139755 width=1436)
          Output:["_col0","_col1","_col2","_col3","_col4"]
        <-Reducer 4 [SIMPLE_EDGE]
          SHUFFLE [RS_51]
            Group By Operator [GBY_48] (rows=139755 width=1436)
              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
            <-Reducer 3 [SIMPLE_EDGE]
              SHUFFLE [RS_47]
                PartitionCols:_col0, _col1, _col2, _col3
                Group By Operator [GBY_46] (rows=279510 width=1436)
                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col4)"],keys:_col1, _col2, _col8, _col9
                  Select Operator [SEL_45] (rows=279510 width=1436)
                    Output:["_col1","_col2","_col8","_col9","_col4"]
                    Merge Join Operator [MERGEJOIN_87] (rows=279510 width=1436)
                      Conds:RS_42._col6=RS_43._col0(Inner),Output:["_col1","_col2","_col4","_col8","_col9"]
                    <-Map 16 [SIMPLE_EDGE]
                      SHUFFLE [RS_43]
                        PartitionCols:_col0
                        Select Operator [SEL_38] (rows=86400 width=471)
                          Output:["_col0","_col1","_col2"]
                          Filter Operator [FIL_82] (rows=86400 width=471)
                            predicate:(((t_meal_time = 'breakfast') or (t_meal_time = 'dinner')) and t_time_sk is not null)
                            TableScan [TS_36] (rows=86400 width=471)
                              default@time_dim,time_dim,Tbl:COMPLETE,Col:NONE,Output:["t_time_sk","t_hour","t_minute","t_meal_time"]
                    <-Reducer 2 [SIMPLE_EDGE]
                      SHUFFLE [RS_42]
                        PartitionCols:_col6
                        Merge Join Operator [MERGEJOIN_86] (rows=254100 width=1436)
                          Conds:RS_39._col0=Union 8._col1(Inner),Output:["_col1","_col2","_col4","_col6"]
                        <-Map 1 [SIMPLE_EDGE]
                          SHUFFLE [RS_39]
                            PartitionCols:_col0
                            Select Operator [SEL_2] (rows=231000 width=1436)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_75] (rows=231000 width=1436)
                                predicate:((i_manager_id = 1) and i_item_sk is not null)
                                TableScan [TS_0] (rows=462000 width=1436)
                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_brand","i_manager_id"]
                        <-Union 8 [SIMPLE_EDGE]
                          <-Reducer 11 [CONTAINS]
                            Reduce Output Operator [RS_40]
                              PartitionCols:_col1
                              Select Operator [SEL_22] (rows=20088 width=1119)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_84] (rows=20088 width=1119)
                                  Conds:RS_19._col0=RS_20._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 10 [SIMPLE_EDGE]
                                  SHUFFLE [RS_19]
                                    PartitionCols:_col0
                                    Select Operator [SEL_15] (rows=1 width=0)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_78] (rows=1 width=0)
                                        predicate:(cs_sold_date_sk is not null and cs_item_sk is not null and cs_sold_time_sk is not null)
                                        TableScan [TS_13] (rows=1 width=0)
                                          default@catalog_sales,catalog_sales,Tbl:PARTIAL,Col:NONE,Output:["cs_sold_date_sk","cs_sold_time_sk","cs_item_sk","cs_ext_sales_price"]
                                <-Map 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_20]
                                    PartitionCols:_col0
                                    Select Operator [SEL_18] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_79] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_16] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                          <-Reducer 14 [CONTAINS]
                            Reduce Output Operator [RS_40]
                              PartitionCols:_col1
                              Select Operator [SEL_34] (rows=20088 width=1119)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_85] (rows=20088 width=1119)
                                  Conds:RS_31._col0=RS_32._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 13 [SIMPLE_EDGE]
                                  SHUFFLE [RS_31]
                                    PartitionCols:_col0
                                    Select Operator [SEL_27] (rows=1 width=0)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_80] (rows=1 width=0)
                                        predicate:(ss_sold_date_sk is not null and ss_item_sk is not null and ss_sold_time_sk is not null)
                                        TableScan [TS_25] (rows=1 width=0)
                                          default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_sold_time_sk","ss_item_sk","ss_ext_sales_price"]
                                <-Map 15 [SIMPLE_EDGE]
                                  SHUFFLE [RS_32]
                                    PartitionCols:_col0
                                    Select Operator [SEL_30] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_81] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_28] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                          <-Reducer 7 [CONTAINS]
                            Reduce Output Operator [RS_40]
                              PartitionCols:_col1
                              Select Operator [SEL_12] (rows=20088 width=1119)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_83] (rows=20088 width=1119)
                                  Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 6 [SIMPLE_EDGE]
                                  SHUFFLE [RS_9]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=1 width=0)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_76] (rows=1 width=0)
                                        predicate:(ws_sold_date_sk is not null and ws_item_sk is not null and ws_sold_time_sk is not null)
                                        TableScan [TS_3] (rows=1 width=0)
                                          default@web_sales,web_sales,Tbl:PARTIAL,Col:NONE,Output:["ws_sold_date_sk","ws_sold_time_sk","ws_item_sk","ws_ext_sales_price"]
                                <-Map 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_10]
                                    PartitionCols:_col0
                                    Select Operator [SEL_8] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_77] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_6] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]

