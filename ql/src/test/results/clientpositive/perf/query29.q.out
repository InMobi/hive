PREHOOK: query: explain select i_item_id ,i_item_desc ,s_store_id ,s_store_name ,sum(ss_quantity) as store_sales_quantity ,sum(sr_return_quantity) as store_returns_quantity ,sum(cs_quantity) as catalog_sales_quantity from store_sales ,store_returns ,catalog_sales ,date_dim d1 ,date_dim d2 ,date_dim d3 ,store ,item where d1.d_moy = 2 and d1.d_year = 2000 and d1.d_date_sk = ss_sold_date_sk and i_item_sk = ss_item_sk and s_store_sk = ss_store_sk and ss_customer_sk = sr_customer_sk and ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number and sr_returned_date_sk = d2.d_date_sk and d2.d_moy between 2 and 2 + 3 and d2.d_year = 2000 and sr_customer_sk = cs_bill_customer_sk and sr_item_sk = cs_item_sk and cs_sold_date_sk = d3.d_date_sk and d3.d_year in (2000,2000+1,2000+2) group by i_item_id ,i_item_desc ,s_store_id ,s_store_name order by i_item_id ,i_item_desc ,s_store_id ,s_store_name limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select i_item_id ,i_item_desc ,s_store_id ,s_store_name ,sum(ss_quantity) as store_sales_quantity ,sum(sr_return_quantity) as store_returns_quantity ,sum(cs_quantity) as catalog_sales_quantity from store_sales ,store_returns ,catalog_sales ,date_dim d1 ,date_dim d2 ,date_dim d3 ,store ,item where d1.d_moy = 2 and d1.d_year = 2000 and d1.d_date_sk = ss_sold_date_sk and i_item_sk = ss_item_sk and s_store_sk = ss_store_sk and ss_customer_sk = sr_customer_sk and ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number and sr_returned_date_sk = d2.d_date_sk and d2.d_moy between 2 and 2 + 3 and d2.d_year = 2000 and sr_customer_sk = cs_bill_customer_sk and sr_item_sk = cs_item_sk and cs_sold_date_sk = d3.d_date_sk and d3.d_year in (2000,2000+1,2000+2) group by i_item_id ,i_item_desc ,s_store_id ,s_store_name order by i_item_id ,i_item_desc ,s_store_id ,s_store_name limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Map 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 13 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 14 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 15 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 16 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 17 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 10
      File Output Operator [FS_53]
        Limit [LIM_52] (rows=100 width=1436)
          Number of rows:100
          Select Operator [SEL_51] (rows=254100 width=1436)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 9 [SIMPLE_EDGE]
            SHUFFLE [RS_50]
              Select Operator [SEL_49] (rows=254100 width=1436)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                Group By Operator [GBY_48] (rows=254100 width=1436)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                <-Reducer 8 [SIMPLE_EDGE]
                  SHUFFLE [RS_47]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_46] (rows=508200 width=1436)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col5)","sum(_col10)","sum(_col14)"],keys:_col24, _col25, _col27, _col28
                      Select Operator [SEL_45] (rows=508200 width=1436)
                        Output:["_col24","_col25","_col27","_col28","_col5","_col10","_col14"]
                        Merge Join Operator [MERGEJOIN_103] (rows=508200 width=1436)
                          Conds:RS_42._col1=RS_43._col0(Inner),Output:["_col5","_col10","_col14","_col24","_col25","_col27","_col28"]
                        <-Map 17 [SIMPLE_EDGE]
                          SHUFFLE [RS_43]
                            PartitionCols:_col0
                            Select Operator [SEL_23] (rows=462000 width=1436)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_96] (rows=462000 width=1436)
                                predicate:i_item_sk is not null
                                TableScan [TS_21] (rows=462000 width=1436)
                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id","i_item_desc"]
                        <-Reducer 7 [SIMPLE_EDGE]
                          SHUFFLE [RS_42]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_102] (rows=44194 width=1119)
                              Conds:RS_39._col3=RS_40._col0(Inner),Output:["_col1","_col5","_col10","_col14","_col24","_col25"]
                            <-Map 16 [SIMPLE_EDGE]
                              SHUFFLE [RS_40]
                                PartitionCols:_col0
                                Select Operator [SEL_20] (rows=1704 width=1910)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_95] (rows=1704 width=1910)
                                    predicate:s_store_sk is not null
                                    TableScan [TS_18] (rows=1704 width=1910)
                                      default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_id","s_store_name"]
                            <-Reducer 6 [SIMPLE_EDGE]
                              SHUFFLE [RS_39]
                                PartitionCols:_col3
                                Merge Join Operator [MERGEJOIN_101] (rows=40177 width=1119)
                                  Conds:RS_36._col11=RS_37._col0(Inner),Output:["_col1","_col3","_col5","_col10","_col14"]
                                <-Map 15 [SIMPLE_EDGE]
                                  SHUFFLE [RS_37]
                                    PartitionCols:_col0
                                    Select Operator [SEL_17] (rows=36525 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_94] (rows=36525 width=1119)
                                        predicate:((d_year) IN (2000, 2001, 2002) and d_date_sk is not null)
                                        TableScan [TS_15] (rows=73049 width=1119)
                                          default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                <-Reducer 5 [SIMPLE_EDGE]
                                  SHUFFLE [RS_36]
                                    PartitionCols:_col11
                                    Merge Join Operator [MERGEJOIN_100] (rows=22096 width=1119)
                                      Conds:RS_33._col6=RS_34._col0(Inner),Output:["_col1","_col3","_col5","_col10","_col11","_col14"]
                                    <-Map 14 [SIMPLE_EDGE]
                                      SHUFFLE [RS_34]
                                        PartitionCols:_col0
                                        Select Operator [SEL_14] (rows=18262 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_93] (rows=18262 width=1119)
                                            predicate:(d_moy BETWEEN 2 AND 5 and (d_year = 2000) and d_date_sk is not null)
                                            TableScan [TS_12] (rows=73049 width=1119)
                                              default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                    <-Reducer 4 [SIMPLE_EDGE]
                                      SHUFFLE [RS_33]
                                        PartitionCols:_col6
                                        Merge Join Operator [MERGEJOIN_99] (rows=20088 width=1119)
                                          Conds:RS_30._col0=RS_31._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col10","_col11","_col14"]
                                        <-Map 13 [SIMPLE_EDGE]
                                          SHUFFLE [RS_31]
                                            PartitionCols:_col0
                                            Select Operator [SEL_11] (rows=18262 width=1119)
                                              Output:["_col0"]
                                              Filter Operator [FIL_92] (rows=18262 width=1119)
                                                predicate:((d_moy = 2) and (d_year = 2000) and d_date_sk is not null)
                                                TableScan [TS_9] (rows=73049 width=1119)
                                                  default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                        <-Reducer 3 [SIMPLE_EDGE]
                                          SHUFFLE [RS_30]
                                            PartitionCols:_col0
                                            Merge Join Operator [MERGEJOIN_98] (rows=1 width=0)
                                              Conds:RS_27._col8, _col7=RS_28._col1, _col2(Inner),Output:["_col0","_col1","_col3","_col5","_col6","_col10","_col11","_col14"]
                                            <-Map 12 [SIMPLE_EDGE]
                                              SHUFFLE [RS_28]
                                                PartitionCols:_col1, _col2
                                                Select Operator [SEL_8] (rows=1 width=0)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_91] (rows=1 width=0)
                                                    predicate:(cs_bill_customer_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_6] (rows=1 width=0)
                                                      default@catalog_sales,catalog_sales,Tbl:PARTIAL,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk","cs_quantity"]
                                            <-Reducer 2 [SIMPLE_EDGE]
                                              SHUFFLE [RS_27]
                                                PartitionCols:_col8, _col7
                                                Merge Join Operator [MERGEJOIN_97] (rows=1 width=0)
                                                  Conds:RS_24._col2, _col1, _col4=RS_25._col2, _col1, _col3(Inner),Output:["_col0","_col1","_col3","_col5","_col6","_col7","_col8","_col10"]
                                                <-Map 1 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_24]
                                                    PartitionCols:_col2, _col1, _col4
                                                    Select Operator [SEL_2] (rows=1 width=0)
                                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                      Filter Operator [FIL_89] (rows=1 width=0)
                                                        predicate:(ss_item_sk is not null and ss_customer_sk is not null and ss_ticket_number is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                        TableScan [TS_0] (rows=1 width=0)
                                                          default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ticket_number","ss_quantity"]
                                                <-Map 11 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_25]
                                                    PartitionCols:_col2, _col1, _col3
                                                    Select Operator [SEL_5] (rows=1 width=0)
                                                      Output:["_col0","_col1","_col2","_col3","_col4"]
                                                      Filter Operator [FIL_90] (rows=1 width=0)
                                                        predicate:(sr_item_sk is not null and sr_customer_sk is not null and sr_ticket_number is not null and sr_returned_date_sk is not null)
                                                        TableScan [TS_3] (rows=1 width=0)
                                                          default@store_returns,store_returns,Tbl:PARTIAL,Col:NONE,Output:["sr_returned_date_sk","sr_item_sk","sr_customer_sk","sr_ticket_number","sr_return_quantity"]

