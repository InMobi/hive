PREHOOK: query: explain select ca_zip, ca_county, sum(ws_sales_price) from web_sales JOIN customer ON web_sales.ws_bill_customer_sk = customer.c_customer_sk JOIN customer_address ON customer.c_current_addr_sk = customer_address.ca_address_sk JOIN date_dim ON web_sales.ws_sold_date_sk = date_dim.d_date_sk JOIN item ON web_sales.ws_item_sk = item.i_item_sk where ( item.i_item_id in (select i_item_id from item i2 where i2.i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) ) ) and d_qoy = 2 and d_year = 2000 group by ca_zip, ca_county order by ca_zip, ca_county limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select ca_zip, ca_county, sum(ws_sales_price) from web_sales JOIN customer ON web_sales.ws_bill_customer_sk = customer.c_customer_sk JOIN customer_address ON customer.c_current_addr_sk = customer_address.ca_address_sk JOIN date_dim ON web_sales.ws_sold_date_sk = date_dim.d_date_sk JOIN item ON web_sales.ws_item_sk = item.i_item_sk where ( item.i_item_id in (select i_item_id from item i2 where i2.i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) ) ) and d_qoy = 2 and d_year = 2000 group by ca_zip, ca_county order by ca_zip, ca_county limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 12 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_44]
        Limit [LIM_43] (rows=100 width=860)
          Number of rows:100
          Select Operator [SEL_42] (rows=58564004 width=860)
            Output:["_col0","_col1","_col2"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_41]
              Select Operator [SEL_40] (rows=58564004 width=860)
                Output:["_col0","_col1","_col2"]
                Group By Operator [GBY_39] (rows=58564004 width=860)
                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_38]
                    PartitionCols:_col0, _col1
                    Group By Operator [GBY_37] (rows=117128008 width=860)
                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col7, _col8
                      Select Operator [SEL_36] (rows=117128008 width=860)
                        Output:["_col7","_col8","_col3"]
                        Merge Join Operator [MERGEJOIN_72] (rows=117128008 width=860)
                          Conds:RS_33._col1=RS_34._col0(Inner),Output:["_col3","_col7","_col8"]
                        <-Reducer 12 [SIMPLE_EDGE]
                          SHUFFLE [RS_34]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_71] (rows=508200 width=1436)
                              Conds:RS_20._col1=RS_21._col0(Left Semi),Output:["_col0"]
                            <-Map 11 [SIMPLE_EDGE]
                              SHUFFLE [RS_20]
                                PartitionCols:_col1
                                Select Operator [SEL_14] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_66] (rows=462000 width=1436)
                                    predicate:(i_item_sk is not null and i_item_id is not null)
                                    TableScan [TS_12] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                            <-Map 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_21]
                                PartitionCols:_col0
                                Group By Operator [GBY_19] (rows=231000 width=1436)
                                  Output:["_col0"],keys:_col0
                                  Select Operator [SEL_17] (rows=231000 width=1436)
                                    Output:["_col0"]
                                    Filter Operator [FIL_67] (rows=231000 width=1436)
                                      predicate:((i_item_sk) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) and i_item_id is not null)
                                      TableScan [TS_15] (rows=462000 width=1436)
                                        default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                        <-Reducer 4 [SIMPLE_EDGE]
                          SHUFFLE [RS_33]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_70] (rows=106480005 width=860)
                              Conds:RS_30._col0=RS_31._col0(Inner),Output:["_col1","_col3","_col7","_col8"]
                            <-Map 10 [SIMPLE_EDGE]
                              SHUFFLE [RS_31]
                                PartitionCols:_col0
                                Select Operator [SEL_11] (rows=18262 width=1119)
                                  Output:["_col0"]
                                  Filter Operator [FIL_65] (rows=18262 width=1119)
                                    predicate:((d_qoy = 2) and (d_year = 2000) and d_date_sk is not null)
                                    TableScan [TS_9] (rows=73049 width=1119)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_30]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_69] (rows=96800003 width=860)
                                  Conds:RS_27._col5=RS_28._col0(Inner),Output:["_col0","_col1","_col3","_col7","_col8"]
                                <-Map 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_28]
                                    PartitionCols:_col0
                                    Select Operator [SEL_8] (rows=40000000 width=1014)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_64] (rows=40000000 width=1014)
                                        predicate:ca_address_sk is not null
                                        TableScan [TS_6] (rows=40000000 width=1014)
                                          default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_county","ca_zip"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_27]
                                    PartitionCols:_col5
                                    Merge Join Operator [MERGEJOIN_68] (rows=88000001 width=860)
                                      Conds:RS_24._col2=RS_25._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_24]
                                        PartitionCols:_col2
                                        Select Operator [SEL_2] (rows=1 width=0)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_62] (rows=1 width=0)
                                            predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null and ws_item_sk is not null)
                                            TableScan [TS_0] (rows=1 width=0)
                                              default@web_sales,web_sales,Tbl:PARTIAL,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk","ws_sales_price"]
                                    <-Map 8 [SIMPLE_EDGE]
                                      SHUFFLE [RS_25]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=80000000 width=860)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_63] (rows=80000000 width=860)
                                            predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                            TableScan [TS_3] (rows=80000000 width=860)
                                              default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]

