Warning: Shuffle Join MERGEJOIN[71][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain select 
    s_store_name,
    i_item_desc,
    sc.revenue,
    i_current_price,
    i_wholesale_cost,
    i_brand
from
    store,
    item,
    (select 
        ss_store_sk, avg(revenue) as ave
    from
        (select 
        ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
    from
        store_sales, date_dim
    where
        ss_sold_date_sk = d_date_sk
            and d_month_seq between 1212 and 1212 + 11
    group by ss_store_sk , ss_item_sk) sa
    group by ss_store_sk) sb,
    (select 
        ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
    from
        store_sales, date_dim
    where
        ss_sold_date_sk = d_date_sk
            and d_month_seq between 1212 and 1212 + 11
    group by ss_store_sk , ss_item_sk) sc
where
    sb.ss_store_sk = sc.ss_store_sk
        and sc.revenue <= 0.1 * sb.ave
        and s_store_sk = sc.ss_store_sk
        and i_item_sk = sc.ss_item_sk
order by s_store_name , i_item_desc
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select 
    s_store_name,
    i_item_desc,
    sc.revenue,
    i_current_price,
    i_wholesale_cost,
    i_brand
from
    store,
    item,
    (select 
        ss_store_sk, avg(revenue) as ave
    from
        (select 
        ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
    from
        store_sales, date_dim
    where
        ss_sold_date_sk = d_date_sk
            and d_month_seq between 1212 and 1212 + 11
    group by ss_store_sk , ss_item_sk) sa
    group by ss_store_sk) sb,
    (select 
        ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
    from
        store_sales, date_dim
    where
        ss_sold_date_sk = d_date_sk
            and d_month_seq between 1212 and 1212 + 11
    group by ss_store_sk , ss_item_sk) sc
where
    sb.ss_store_sk = sc.ss_store_sk
        and sc.revenue <= 0.1 * sb.ave
        and s_store_sk = sc.ss_store_sk
        and i_item_sk = sc.ss_item_sk
order by s_store_name , i_item_desc
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 3 <- Reducer 13 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 7 <- Map 10 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 4
      File Output Operator [FS_53]
        Limit [LIM_52] (rows=100 width=1436)
          Number of rows:100
          Select Operator [SEL_51] (rows=372680 width=1436)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 3 [SIMPLE_EDGE]
            SHUFFLE [RS_50]
              Select Operator [SEL_49] (rows=372680 width=1436)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Filter Operator [FIL_48] (rows=372680 width=1436)
                  predicate:(UDFToDouble(_col11) <= (0.1 * UDFToDouble(_col8)))
                  Merge Join Operator [MERGEJOIN_73] (rows=1118040 width=1436)
                    Conds:RS_45._col7, _col0, _col2=RS_46._col0, _col0, _col1(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col8","_col11"]
                  <-Reducer 13 [SIMPLE_EDGE]
                    SHUFFLE [RS_46]
                      PartitionCols:_col0, _col0, _col1
                      Select Operator [SEL_38] (rows=20088 width=1119)
                        Output:["_col0","_col1","_col2"]
                        Group By Operator [GBY_37] (rows=20088 width=1119)
                          Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                        <-Reducer 12 [SIMPLE_EDGE]
                          SHUFFLE [RS_36]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_35] (rows=40176 width=1119)
                              Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col1, _col2
                              Merge Join Operator [MERGEJOIN_72] (rows=40176 width=1119)
                                Conds:RS_31._col0=RS_32._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 11 [SIMPLE_EDGE]
                                SHUFFLE [RS_31]
                                  PartitionCols:_col0
                                  Select Operator [SEL_27] (rows=1 width=0)
                                    Output:["_col0","_col1","_col2","_col3"]
                                    Filter Operator [FIL_68] (rows=1 width=0)
                                      predicate:(ss_sold_date_sk is not null and ss_store_sk is not null and ss_item_sk is not null)
                                      TableScan [TS_25] (rows=1 width=0)
                                        default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_store_sk","ss_sales_price"]
                              <-Map 14 [SIMPLE_EDGE]
                                SHUFFLE [RS_32]
                                  PartitionCols:_col0
                                  Select Operator [SEL_30] (rows=36524 width=1119)
                                    Output:["_col0"]
                                    Filter Operator [FIL_69] (rows=36524 width=1119)
                                      predicate:(d_month_seq BETWEEN 1212 AND 1223 and d_date_sk is not null)
                                      TableScan [TS_28] (rows=73049 width=1119)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                  <-Reducer 2 [SIMPLE_EDGE]
                    SHUFFLE [RS_45]
                      PartitionCols:_col7, _col0, _col2
                      Merge Join Operator [MERGEJOIN_71] (rows=1016400 width=1436)
                        Conds:(Inner),(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                      <-Map 1 [SIMPLE_EDGE]
                        SHUFFLE [RS_41]
                          Select Operator [SEL_2] (rows=1704 width=1910)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_64] (rows=1704 width=1910)
                              predicate:s_store_sk is not null
                              TableScan [TS_0] (rows=1704 width=1910)
                                default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name"]
                      <-Map 5 [SIMPLE_EDGE]
                        SHUFFLE [RS_42]
                          Select Operator [SEL_5] (rows=462000 width=1436)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Filter Operator [FIL_65] (rows=462000 width=1436)
                              predicate:i_item_sk is not null
                              TableScan [TS_3] (rows=462000 width=1436)
                                default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_desc","i_current_price","i_wholesale_cost","i_brand"]
                      <-Reducer 9 [SIMPLE_EDGE]
                        SHUFFLE [RS_43]
                          Group By Operator [GBY_23] (rows=10044 width=1119)
                            Output:["_col0","_col1"],aggregations:["avg(VALUE._col0)"],keys:KEY._col0
                          <-Reducer 8 [SIMPLE_EDGE]
                            SHUFFLE [RS_22]
                              PartitionCols:_col0
                              Group By Operator [GBY_21] (rows=20088 width=1119)
                                Output:["_col0","_col1"],aggregations:["avg(_col2)"],keys:_col1
                                Select Operator [SEL_19] (rows=20088 width=1119)
                                  Output:["_col1","_col2"]
                                  Group By Operator [GBY_18] (rows=20088 width=1119)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                  <-Reducer 7 [SIMPLE_EDGE]
                                    SHUFFLE [RS_17]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_16] (rows=40176 width=1119)
                                        Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col1, _col2
                                        Merge Join Operator [MERGEJOIN_70] (rows=40176 width=1119)
                                          Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 10 [SIMPLE_EDGE]
                                          SHUFFLE [RS_13]
                                            PartitionCols:_col0
                                            Select Operator [SEL_11] (rows=36524 width=1119)
                                              Output:["_col0"]
                                              Filter Operator [FIL_67] (rows=36524 width=1119)
                                                predicate:(d_month_seq BETWEEN 1212 AND 1223 and d_date_sk is not null)
                                                TableScan [TS_9] (rows=73049 width=1119)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                        <-Map 6 [SIMPLE_EDGE]
                                          SHUFFLE [RS_12]
                                            PartitionCols:_col0
                                            Select Operator [SEL_8] (rows=1 width=0)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_66] (rows=1 width=0)
                                                predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                                TableScan [TS_6] (rows=1 width=0)
                                                  default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_store_sk","ss_sales_price"]

