PREHOOK: query: EXPLAIN SELECT Avg(ss_quantity) , 
       Avg(ss_ext_sales_price) , 
       Avg(ss_ext_wholesale_cost) , 
       Sum(ss_ext_wholesale_cost) 
FROM   store_sales , 
       store , 
       customer_demographics , 
       household_demographics , 
       customer_address , 
       date_dim 
WHERE  store.s_store_sk = store_sales.ss_store_sk 
AND    store_sales.ss_sold_date_sk = date_dim.d_date_sk 
AND    date_dim.d_year = 2001 
AND   (( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'M' 
              AND    customer_demographics.cd_education_status = '4 yr Degree' 
              AND    store_sales.ss_sales_price BETWEEN 100.00 AND    150.00 
              AND    household_demographics.hd_dep_count = 3 ) 
       OR     ( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'D' 
              AND    customer_demographics.cd_education_status = 'Primary' 
              AND    store_sales.ss_sales_price BETWEEN 50.00 AND    100.00 
              AND    household_demographics.hd_dep_count = 1 ) 
       OR     ( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'U' 
              AND    customer_demographics.cd_education_status = 'Advanced Degree' 
              AND    store_sales.ss_sales_price BETWEEN 150.00 AND    200.00 
              AND    household_demographics.hd_dep_count = 1 )) 
AND   (( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('KY', 
                                                   'GA', 
                                                   'NM') 
              AND    store_sales.ss_net_profit BETWEEN 100 AND    200 ) 
       OR     ( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('MT', 
                                                   'OR', 
                                                   'IN') 
              AND    store_sales.ss_net_profit BETWEEN 150 AND    300 ) 
       OR     ( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('WI', 'MO', 'WV') 
              AND    store_sales.ss_net_profit BETWEEN 50 AND    250 ))
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT Avg(ss_quantity) , 
       Avg(ss_ext_sales_price) , 
       Avg(ss_ext_wholesale_cost) , 
       Sum(ss_ext_wholesale_cost) 
FROM   store_sales , 
       store , 
       customer_demographics , 
       household_demographics , 
       customer_address , 
       date_dim 
WHERE  store.s_store_sk = store_sales.ss_store_sk 
AND    store_sales.ss_sold_date_sk = date_dim.d_date_sk 
AND    date_dim.d_year = 2001 
AND   (( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'M' 
              AND    customer_demographics.cd_education_status = '4 yr Degree' 
              AND    store_sales.ss_sales_price BETWEEN 100.00 AND    150.00 
              AND    household_demographics.hd_dep_count = 3 ) 
       OR     ( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'D' 
              AND    customer_demographics.cd_education_status = 'Primary' 
              AND    store_sales.ss_sales_price BETWEEN 50.00 AND    100.00 
              AND    household_demographics.hd_dep_count = 1 ) 
       OR     ( 
                     store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk 
              AND    customer_demographics.cd_demo_sk = ss_cdemo_sk 
              AND    customer_demographics.cd_marital_status = 'U' 
              AND    customer_demographics.cd_education_status = 'Advanced Degree' 
              AND    store_sales.ss_sales_price BETWEEN 150.00 AND    200.00 
              AND    household_demographics.hd_dep_count = 1 )) 
AND   (( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('KY', 
                                                   'GA', 
                                                   'NM') 
              AND    store_sales.ss_net_profit BETWEEN 100 AND    200 ) 
       OR     ( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('MT', 
                                                   'OR', 
                                                   'IN') 
              AND    store_sales.ss_net_profit BETWEEN 150 AND    300 ) 
       OR     ( 
                     store_sales.ss_addr_sk = customer_address.ca_address_sk 
              AND    customer_address.ca_country = 'United States' 
              AND    customer_address.ca_state IN ('WI', 'MO', 'WV') 
              AND    store_sales.ss_net_profit BETWEEN 50 AND    250 ))
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 5 <- Map 4 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 6 <- Map 10 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 11 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 12 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3
      File Output Operator [FS_43]
        Group By Operator [GBY_41] (rows=1 width=344)
          Output:["_col0","_col1","_col2","_col3"],aggregations:["avg(VALUE._col0)","avg(VALUE._col1)","avg(VALUE._col2)","sum(VALUE._col3)"]
        <-Reducer 2 [SIMPLE_EDGE]
          SHUFFLE [RS_40]
            Group By Operator [GBY_39] (rows=1 width=112)
              Output:["_col0","_col1","_col2","_col3"],aggregations:["avg(_col7)","avg(_col9)","avg(_col10)","sum(_col10)"]
              Merge Join Operator [MERGEJOIN_74] (rows=130450332 width=88)
                Conds:RS_35._col0=RS_36._col0(Inner),Output:["_col7","_col9","_col10"]
              <-Map 1 [SIMPLE_EDGE]
                SHUFFLE [RS_35]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=36524 width=1119)
                    Output:["_col0"]
                    Filter Operator [FIL_64] (rows=36524 width=1119)
                      predicate:((d_year = 2001) and d_date_sk is not null)
                      TableScan [TS_0] (rows=73049 width=1119)
                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
              <-Reducer 8 [SIMPLE_EDGE]
                SHUFFLE [RS_36]
                  PartitionCols:_col0
                  Select Operator [SEL_34] (rows=118591209 width=88)
                    Output:["_col0","_col5","_col7","_col8"]
                    Filter Operator [FIL_33] (rows=118591209 width=88)
                      predicate:(((_col17) IN ('KY', 'GA', 'NM') and _col9 BETWEEN 100 AND 200) or ((_col17) IN ('MT', 'OR', 'IN') and _col9 BETWEEN 150 AND 300) or ((_col17) IN ('WI', 'MO', 'WV') and _col9 BETWEEN 50 AND 250))
                      Merge Join Operator [MERGEJOIN_73] (rows=158121612 width=88)
                        Conds:RS_30._col3=RS_31._col0(Inner),Output:["_col0","_col5","_col7","_col8","_col9","_col17"]
                      <-Map 12 [SIMPLE_EDGE]
                        SHUFFLE [RS_31]
                          PartitionCols:_col0
                          Select Operator [SEL_29] (rows=10000000 width=1014)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_69] (rows=10000000 width=1014)
                              predicate:((ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV') and (ca_country = 'United States') and ca_address_sk is not null)
                              TableScan [TS_27] (rows=40000000 width=1014)
                                default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state","ca_country"]
                      <-Reducer 7 [SIMPLE_EDGE]
                        SHUFFLE [RS_30]
                          PartitionCols:_col3
                          Select Operator [SEL_26] (rows=143746917 width=88)
                            Output:["_col0","_col3","_col5","_col7","_col8","_col9"]
                            Filter Operator [FIL_25] (rows=143746917 width=88)
                              predicate:(((_col12 = 'M') and (_col13 = '4 yr Degree') and _col6 BETWEEN 100.0 AND 150.0 and (_col15 = 3)) or ((_col12 = 'D') and (_col13 = 'Primary') and _col6 BETWEEN 50.0 AND 100.0 and (_col15 = 1)) or ((_col12 = 'U') and (_col13 = 'Advanced Degree') and _col6 BETWEEN 150.0 AND 200.0 and (_col15 = 1)))
                              Select Operator [SEL_24] (rows=766650239 width=88)
                                Output:["_col0","_col3","_col5","_col6","_col7","_col8","_col9","_col12","_col13","_col15"]
                                Merge Join Operator [MERGEJOIN_72] (rows=766650239 width=88)
                                  Conds:RS_21._col2=RS_22._col0(Inner),Output:["_col1","_col4","_col6","_col7","_col8","_col9","_col10","_col12","_col14","_col15"]
                                <-Map 11 [SIMPLE_EDGE]
                                  SHUFFLE [RS_22]
                                    PartitionCols:_col0
                                    Select Operator [SEL_14] (rows=1583 width=204)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_68] (rows=1583 width=204)
                                        predicate:(((cd_marital_status = 'M') or (cd_marital_status = 'D') or (cd_marital_status = 'U')) and ((cd_education_status = '4 yr Degree') or (cd_education_status = 'Primary') or (cd_education_status = 'Advanced Degree')) and cd_demo_sk is not null)
                                        TableScan [TS_12] (rows=1583 width=204)
                                          default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                <-Reducer 6 [SIMPLE_EDGE]
                                  SHUFFLE [RS_21]
                                    PartitionCols:_col2
                                    Merge Join Operator [MERGEJOIN_71] (rows=696954748 width=88)
                                      Conds:RS_18._col3=RS_19._col0(Inner),Output:["_col1","_col2","_col4","_col6","_col7","_col8","_col9","_col10","_col12"]
                                    <-Map 10 [SIMPLE_EDGE]
                                      SHUFFLE [RS_19]
                                        PartitionCols:_col0
                                        Select Operator [SEL_11] (rows=7200 width=107)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_67] (rows=7200 width=107)
                                            predicate:(((hd_dep_count = 3) or (hd_dep_count = 1)) and hd_demo_sk is not null)
                                            TableScan [TS_9] (rows=7200 width=107)
                                              default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count"]
                                    <-Reducer 5 [SIMPLE_EDGE]
                                      SHUFFLE [RS_18]
                                        PartitionCols:_col3
                                        Merge Join Operator [MERGEJOIN_70] (rows=633595212 width=88)
                                          Conds:RS_15._col0=RS_16._col4(Inner),Output:["_col1","_col2","_col3","_col4","_col6","_col7","_col8","_col9","_col10"]
                                        <-Map 4 [SIMPLE_EDGE]
                                          SHUFFLE [RS_15]
                                            PartitionCols:_col0
                                            Select Operator [SEL_5] (rows=1704 width=1910)
                                              Output:["_col0"]
                                              Filter Operator [FIL_65] (rows=1704 width=1910)
                                                predicate:s_store_sk is not null
                                                TableScan [TS_3] (rows=1704 width=1910)
                                                  default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_16]
                                            PartitionCols:_col4
                                            Select Operator [SEL_8] (rows=575995635 width=88)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                              Filter Operator [FIL_66] (rows=575995635 width=88)
                                                predicate:((ss_sales_price BETWEEN 100.0 AND 150.0 or ss_sales_price BETWEEN 50.0 AND 100.0 or ss_sales_price BETWEEN 150.0 AND 200.0) and (ss_net_profit BETWEEN 100 AND 200 or ss_net_profit BETWEEN 150 AND 300 or ss_net_profit BETWEEN 50 AND 250) and ss_store_sk is not null and ss_cdemo_sk is not null and ss_hdemo_sk is not null and ss_addr_sk is not null and ss_sold_date_sk is not null)
                                                TableScan [TS_6] (rows=575995635 width=88)
                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_cdemo_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_quantity","ss_sales_price","ss_ext_sales_price","ss_ext_wholesale_cost","ss_net_profit"]

