PREHOOK: query: explain select sum(ss_net_profit) as total_sum ,s_state ,s_county ,grouping__id as lochierarchy , rank() over(partition by grouping__id, case when grouping__id == 2 then s_state end order by sum(ss_net_profit)) as rank_within_parent from store_sales ss join date_dim d1 on d1.d_date_sk = ss.ss_sold_date_sk join store s on s.s_store_sk = ss.ss_store_sk where d1.d_month_seq between 1193 and 1193+11 and s.s_state in ( select s_state from (select s_state as s_state, sum(ss_net_profit), rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking from store_sales, store, date_dim where d_month_seq between 1193 and 1193+11 and date_dim.d_date_sk = store_sales.ss_sold_date_sk and store.s_store_sk = store_sales.ss_store_sk group by s_state ) tmp1 where ranking <= 5 ) group by s_state,s_county with rollup order by lochierarchy desc ,case when lochierarchy = 0 then s_state end ,rank_within_parent limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select sum(ss_net_profit) as total_sum ,s_state ,s_county ,grouping__id as lochierarchy , rank() over(partition by grouping__id, case when grouping__id == 2 then s_state end order by sum(ss_net_profit)) as rank_within_parent from store_sales ss join date_dim d1 on d1.d_date_sk = ss.ss_sold_date_sk join store s on s.s_store_sk = ss.ss_store_sk where d1.d_month_seq between 1193 and 1193+11 and s.s_state in ( select s_state from (select s_state as s_state, sum(ss_net_profit), rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking from store_sales, store, date_dim where d_month_seq between 1193 and 1193+11 and date_dim.d_date_sk = store_sales.ss_sold_date_sk and store.s_store_sk = store_sales.ss_store_sk group by s_state ) tmp1 where ranking <= 5 ) group by s_state,s_county with rollup order by lochierarchy desc ,case when lochierarchy = 0 then s_state end ,rank_within_parent limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)
Reducer 12 <- Map 16 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 9 <- Map 8 (SIMPLE_EDGE), Reducer 14 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_62]
        Limit [LIM_61] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_60] (rows=1045432122 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_59]
              Select Operator [SEL_57] (rows=1045432122 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                PTF Operator [PTF_56] (rows=1045432122 width=88)
                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col4 ASC NULLS FIRST","partition by:":"_col5, CASE WHEN ((_col5 = 2)) THEN (_col0) ELSE (null) END"}]
                  Select Operator [SEL_55] (rows=1045432122 width=88)
                    Output:["_col0","_col1","_col4","_col5"]
                  <-Reducer 4 [SIMPLE_EDGE]
                    SHUFFLE [RS_54]
                      PartitionCols:_col5, CASE WHEN ((_col5 = 2)) THEN (_col0) ELSE (null) END
                      Select Operator [SEL_53] (rows=1045432122 width=88)
                        Output:["_col0","_col1","_col4","_col5"]
                        Group By Operator [GBY_52] (rows=1045432122 width=88)
                          Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_51]
                            PartitionCols:_col0, _col1, _col2
                            Group By Operator [GBY_50] (rows=2090864244 width=88)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)"],keys:_col6, _col7, '0'
                              Select Operator [SEL_49] (rows=696954748 width=88)
                                Output:["_col6","_col7","_col2"]
                                Merge Join Operator [MERGEJOIN_91] (rows=696954748 width=88)
                                  Conds:RS_46._col1=RS_47._col0(Inner),Output:["_col2","_col6","_col7"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_46]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_87] (rows=633595212 width=88)
                                      Conds:RS_43._col0=RS_44._col0(Inner),Output:["_col1","_col2"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_43]
                                        PartitionCols:_col0
                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_80] (rows=575995635 width=88)
                                            predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                            TableScan [TS_0] (rows=575995635 width=88)
                                              default@store_sales,ss,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_net_profit"]
                                    <-Map 7 [SIMPLE_EDGE]
                                      SHUFFLE [RS_44]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=36524 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_81] (rows=36524 width=1119)
                                            predicate:(d_month_seq BETWEEN 1193 AND 1204 and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                <-Reducer 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_47]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_90] (rows=127775039 width=88)
                                      Conds:RS_39._col2=RS_40._col0(Left Semi),Output:["_col0","_col1","_col2"]
                                    <-Map 8 [SIMPLE_EDGE]
                                      SHUFFLE [RS_39]
                                        PartitionCols:_col2
                                        Select Operator [SEL_8] (rows=1704 width=1910)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_82] (rows=1704 width=1910)
                                            predicate:(s_store_sk is not null and s_state is not null)
                                            TableScan [TS_6] (rows=1704 width=1910)
                                              default@store,s,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_county","s_state"]
                                    <-Reducer 14 [SIMPLE_EDGE]
                                      SHUFFLE [RS_40]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_38] (rows=116159124 width=88)
                                          Output:["_col0"],keys:_col0
                                          Select Operator [SEL_32] (rows=116159124 width=88)
                                            Output:["_col0"]
                                            Filter Operator [FIL_83] (rows=116159124 width=88)
                                              predicate:(rank_window_0 <= 5)
                                              PTF Operator [PTF_31] (rows=348477374 width=88)
                                                Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col1 DESC NULLS LAST","partition by:":"_col0"}]
                                                Select Operator [SEL_30] (rows=348477374 width=88)
                                                  Output:["_col0","_col1"]
                                                <-Reducer 13 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_29]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_27] (rows=348477374 width=88)
                                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                                    <-Reducer 12 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_26]
                                                        PartitionCols:_col0
                                                        Group By Operator [GBY_25] (rows=696954748 width=88)
                                                          Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col6
                                                          Select Operator [SEL_24] (rows=696954748 width=88)
                                                            Output:["_col6","_col2"]
                                                            Merge Join Operator [MERGEJOIN_89] (rows=696954748 width=88)
                                                              Conds:RS_21._col1=RS_22._col0(Inner),Output:["_col2","_col6"]
                                                            <-Map 16 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_22]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_17] (rows=1704 width=1910)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_86] (rows=1704 width=1910)
                                                                    predicate:(s_store_sk is not null and s_state is not null)
                                                                    TableScan [TS_15] (rows=1704 width=1910)
                                                                      default@store,s,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_state"]
                                                            <-Reducer 11 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_21]
                                                                PartitionCols:_col1
                                                                Merge Join Operator [MERGEJOIN_88] (rows=633595212 width=88)
                                                                  Conds:RS_18._col0=RS_19._col0(Inner),Output:["_col1","_col2"]
                                                                <-Map 10 [SIMPLE_EDGE]
                                                                  SHUFFLE [RS_18]
                                                                    PartitionCols:_col0
                                                                    Select Operator [SEL_11] (rows=575995635 width=88)
                                                                      Output:["_col0","_col1","_col2"]
                                                                      Filter Operator [FIL_84] (rows=575995635 width=88)
                                                                        predicate:(ss_store_sk is not null and ss_sold_date_sk is not null)
                                                                        TableScan [TS_9] (rows=575995635 width=88)
                                                                          default@store_sales,ss,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_net_profit"]
                                                                <-Map 15 [SIMPLE_EDGE]
                                                                  SHUFFLE [RS_19]
                                                                    PartitionCols:_col0
                                                                    Select Operator [SEL_14] (rows=36524 width=1119)
                                                                      Output:["_col0"]
                                                                      Filter Operator [FIL_85] (rows=36524 width=1119)
                                                                        predicate:(d_month_seq BETWEEN 1193 AND 1204 and d_date_sk is not null)
                                                                        TableScan [TS_12] (rows=73049 width=1119)
                                                                          default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]

