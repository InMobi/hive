PREHOOK: query: explain select sum (ss_quantity) from store_sales, store, customer_demographics, customer_address, date_dim where store.s_store_sk = store_sales.ss_store_sk and store_sales.ss_sold_date_sk = date_dim.d_date_sk and d_year = 1998 and ( ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 100.00 and 150.00 ) or ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 50.00 and 100.00 ) or ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 150.00 and 200.00 ) ) and ( ( store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('KY', 'GA', 'NM') and ss_net_profit between 0 and 2000 ) or (store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('MT', 'OR', 'IN') and ss_net_profit between 150 and 3000 ) or (store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('WI', 'MO', 'WV') and ss_net_profit between 50 and 25000 ) )
PREHOOK: type: QUERY
POSTHOOK: query: explain select sum (ss_quantity) from store_sales, store, customer_demographics, customer_address, date_dim where store.s_store_sk = store_sales.ss_store_sk and store_sales.ss_sold_date_sk = date_dim.d_date_sk and d_year = 1998 and ( ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 100.00 and 150.00 ) or ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 50.00 and 100.00 ) or ( customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk and cd_marital_status = 'M' and cd_education_status = '4 yr Degree' and ss_sales_price between 150.00 and 200.00 ) ) and ( ( store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('KY', 'GA', 'NM') and ss_net_profit between 0 and 2000 ) or (store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('MT', 'OR', 'IN') and ss_net_profit between 150 and 3000 ) or (store_sales.ss_addr_sk = customer_address.ca_address_sk and ca_country = 'United States' and ca_state in ('WI', 'MO', 'WV') and ss_net_profit between 50 and 25000 ) )
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 5 <- Map 4 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 6 <- Map 9 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 10 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3
      File Output Operator [FS_35]
        Group By Operator [GBY_33] (rows=1 width=8)
          Output:["_col0"],aggregations:["sum(VALUE._col0)"]
        <-Reducer 2 [SIMPLE_EDGE]
          SHUFFLE [RS_32]
            Group By Operator [GBY_31] (rows=1 width=8)
              Output:["_col0"],aggregations:["sum(_col6)"]
              Merge Join Operator [MERGEJOIN_58] (rows=632486461 width=88)
                Conds:RS_27._col0=RS_28._col0(Inner),Output:["_col6"]
              <-Map 1 [SIMPLE_EDGE]
                SHUFFLE [RS_27]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=36524 width=1119)
                    Output:["_col0"]
                    Filter Operator [FIL_50] (rows=36524 width=1119)
                      predicate:((d_year = 1998) and d_date_sk is not null)
                      TableScan [TS_0] (rows=73049 width=1119)
                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
              <-Reducer 7 [SIMPLE_EDGE]
                SHUFFLE [RS_28]
                  PartitionCols:_col0
                  Select Operator [SEL_26] (rows=574987680 width=88)
                    Output:["_col0","_col4"]
                    Filter Operator [FIL_25] (rows=574987680 width=88)
                      predicate:(((_col12) IN ('KY', 'GA', 'NM') and _col6 BETWEEN 0 AND 2000) or ((_col12) IN ('MT', 'OR', 'IN') and _col6 BETWEEN 150 AND 3000) or ((_col12) IN ('WI', 'MO', 'WV') and _col6 BETWEEN 50 AND 25000))
                      Select Operator [SEL_24] (rows=766650239 width=88)
                        Output:["_col0","_col4","_col6","_col12"]
                        Merge Join Operator [MERGEJOIN_57] (rows=766650239 width=88)
                          Conds:RS_21._col2=RS_22._col0(Inner),Output:["_col1","_col5","_col7","_col9"]
                        <-Map 10 [SIMPLE_EDGE]
                          SHUFFLE [RS_22]
                            PartitionCols:_col0
                            Select Operator [SEL_14] (rows=395 width=204)
                              Output:["_col0"]
                              Filter Operator [FIL_54] (rows=395 width=204)
                                predicate:((cd_marital_status = 'M') and (cd_education_status = '4 yr Degree') and cd_demo_sk is not null)
                                TableScan [TS_12] (rows=1583 width=204)
                                  default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                        <-Reducer 6 [SIMPLE_EDGE]
                          SHUFFLE [RS_21]
                            PartitionCols:_col2
                            Merge Join Operator [MERGEJOIN_56] (rows=696954748 width=88)
                              Conds:RS_18._col3=RS_19._col0(Inner),Output:["_col1","_col2","_col5","_col7","_col9"]
                            <-Map 9 [SIMPLE_EDGE]
                              SHUFFLE [RS_19]
                                PartitionCols:_col0
                                Select Operator [SEL_11] (rows=10000000 width=1014)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_53] (rows=10000000 width=1014)
                                    predicate:((ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV') and (ca_country = 'United States') and ca_address_sk is not null)
                                    TableScan [TS_9] (rows=40000000 width=1014)
                                      default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state","ca_country"]
                            <-Reducer 5 [SIMPLE_EDGE]
                              SHUFFLE [RS_18]
                                PartitionCols:_col3
                                Merge Join Operator [MERGEJOIN_55] (rows=633595212 width=88)
                                  Conds:RS_15._col0=RS_16._col3(Inner),Output:["_col1","_col2","_col3","_col5","_col7"]
                                <-Map 4 [SIMPLE_EDGE]
                                  SHUFFLE [RS_15]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=1704 width=1910)
                                      Output:["_col0"]
                                      Filter Operator [FIL_51] (rows=1704 width=1910)
                                        predicate:s_store_sk is not null
                                        TableScan [TS_3] (rows=1704 width=1910)
                                          default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk"]
                                <-Map 8 [SIMPLE_EDGE]
                                  SHUFFLE [RS_16]
                                    PartitionCols:_col3
                                    Select Operator [SEL_8] (rows=575995635 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                                      Filter Operator [FIL_52] (rows=575995635 width=88)
                                        predicate:((ss_sales_price BETWEEN 100.0 AND 150.0 or ss_sales_price BETWEEN 50.0 AND 100.0 or ss_sales_price BETWEEN 150.0 AND 200.0) and (ss_net_profit BETWEEN 0 AND 2000 or ss_net_profit BETWEEN 150 AND 3000 or ss_net_profit BETWEEN 50 AND 25000) and ss_store_sk is not null and ss_cdemo_sk is not null and ss_addr_sk is not null and ss_sold_date_sk is not null)
                                        TableScan [TS_6] (rows=575995635 width=88)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_cdemo_sk","ss_addr_sk","ss_store_sk","ss_quantity","ss_sales_price","ss_net_profit"]

