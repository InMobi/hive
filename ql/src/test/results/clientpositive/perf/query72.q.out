PREHOOK: query: explain select i_item_desc ,w_warehouse_name ,d1.d_week_seq ,count(case when p_promo_sk is null then 1 else 0 end) no_promo ,count(case when p_promo_sk is not null then 1 else 0 end) promo ,count(*) total_cnt from catalog_sales join inventory on (catalog_sales.cs_item_sk = inventory.inv_item_sk) join warehouse on (warehouse.w_warehouse_sk=inventory.inv_warehouse_sk) join item on (item.i_item_sk = catalog_sales.cs_item_sk) join customer_demographics on (catalog_sales.cs_bill_cdemo_sk = customer_demographics.cd_demo_sk) join household_demographics on (catalog_sales.cs_bill_hdemo_sk = household_demographics.hd_demo_sk) join date_dim d1 on (catalog_sales.cs_sold_date_sk = d1.d_date_sk) join date_dim d2 on (inventory.inv_date_sk = d2.d_date_sk) join date_dim d3 on (catalog_sales.cs_ship_date_sk = d3.d_date_sk) left outer join promotion on (catalog_sales.cs_promo_sk=promotion.p_promo_sk) left outer join catalog_returns on (catalog_returns.cr_item_sk = catalog_sales.cs_item_sk and catalog_returns.cr_order_number = catalog_sales.cs_order_number) where d1.d_week_seq = d2.d_week_seq and inv_quantity_on_hand < cs_quantity and d3.d_date > d1.d_date + 5 and hd_buy_potential = '1001-5000' and d1.d_year = 2001 and hd_buy_potential = '1001-5000' and cd_marital_status = 'M' and d1.d_year = 2001 group by i_item_desc,w_warehouse_name,d1.d_week_seq order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select i_item_desc ,w_warehouse_name ,d1.d_week_seq ,count(case when p_promo_sk is null then 1 else 0 end) no_promo ,count(case when p_promo_sk is not null then 1 else 0 end) promo ,count(*) total_cnt from catalog_sales join inventory on (catalog_sales.cs_item_sk = inventory.inv_item_sk) join warehouse on (warehouse.w_warehouse_sk=inventory.inv_warehouse_sk) join item on (item.i_item_sk = catalog_sales.cs_item_sk) join customer_demographics on (catalog_sales.cs_bill_cdemo_sk = customer_demographics.cd_demo_sk) join household_demographics on (catalog_sales.cs_bill_hdemo_sk = household_demographics.hd_demo_sk) join date_dim d1 on (catalog_sales.cs_sold_date_sk = d1.d_date_sk) join date_dim d2 on (inventory.inv_date_sk = d2.d_date_sk) join date_dim d3 on (catalog_sales.cs_ship_date_sk = d3.d_date_sk) left outer join promotion on (catalog_sales.cs_promo_sk=promotion.p_promo_sk) left outer join catalog_returns on (catalog_returns.cr_item_sk = catalog_sales.cs_item_sk and catalog_returns.cr_order_number = catalog_sales.cs_order_number) where d1.d_week_seq = d2.d_week_seq and inv_quantity_on_hand < cs_quantity and d3.d_date > d1.d_date + 5 and hd_buy_potential = '1001-5000' and d1.d_year = 2001 and hd_buy_potential = '1001-5000' and cd_marital_status = 'M' and d1.d_year = 2001 group by i_item_desc,w_warehouse_name,d1.d_week_seq order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 22 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 23 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 3 <- Map 15 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 16 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 17 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 18 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 19 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 20 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 21 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 13
      File Output Operator [FS_75]
        Limit [LIM_74] (rows=100 width=1436)
          Number of rows:100
          Select Operator [SEL_73] (rows=165056 width=1436)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 12 [SIMPLE_EDGE]
            SHUFFLE [RS_72]
              Group By Operator [GBY_70] (rows=165056 width=1436)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)","count(VALUE._col1)","count(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Reducer 11 [SIMPLE_EDGE]
                SHUFFLE [RS_69]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_68] (rows=330112 width=1436)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(_col3)","count(_col4)","count()"],keys:_col0, _col1, _col2
                    Select Operator [SEL_66] (rows=330112 width=1436)
                      Output:["_col0","_col1","_col2","_col3","_col4"]
                      Merge Join Operator [MERGEJOIN_142] (rows=330112 width=1436)
                        Conds:RS_63._col4, _col6=RS_64._col0, _col1(Left Outer),Output:["_col13","_col15","_col22","_col28"]
                      <-Map 23 [SIMPLE_EDGE]
                        SHUFFLE [RS_64]
                          PartitionCols:_col0, _col1
                          Select Operator [SEL_59] (rows=1 width=0)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_132] (rows=1 width=0)
                              predicate:cr_item_sk is not null
                              TableScan [TS_57] (rows=1 width=0)
                                default@catalog_returns,catalog_returns,Tbl:PARTIAL,Col:NONE,Output:["cr_item_sk","cr_order_number"]
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_63]
                          PartitionCols:_col4, _col6
                          Merge Join Operator [MERGEJOIN_141] (rows=300102 width=1436)
                            Conds:RS_60._col5=RS_61._col0(Left Outer),Output:["_col4","_col6","_col13","_col15","_col22","_col28"]
                          <-Map 22 [SIMPLE_EDGE]
                            SHUFFLE [RS_61]
                              PartitionCols:_col0
                              Select Operator [SEL_56] (rows=2300 width=1179)
                                Output:["_col0"]
                                TableScan [TS_55] (rows=2300 width=1179)
                                  default@promotion,promotion,Tbl:COMPLETE,Col:NONE,Output:["p_promo_sk"]
                          <-Reducer 9 [SIMPLE_EDGE]
                            SHUFFLE [RS_60]
                              PartitionCols:_col5
                              Select Operator [SEL_54] (rows=272820 width=1436)
                                Output:["_col13","_col15","_col22","_col4","_col5","_col6"]
                                Filter Operator [FIL_53] (rows=272820 width=1436)
                                  predicate:(UDFToDouble(_col27) > (UDFToDouble(_col21) + 5.0))
                                  Merge Join Operator [MERGEJOIN_140] (rows=818460 width=1436)
                                    Conds:RS_50._col1=RS_51._col0(Inner),Output:["_col4","_col5","_col6","_col13","_col15","_col21","_col22","_col27"]
                                  <-Map 21 [SIMPLE_EDGE]
                                    SHUFFLE [RS_51]
                                      PartitionCols:_col0
                                      Select Operator [SEL_31] (rows=73049 width=1119)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_130] (rows=73049 width=1119)
                                          predicate:d_date_sk is not null
                                          TableScan [TS_29] (rows=73049 width=1119)
                                            default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                  <-Reducer 8 [SIMPLE_EDGE]
                                    SHUFFLE [RS_50]
                                      PartitionCols:_col1
                                      Merge Join Operator [MERGEJOIN_139] (rows=744055 width=1436)
                                        Conds:RS_47._col8, _col22=RS_48._col0, _col1(Inner),Output:["_col1","_col4","_col5","_col6","_col13","_col15","_col21","_col22"]
                                      <-Map 20 [SIMPLE_EDGE]
                                        SHUFFLE [RS_48]
                                          PartitionCols:_col0, _col1
                                          Select Operator [SEL_28] (rows=73049 width=1119)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_129] (rows=73049 width=1119)
                                              predicate:(d_date_sk is not null and d_week_seq is not null)
                                              TableScan [TS_26] (rows=73049 width=1119)
                                                default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_week_seq"]
                                      <-Reducer 7 [SIMPLE_EDGE]
                                        SHUFFLE [RS_47]
                                          PartitionCols:_col8, _col22
                                          Merge Join Operator [MERGEJOIN_138] (rows=676414 width=1436)
                                            Conds:RS_44._col0=RS_45._col0(Inner),Output:["_col1","_col4","_col5","_col6","_col8","_col13","_col15","_col21","_col22"]
                                          <-Map 19 [SIMPLE_EDGE]
                                            SHUFFLE [RS_45]
                                              PartitionCols:_col0
                                              Select Operator [SEL_25] (rows=36524 width=1119)
                                                Output:["_col0","_col1","_col2"]
                                                Filter Operator [FIL_128] (rows=36524 width=1119)
                                                  predicate:((d_year = 2001) and d_date_sk is not null and d_week_seq is not null)
                                                  TableScan [TS_23] (rows=73049 width=1119)
                                                    default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date","d_week_seq","d_year"]
                                          <-Reducer 6 [SIMPLE_EDGE]
                                            SHUFFLE [RS_44]
                                              PartitionCols:_col0
                                              Merge Join Operator [MERGEJOIN_137] (rows=614922 width=1436)
                                                Conds:RS_41._col3=RS_42._col0(Inner),Output:["_col0","_col1","_col4","_col5","_col6","_col8","_col13","_col15"]
                                              <-Map 18 [SIMPLE_EDGE]
                                                SHUFFLE [RS_42]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_22] (rows=3600 width=107)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_127] (rows=3600 width=107)
                                                      predicate:((hd_buy_potential = '1001-5000') and hd_demo_sk is not null)
                                                      TableScan [TS_20] (rows=7200 width=107)
                                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_buy_potential"]
                                              <-Reducer 5 [SIMPLE_EDGE]
                                                SHUFFLE [RS_41]
                                                  PartitionCols:_col3
                                                  Merge Join Operator [MERGEJOIN_136] (rows=559020 width=1436)
                                                    Conds:RS_38._col2=RS_39._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col8","_col13","_col15"]
                                                  <-Map 17 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_39]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_19] (rows=9900 width=362)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_126] (rows=9900 width=362)
                                                          predicate:((cd_marital_status = 'M') and cd_demo_sk is not null)
                                                          TableScan [TS_17] (rows=19800 width=362)
                                                            default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status"]
                                                  <-Reducer 4 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_38]
                                                      PartitionCols:_col2
                                                      Merge Join Operator [MERGEJOIN_135] (rows=508200 width=1436)
                                                        Conds:RS_35._col4=RS_36._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col8","_col13","_col15"]
                                                      <-Map 16 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_36]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_16] (rows=462000 width=1436)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_125] (rows=462000 width=1436)
                                                              predicate:i_item_sk is not null
                                                              TableScan [TS_14] (rows=462000 width=1436)
                                                                default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_desc"]
                                                      <-Reducer 3 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_35]
                                                          PartitionCols:_col4
                                                          Merge Join Operator [MERGEJOIN_134] (rows=29 width=1054)
                                                            Conds:RS_32._col10=RS_33._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col8","_col13"]
                                                          <-Map 15 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_33]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_13] (rows=27 width=1029)
                                                                Output:["_col0","_col1"]
                                                                Filter Operator [FIL_124] (rows=27 width=1029)
                                                                  predicate:w_warehouse_sk is not null
                                                                  TableScan [TS_11] (rows=27 width=1029)
                                                                    default@warehouse,warehouse,Tbl:COMPLETE,Col:NONE,Output:["w_warehouse_sk","w_warehouse_name"]
                                                          <-Reducer 2 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_32]
                                                              PartitionCols:_col10
                                                              Select Operator [SEL_10] (rows=1 width=0)
                                                                Output:["_col0","_col1","_col10","_col2","_col3","_col4","_col5","_col6","_col8"]
                                                                Filter Operator [FIL_9] (rows=1 width=0)
                                                                  predicate:(_col11 < _col7)
                                                                  Merge Join Operator [MERGEJOIN_133] (rows=1 width=0)
                                                                    Conds:RS_6._col4=RS_7._col1(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col10","_col11"]
                                                                  <-Map 1 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_6]
                                                                      PartitionCols:_col4
                                                                      Select Operator [SEL_2] (rows=1 width=0)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                                        Filter Operator [FIL_122] (rows=1 width=0)
                                                                          predicate:(cs_item_sk is not null and cs_bill_cdemo_sk is not null and cs_bill_hdemo_sk is not null and cs_sold_date_sk is not null and cs_ship_date_sk is not null)
                                                                          TableScan [TS_0] (rows=1 width=0)
                                                                            default@catalog_sales,catalog_sales,Tbl:PARTIAL,Col:NONE,Output:["cs_sold_date_sk","cs_ship_date_sk","cs_bill_cdemo_sk","cs_bill_hdemo_sk","cs_item_sk","cs_promo_sk","cs_order_number","cs_quantity"]
                                                                  <-Map 14 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_7]
                                                                      PartitionCols:_col1
                                                                      Select Operator [SEL_5] (rows=1 width=0)
                                                                        Output:["_col0","_col1","_col2","_col3"]
                                                                        Filter Operator [FIL_123] (rows=1 width=0)
                                                                          predicate:(inv_item_sk is not null and inv_warehouse_sk is not null and inv_date_sk is not null)
                                                                          TableScan [TS_3] (rows=1 width=0)
                                                                            default@inventory,inventory,Tbl:PARTIAL,Col:NONE,Output:["inv_date_sk","inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]

