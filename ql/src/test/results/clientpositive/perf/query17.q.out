PREHOOK: query: explain select i_item_id ,i_item_desc ,s_state ,count(ss_quantity) as store_sales_quantitycount ,avg(ss_quantity) as store_sales_quantityave ,stddev_samp(ss_quantity) as store_sales_quantitystdev ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov ,count(sr_return_quantity) as_store_returns_quantitycount ,avg(sr_return_quantity) as_store_returns_quantityave ,stddev_samp(sr_return_quantity) as_store_returns_quantitystdev ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitystdev ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov from store_sales ,store_returns ,catalog_sales ,date_dim d1 ,date_dim d2 ,date_dim d3 ,store ,item where d1.d_quarter_name = '2000Q1' and d1.d_date_sk = store_sales.ss_sold_date_sk and item.i_item_sk = store_sales.ss_item_sk and store.s_store_sk = store_sales.ss_store_sk and store_sales.ss_customer_sk = store_returns.sr_customer_sk and store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number and store_returns.sr_returned_date_sk = d2.d_date_sk and d2.d_quarter_name in ('2000Q1','2000Q2','2000Q3') and store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk and store_returns.sr_item_sk = catalog_sales.cs_item_sk and catalog_sales.cs_sold_date_sk = d3.d_date_sk and d3.d_quarter_name in ('2000Q1','2000Q2','2000Q3') group by i_item_id ,i_item_desc ,s_state order by i_item_id ,i_item_desc ,s_state limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select i_item_id ,i_item_desc ,s_state ,count(ss_quantity) as store_sales_quantitycount ,avg(ss_quantity) as store_sales_quantityave ,stddev_samp(ss_quantity) as store_sales_quantitystdev ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov ,count(sr_return_quantity) as_store_returns_quantitycount ,avg(sr_return_quantity) as_store_returns_quantityave ,stddev_samp(sr_return_quantity) as_store_returns_quantitystdev ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitystdev ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov from store_sales ,store_returns ,catalog_sales ,date_dim d1 ,date_dim d2 ,date_dim d3 ,store ,item where d1.d_quarter_name = '2000Q1' and d1.d_date_sk = store_sales.ss_sold_date_sk and item.i_item_sk = store_sales.ss_item_sk and store.s_store_sk = store_sales.ss_store_sk and store_sales.ss_customer_sk = store_returns.sr_customer_sk and store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number and store_returns.sr_returned_date_sk = d2.d_date_sk and d2.d_quarter_name in ('2000Q1','2000Q2','2000Q3') and store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk and store_returns.sr_item_sk = catalog_sales.cs_item_sk and catalog_sales.cs_sold_date_sk = d3.d_date_sk and d3.d_quarter_name in ('2000Q1','2000Q2','2000Q3') group by i_item_id ,i_item_desc ,s_state order by i_item_id ,i_item_desc ,s_state limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 14 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 15 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 16 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 17 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 9 <- Map 13 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_54]
        Limit [LIM_53] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_52] (rows=510205767 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_51]
              Select Operator [SEL_50] (rows=510205767 width=88)
                Output:["_col0","_col1","_col10","_col11","_col12","_col13","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                Group By Operator [GBY_49] (rows=510205767 width=88)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"],aggregations:["count(VALUE._col0)","avg(VALUE._col1)","stddev_samp(VALUE._col2)","count(VALUE._col3)","avg(VALUE._col4)","stddev_samp(VALUE._col5)","count(VALUE._col6)","avg(VALUE._col7)","stddev_samp(VALUE._col8)"],keys:KEY._col0, KEY._col1, KEY._col2
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_48]
                    PartitionCols:_col0, _col1, _col2
                    Group By Operator [GBY_47] (rows=1020411534 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"],aggregations:["count(_col15)","avg(_col15)","stddev_samp(_col15)","count(_col20)","avg(_col20)","stddev_samp(_col20)","count(_col3)","avg(_col3)","stddev_samp(_col3)"],keys:_col24, _col25, _col7
                      Select Operator [SEL_46] (rows=1020411534 width=88)
                        Output:["_col24","_col25","_col7","_col15","_col20","_col3"]
                        Merge Join Operator [MERGEJOIN_100] (rows=1020411534 width=88)
                          Conds:RS_43._col11=RS_44._col0(Inner),Output:["_col3","_col7","_col15","_col20","_col24","_col25"]
                        <-Map 17 [SIMPLE_EDGE]
                          SHUFFLE [RS_44]
                            PartitionCols:_col0
                            Select Operator [SEL_36] (rows=462000 width=1436)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_93] (rows=462000 width=1436)
                                predicate:i_item_sk is not null
                                TableScan [TS_34] (rows=462000 width=1436)
                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id","i_item_desc"]
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_43]
                            PartitionCols:_col11
                            Merge Join Operator [MERGEJOIN_99] (rows=927646829 width=88)
                              Conds:RS_40._col1, _col2=RS_41._col12, _col11(Inner),Output:["_col3","_col7","_col11","_col15","_col20"]
                            <-Reducer 12 [SIMPLE_EDGE]
                              SHUFFLE [RS_41]
                                PartitionCols:_col12, _col11
                                Select Operator [SEL_33] (rows=843315281 width=88)
                                  Output:["_col1","_col11","_col12","_col14","_col5","_col9"]
                                  Merge Join Operator [MERGEJOIN_98] (rows=843315281 width=88)
                                    Conds:RS_30._col3=RS_31._col0(Inner),Output:["_col1","_col5","_col7","_col8","_col10","_col16"]
                                  <-Map 16 [SIMPLE_EDGE]
                                    SHUFFLE [RS_31]
                                      PartitionCols:_col0
                                      Select Operator [SEL_20] (rows=1704 width=1910)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_92] (rows=1704 width=1910)
                                          predicate:s_store_sk is not null
                                          TableScan [TS_18] (rows=1704 width=1910)
                                            default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_state"]
                                  <-Reducer 11 [SIMPLE_EDGE]
                                    SHUFFLE [RS_30]
                                      PartitionCols:_col3
                                      Merge Join Operator [MERGEJOIN_97] (rows=766650239 width=88)
                                        Conds:RS_27._col6=RS_28._col0(Inner),Output:["_col1","_col3","_col5","_col7","_col8","_col10"]
                                      <-Map 15 [SIMPLE_EDGE]
                                        SHUFFLE [RS_28]
                                          PartitionCols:_col0
                                          Select Operator [SEL_17] (rows=36525 width=1119)
                                            Output:["_col0"]
                                            Filter Operator [FIL_91] (rows=36525 width=1119)
                                              predicate:((d_quarter_name) IN ('2000Q1', '2000Q2', '2000Q3') and d_date_sk is not null)
                                              TableScan [TS_15] (rows=73049 width=1119)
                                                default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_quarter_name"]
                                      <-Reducer 10 [SIMPLE_EDGE]
                                        SHUFFLE [RS_27]
                                          PartitionCols:_col6
                                          Merge Join Operator [MERGEJOIN_96] (rows=696954748 width=88)
                                            Conds:RS_24._col0=RS_25._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col7","_col8","_col10"]
                                          <-Map 14 [SIMPLE_EDGE]
                                            SHUFFLE [RS_25]
                                              PartitionCols:_col0
                                              Select Operator [SEL_14] (rows=36524 width=1119)
                                                Output:["_col0"]
                                                Filter Operator [FIL_90] (rows=36524 width=1119)
                                                  predicate:((d_quarter_name = '2000Q1') and d_date_sk is not null)
                                                  TableScan [TS_12] (rows=73049 width=1119)
                                                    default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_quarter_name"]
                                          <-Reducer 9 [SIMPLE_EDGE]
                                            SHUFFLE [RS_24]
                                              PartitionCols:_col0
                                              Merge Join Operator [MERGEJOIN_95] (rows=633595212 width=88)
                                                Conds:RS_21._col1, _col2, _col4=RS_22._col1, _col2, _col3(Inner),Output:["_col0","_col1","_col3","_col5","_col6","_col7","_col8","_col10"]
                                              <-Map 13 [SIMPLE_EDGE]
                                                SHUFFLE [RS_22]
                                                  PartitionCols:_col1, _col2, _col3
                                                  Select Operator [SEL_11] (rows=57591150 width=77)
                                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                                    Filter Operator [FIL_89] (rows=57591150 width=77)
                                                      predicate:(sr_item_sk is not null and sr_customer_sk is not null and sr_ticket_number is not null and sr_returned_date_sk is not null)
                                                      TableScan [TS_9] (rows=57591150 width=77)
                                                        default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_returned_date_sk","sr_item_sk","sr_customer_sk","sr_ticket_number","sr_return_quantity"]
                                              <-Map 8 [SIMPLE_EDGE]
                                                SHUFFLE [RS_21]
                                                  PartitionCols:_col1, _col2, _col4
                                                  Select Operator [SEL_8] (rows=575995635 width=88)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                    Filter Operator [FIL_88] (rows=575995635 width=88)
                                                      predicate:(ss_item_sk is not null and ss_customer_sk is not null and ss_ticket_number is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                      TableScan [TS_6] (rows=575995635 width=88)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ticket_number","ss_quantity"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_40]
                                PartitionCols:_col1, _col2
                                Merge Join Operator [MERGEJOIN_94] (rows=316788826 width=135)
                                  Conds:RS_37._col0=RS_38._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_37]
                                    PartitionCols:_col0
                                    Select Operator [SEL_2] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_86] (rows=287989836 width=135)
                                        predicate:(cs_bill_customer_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_0] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk","cs_quantity"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_38]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=36525 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_87] (rows=36525 width=1119)
                                        predicate:((d_quarter_name) IN ('2000Q1', '2000Q2', '2000Q3') and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=1119)
                                          default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_quarter_name"]

