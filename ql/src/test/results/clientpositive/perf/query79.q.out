PREHOOK: query: explain select c_last_name,c_first_name,substr(s_city,1,30) sub,ss_ticket_number,amt,profit from (select ss_ticket_number ,ss_customer_sk ,store.s_city ,sum(ss_coupon_amt) amt ,sum(ss_net_profit) profit from store_sales,date_dim,store,household_demographics where store_sales.ss_sold_date_sk = date_dim.d_date_sk and store_sales.ss_store_sk = store.s_store_sk and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0) and date_dim.d_dow = 1 and date_dim.d_year in (1998,1998+1,1998+2) and store.s_number_employees between 200 and 295 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer where ms.ss_customer_sk = customer.c_customer_sk order by c_last_name,c_first_name,sub, profit limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select c_last_name,c_first_name,substr(s_city,1,30) sub,ss_ticket_number,amt,profit from (select ss_ticket_number ,ss_customer_sk ,store.s_city ,sum(ss_coupon_amt) amt ,sum(ss_net_profit) profit from store_sales,date_dim,store,household_demographics where store_sales.ss_sold_date_sk = date_dim.d_date_sk and store_sales.ss_store_sk = store.s_store_sk and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0) and date_dim.d_dow = 1 and date_dim.d_year in (1998,1998+1,1998+2) and store.s_number_employees between 200 and 295 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer where ms.ss_customer_sk = customer.c_customer_sk order by c_last_name,c_first_name,sub, profit limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 11 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_37]
        Limit [LIM_36] (rows=100 width=860)
          Number of rows:100
          Select Operator [SEL_35] (rows=88000001 width=860)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_34]
              Select Operator [SEL_33] (rows=88000001 width=860)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Merge Join Operator [MERGEJOIN_60] (rows=88000001 width=860)
                  Conds:RS_30._col1=RS_31._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col6","_col7"]
                <-Map 11 [SIMPLE_EDGE]
                  SHUFFLE [RS_31]
                    PartitionCols:_col0
                    Select Operator [SEL_29] (rows=80000000 width=860)
                      Output:["_col0","_col1","_col2"]
                      Filter Operator [FIL_56] (rows=80000000 width=860)
                        predicate:c_customer_sk is not null
                        TableScan [TS_27] (rows=80000000 width=860)
                          default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_first_name","c_last_name"]
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_30]
                    PartitionCols:_col1
                    Select Operator [SEL_25] (rows=12152 width=1119)
                      Output:["_col0","_col1","_col2","_col3","_col4"]
                      Group By Operator [GBY_24] (rows=12152 width=1119)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_23]
                          PartitionCols:_col0, _col1, _col2, _col3
                          Group By Operator [GBY_22] (rows=24305 width=1119)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col6)","sum(_col7)"],keys:_col1, _col3, _col5, _col13
                            Select Operator [SEL_21] (rows=24305 width=1119)
                              Output:["_col1","_col3","_col5","_col13","_col6","_col7"]
                              Merge Join Operator [MERGEJOIN_59] (rows=24305 width=1119)
                                Conds:RS_18._col2=RS_19._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col7","_col13"]
                              <-Map 10 [SIMPLE_EDGE]
                                SHUFFLE [RS_19]
                                  PartitionCols:_col0
                                  Select Operator [SEL_11] (rows=6000 width=107)
                                    Output:["_col0"]
                                    Filter Operator [FIL_55] (rows=6000 width=107)
                                      predicate:(((hd_dep_count = 8) or (hd_vehicle_count > 0)) and hd_demo_sk is not null)
                                      TableScan [TS_9] (rows=7200 width=107)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Reducer 3 [SIMPLE_EDGE]
                                SHUFFLE [RS_18]
                                  PartitionCols:_col2
                                  Merge Join Operator [MERGEJOIN_58] (rows=22096 width=1119)
                                    Conds:RS_15._col4=RS_16._col0(Inner),Output:["_col1","_col2","_col3","_col5","_col6","_col7","_col13"]
                                  <-Map 9 [SIMPLE_EDGE]
                                    SHUFFLE [RS_16]
                                      PartitionCols:_col0
                                      Select Operator [SEL_8] (rows=852 width=1910)
                                        Output:["_col0","_col2"]
                                        Filter Operator [FIL_54] (rows=852 width=1910)
                                          predicate:(s_number_employees BETWEEN 200 AND 295 and s_store_sk is not null)
                                          TableScan [TS_6] (rows=1704 width=1910)
                                            default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_number_employees","s_city"]
                                  <-Reducer 2 [SIMPLE_EDGE]
                                    SHUFFLE [RS_15]
                                      PartitionCols:_col4
                                      Merge Join Operator [MERGEJOIN_57] (rows=20088 width=1119)
                                        Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                      <-Map 1 [SIMPLE_EDGE]
                                        SHUFFLE [RS_12]
                                          PartitionCols:_col0
                                          Select Operator [SEL_2] (rows=1 width=0)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                            Filter Operator [FIL_52] (rows=1 width=0)
                                              predicate:(ss_sold_date_sk is not null and ss_store_sk is not null and ss_hdemo_sk is not null and ss_customer_sk is not null)
                                              TableScan [TS_0] (rows=1 width=0)
                                                default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_ticket_number","ss_coupon_amt","ss_net_profit"]
                                      <-Map 8 [SIMPLE_EDGE]
                                        SHUFFLE [RS_13]
                                          PartitionCols:_col0
                                          Select Operator [SEL_5] (rows=18262 width=1119)
                                            Output:["_col0"]
                                            Filter Operator [FIL_53] (rows=18262 width=1119)
                                              predicate:((d_year) IN (1998, 1999, 2000) and (d_dow = 1) and d_date_sk is not null)
                                              TableScan [TS_3] (rows=73049 width=1119)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_dow"]

