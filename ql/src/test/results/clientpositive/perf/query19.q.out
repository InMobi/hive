PREHOOK: query: explain select i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact, sum(ss_ext_sales_price) ext_price from date_dim, store_sales, item,customer,customer_address,store where date_dim.d_date_sk = store_sales.ss_sold_date_sk and store_sales.ss_item_sk = item.i_item_sk and i_manager_id=7 and d_moy=11 and d_year=1999 and store_sales.ss_customer_sk = customer.c_customer_sk and customer.c_current_addr_sk = customer_address.ca_address_sk and substr(ca_zip,1,5) <> substr(s_zip,1,5) and store_sales.ss_store_sk = store.s_store_sk group by i_brand ,i_brand_id ,i_manufact_id ,i_manufact order by ext_price desc ,i_brand ,i_brand_id ,i_manufact_id ,i_manufact limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact, sum(ss_ext_sales_price) ext_price from date_dim, store_sales, item,customer,customer_address,store where date_dim.d_date_sk = store_sales.ss_sold_date_sk and store_sales.ss_item_sk = item.i_item_sk and i_manager_id=7 and d_moy=11 and d_year=1999 and store_sales.ss_customer_sk = customer.c_customer_sk and customer.c_current_addr_sk = customer_address.ca_address_sk and substr(ca_zip,1,5) <> substr(s_zip,1,5) and store_sales.ss_store_sk = store.s_store_sk group by i_brand ,i_brand_id ,i_manufact_id ,i_manufact order by ext_price desc ,i_brand ,i_brand_id ,i_manufact_id ,i_manufact limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 11 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 12 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 13 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_43]
        Limit [LIM_42] (rows=100 width=860)
          Number of rows:100
          Select Operator [SEL_41] (rows=53240002 width=860)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_40]
              Group By Operator [GBY_37] (rows=53240002 width=860)
                Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
              <-Reducer 6 [SIMPLE_EDGE]
                SHUFFLE [RS_36]
                  PartitionCols:_col0, _col1, _col2, _col3
                  Group By Operator [GBY_35] (rows=106480005 width=860)
                    Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col7)"],keys:_col9, _col10, _col11, _col12
                    Select Operator [SEL_34] (rows=106480005 width=860)
                      Output:["_col9","_col10","_col11","_col12","_col7"]
                      Filter Operator [FIL_33] (rows=106480005 width=860)
                        predicate:(substr(_col17, 1, 5) <> substr(_col19, 1, 5))
                        Merge Join Operator [MERGEJOIN_74] (rows=106480005 width=860)
                          Conds:RS_30._col6=RS_31._col0(Inner),Output:["_col7","_col9","_col10","_col11","_col12","_col17","_col19"]
                        <-Map 13 [SIMPLE_EDGE]
                          SHUFFLE [RS_31]
                            PartitionCols:_col0
                            Select Operator [SEL_17] (rows=1704 width=1910)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_69] (rows=1704 width=1910)
                                predicate:s_store_sk is not null
                                TableScan [TS_15] (rows=1704 width=1910)
                                  default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_zip"]
                        <-Reducer 5 [SIMPLE_EDGE]
                          SHUFFLE [RS_30]
                            PartitionCols:_col6
                            Merge Join Operator [MERGEJOIN_73] (rows=96800003 width=860)
                              Conds:RS_27._col15=RS_28._col0(Inner),Output:["_col6","_col7","_col9","_col10","_col11","_col12","_col17"]
                            <-Map 12 [SIMPLE_EDGE]
                              SHUFFLE [RS_28]
                                PartitionCols:_col0
                                Select Operator [SEL_14] (rows=40000000 width=1014)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_68] (rows=40000000 width=1014)
                                    predicate:ca_address_sk is not null
                                    TableScan [TS_12] (rows=40000000 width=1014)
                                      default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_zip"]
                            <-Reducer 4 [SIMPLE_EDGE]
                              SHUFFLE [RS_27]
                                PartitionCols:_col15
                                Merge Join Operator [MERGEJOIN_72] (rows=88000001 width=860)
                                  Conds:RS_24._col5=RS_25._col0(Inner),Output:["_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                <-Map 11 [SIMPLE_EDGE]
                                  SHUFFLE [RS_25]
                                    PartitionCols:_col0
                                    Select Operator [SEL_11] (rows=80000000 width=860)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_67] (rows=80000000 width=860)
                                        predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                        TableScan [TS_9] (rows=80000000 width=860)
                                          default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                <-Reducer 3 [SIMPLE_EDGE]
                                  SHUFFLE [RS_24]
                                    PartitionCols:_col5
                                    Merge Join Operator [MERGEJOIN_71] (rows=254100 width=1436)
                                      Conds:RS_21._col4=RS_22._col0(Inner),Output:["_col5","_col6","_col7","_col9","_col10","_col11","_col12"]
                                    <-Map 10 [SIMPLE_EDGE]
                                      SHUFFLE [RS_22]
                                        PartitionCols:_col0
                                        Select Operator [SEL_8] (rows=231000 width=1436)
                                          Output:["_col0","_col1","_col2","_col3","_col4"]
                                          Filter Operator [FIL_66] (rows=231000 width=1436)
                                            predicate:((i_manager_id = 7) and i_item_sk is not null)
                                            TableScan [TS_6] (rows=462000 width=1436)
                                              default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_brand","i_manufact_id","i_manufact","i_manager_id"]
                                    <-Reducer 2 [SIMPLE_EDGE]
                                      SHUFFLE [RS_21]
                                        PartitionCols:_col4
                                        Merge Join Operator [MERGEJOIN_70] (rows=20088 width=1119)
                                          Conds:RS_18._col0=RS_19._col0(Inner),Output:["_col4","_col5","_col6","_col7"]
                                        <-Map 1 [SIMPLE_EDGE]
                                          SHUFFLE [RS_18]
                                            PartitionCols:_col0
                                            Select Operator [SEL_2] (rows=18262 width=1119)
                                              Output:["_col0"]
                                              Filter Operator [FIL_64] (rows=18262 width=1119)
                                                predicate:((d_moy = 11) and (d_year = 1999) and d_date_sk is not null)
                                                TableScan [TS_0] (rows=73049 width=1119)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_19]
                                            PartitionCols:_col0
                                            Select Operator [SEL_5] (rows=1 width=0)
                                              Output:["_col0","_col1","_col2","_col3","_col4"]
                                              Filter Operator [FIL_65] (rows=1 width=0)
                                                predicate:(ss_sold_date_sk is not null and ss_item_sk is not null and ss_customer_sk is not null and ss_store_sk is not null)
                                                TableScan [TS_3] (rows=1 width=0)
                                                  default@store_sales,store_sales,Tbl:PARTIAL,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ext_sales_price"]

