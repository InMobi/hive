PREHOOK: query: explain with my_customers as ( select c_customer_sk , c_current_addr_sk from ( select cs_sold_date_sk sold_date_sk, cs_bill_customer_sk customer_sk, cs_item_sk item_sk from catalog_sales union all select ws_sold_date_sk sold_date_sk, ws_bill_customer_sk customer_sk, ws_item_sk item_sk from web_sales ) cs_or_ws_sales, item, date_dim, customer where sold_date_sk = d_date_sk and item_sk = i_item_sk and i_category = 'Jewelry' and i_class = 'football' and c_customer_sk = cs_or_ws_sales.customer_sk and d_moy = 3 and d_year = 2000 group by c_customer_sk , c_current_addr_sk ) , my_revenue as ( select c_customer_sk, sum(ss_ext_sales_price) as revenue from my_customers, store_sales, customer_address, store, date_dim where c_current_addr_sk = ca_address_sk and ca_county = s_county and ca_state = s_state and ss_sold_date_sk = d_date_sk and c_customer_sk = ss_customer_sk and d_month_seq between (1203) and (1205) group by c_customer_sk ) , segments as (select cast((revenue/50) as int) as segment from my_revenue ) select segment, count(*) as num_customers, segment*50 as segment_base from segments group by segment order by segment, num_customers limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain with my_customers as ( select c_customer_sk , c_current_addr_sk from ( select cs_sold_date_sk sold_date_sk, cs_bill_customer_sk customer_sk, cs_item_sk item_sk from catalog_sales union all select ws_sold_date_sk sold_date_sk, ws_bill_customer_sk customer_sk, ws_item_sk item_sk from web_sales ) cs_or_ws_sales, item, date_dim, customer where sold_date_sk = d_date_sk and item_sk = i_item_sk and i_category = 'Jewelry' and i_class = 'football' and c_customer_sk = cs_or_ws_sales.customer_sk and d_moy = 3 and d_year = 2000 group by c_customer_sk , c_current_addr_sk ) , my_revenue as ( select c_customer_sk, sum(ss_ext_sales_price) as revenue from my_customers, store_sales, customer_address, store, date_dim where c_current_addr_sk = ca_address_sk and ca_county = s_county and ca_state = s_state and ss_sold_date_sk = d_date_sk and c_customer_sk = ss_customer_sk and d_month_seq between (1203) and (1205) group by c_customer_sk ) , segments as (select cast((revenue/50) as int) as segment from my_revenue ) select segment, count(*) as num_customers, segment*50 as segment_base from segments group by segment order by segment, num_customers limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 12 <- Union 13 (CONTAINS)
Map 18 <- Union 13 (CONTAINS)
Reducer 10 <- Reducer 17 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 14 <- Map 19 (SIMPLE_EDGE), Union 13 (SIMPLE_EDGE)
Reducer 15 <- Map 20 (SIMPLE_EDGE), Reducer 14 (SIMPLE_EDGE)
Reducer 16 <- Map 21 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 9 <- Map 11 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_69]
        Limit [LIM_68] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_67] (rows=174238687 width=88)
            Output:["_col0","_col1","_col2"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_66]
              Select Operator [SEL_65] (rows=174238687 width=88)
                Output:["_col0","_col1","_col2"]
                Group By Operator [GBY_64] (rows=174238687 width=88)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_63]
                    PartitionCols:_col0
                    Group By Operator [GBY_62] (rows=348477374 width=88)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                      Select Operator [SEL_60] (rows=348477374 width=88)
                        Output:["_col0"]
                        Group By Operator [GBY_59] (rows=348477374 width=88)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_58]
                            PartitionCols:_col0
                            Group By Operator [GBY_57] (rows=696954748 width=88)
                              Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col10
                              Select Operator [SEL_56] (rows=696954748 width=88)
                                Output:["_col10","_col2"]
                                Merge Join Operator [MERGEJOIN_117] (rows=696954748 width=88)
                                  Conds:RS_53._col1=RS_54._col5(Inner),Output:["_col2","_col10"]
                                <-Reducer 10 [SIMPLE_EDGE]
                                  SHUFFLE [RS_54]
                                    PartitionCols:_col5
                                    Merge Join Operator [MERGEJOIN_116] (rows=316240138 width=135)
                                      Conds:RS_46._col0=RS_47._col1(Inner),Output:["_col5"]
                                    <-Reducer 17 [SIMPLE_EDGE]
                                      SHUFFLE [RS_47]
                                        PartitionCols:_col1
                                        Select Operator [SEL_42] (rows=287491029 width=135)
                                          Output:["_col0","_col1"]
                                          Group By Operator [GBY_41] (rows=287491029 width=135)
                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                          <-Reducer 16 [SIMPLE_EDGE]
                                            SHUFFLE [RS_40]
                                              PartitionCols:_col0, _col1
                                              Group By Operator [GBY_39] (rows=574982058 width=135)
                                                Output:["_col0","_col1"],keys:_col10, _col9
                                                Select Operator [SEL_38] (rows=574982058 width=135)
                                                  Output:["_col10","_col9"]
                                                  Merge Join Operator [MERGEJOIN_115] (rows=574982058 width=135)
                                                    Conds:RS_35._col1=RS_36._col0(Inner),Output:["_col9","_col10"]
                                                  <-Map 21 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_36]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_28] (rows=80000000 width=860)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_110] (rows=80000000 width=860)
                                                          predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                                          TableScan [TS_26] (rows=80000000 width=860)
                                                            default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                                  <-Reducer 15 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_35]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_114] (rows=522710951 width=135)
                                                        Conds:RS_32._col2=RS_33._col0(Inner),Output:["_col1"]
                                                      <-Map 20 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_33]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_25] (rows=115500 width=1436)
                                                            Output:["_col0"]
                                                            Filter Operator [FIL_109] (rows=115500 width=1436)
                                                              predicate:((i_category = 'Jewelry') and (i_class = 'football') and i_item_sk is not null)
                                                              TableScan [TS_23] (rows=462000 width=1436)
                                                                default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_class","i_category"]
                                                      <-Reducer 14 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_32]
                                                          PartitionCols:_col2
                                                          Merge Join Operator [MERGEJOIN_113] (rows=475191764 width=135)
                                                            Conds:Union 13._col0=RS_30._col0(Inner),Output:["_col1","_col2"]
                                                          <-Map 19 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_30]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_22] (rows=18262 width=1119)
                                                                Output:["_col0"]
                                                                Filter Operator [FIL_108] (rows=18262 width=1119)
                                                                  predicate:((d_moy = 3) and (d_year = 2000) and d_date_sk is not null)
                                                                  TableScan [TS_20] (rows=73049 width=1119)
                                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                                          <-Union 13 [SIMPLE_EDGE]
                                                            <-Map 12 [CONTAINS]
                                                              Reduce Output Operator [RS_29]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_14] (rows=287989836 width=135)
                                                                  Output:["_col0","_col1","_col2"]
                                                                  Filter Operator [FIL_106] (rows=287989836 width=135)
                                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_bill_customer_sk is not null)
                                                                    TableScan [TS_12] (rows=287989836 width=135)
                                                                      Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk"]
                                                            <-Map 18 [CONTAINS]
                                                              Reduce Output Operator [RS_29]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_17] (rows=144002668 width=135)
                                                                  Output:["_col0","_col1","_col2"]
                                                                  Filter Operator [FIL_107] (rows=144002668 width=135)
                                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_bill_customer_sk is not null)
                                                                    TableScan [TS_15] (rows=144002668 width=135)
                                                                      Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk"]
                                    <-Reducer 9 [SIMPLE_EDGE]
                                      SHUFFLE [RS_46]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_112] (rows=44000000 width=1014)
                                          Conds:RS_43._col1, _col2=RS_44._col0, _col1(Inner),Output:["_col0"]
                                        <-Map 11 [SIMPLE_EDGE]
                                          SHUFFLE [RS_44]
                                            PartitionCols:_col0, _col1
                                            Select Operator [SEL_11] (rows=1704 width=1910)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_105] (rows=1704 width=1910)
                                                predicate:(s_county is not null and s_state is not null)
                                                TableScan [TS_9] (rows=1704 width=1910)
                                                  default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_county","s_state"]
                                        <-Map 8 [SIMPLE_EDGE]
                                          SHUFFLE [RS_43]
                                            PartitionCols:_col1, _col2
                                            Select Operator [SEL_8] (rows=40000000 width=1014)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_104] (rows=40000000 width=1014)
                                                predicate:(ca_address_sk is not null and ca_county is not null and ca_state is not null)
                                                TableScan [TS_6] (rows=40000000 width=1014)
                                                  default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_county","ca_state"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_53]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_111] (rows=633595212 width=88)
                                      Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col1","_col2"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_50]
                                        PartitionCols:_col0
                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_102] (rows=575995635 width=88)
                                            predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                            TableScan [TS_0] (rows=575995635 width=88)
                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_ext_sales_price"]
                                    <-Map 7 [SIMPLE_EDGE]
                                      SHUFFLE [RS_51]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=36524 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_103] (rows=36524 width=1119)
                                            predicate:(d_month_seq BETWEEN 1203 AND 1205 and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]

