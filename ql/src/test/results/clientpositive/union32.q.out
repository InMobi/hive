PREHOOK: query: -- This tests various union queries which have columns on one side of the query
-- being of double type and those on the other side another

CREATE TABLE t1 AS SELECT * FROM src WHERE key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
POSTHOOK: query: -- This tests various union queries which have columns on one side of the query
-- being of double type and those on the other side another

CREATE TABLE t1 AS SELECT * FROM src WHERE key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: default@t1
PREHOOK: query: CREATE TABLE t2 AS SELECT * FROM src WHERE key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
POSTHOOK: query: CREATE TABLE t2 AS SELECT * FROM src WHERE key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: default@t2
PREHOOK: query: -- Test simple union with double
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t1
UNION ALL
SELECT CAST(key AS BIGINT) AS key FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
POSTHOOK: query: -- Test simple union with double
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t1
UNION ALL
SELECT CAST(key AS BIGINT) AS key FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double)
              outputColumnNames: _col0
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double)
          TableScan
            alias: t2
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(UDFToLong(key)) (type: double)
              outputColumnNames: _col0
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t1
UNION ALL
SELECT CAST(key AS BIGINT) AS key FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t1
UNION ALL
SELECT CAST(key AS BIGINT) AS key FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
0.0
0.0
0.0
0.0
0.0
0.0
2.0
2.0
4.0
4.0
5.0
5.0
5.0
5.0
5.0
5.0
8.0
8.0
9.0
9.0
PREHOOK: query: -- Test union with join on the left
EXPLAIN
SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
POSTHOOK: query: -- Test union with join on the left
EXPLAIN
SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-2 depends on stages: Stage-3
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 
          outputColumnNames: _col0
          Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: UDFToDouble(UDFToLong(_col0)) (type: double)
            outputColumnNames: _col0
            Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t2
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double)
              outputColumnNames: _col0
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double)
          TableScan
            Union
              Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: double)
                outputColumnNames: _col0
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: double)
                  sort order: +
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: double)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.0
2.0
4.0
4.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
8.0
8.0
9.0
9.0
PREHOOK: query: -- Test union with join on the right
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
PREHOOK: type: QUERY
POSTHOOK: query: -- Test union with join on the right
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 
          outputColumnNames: _col0
          Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: UDFToDouble(UDFToLong(_col0)) (type: double)
            outputColumnNames: _col0
            Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: double)
                outputColumnNames: _col0
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: double)
                  sort order: +
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: double)
          TableScan
            alias: t2
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double)
              outputColumnNames: _col0
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.0
2.0
4.0
4.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
5.0
8.0
8.0
9.0
9.0
PREHOOK: query: -- Test union with join on the left selecting multiple columns
EXPLAIN
SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
POSTHOOK: query: -- Test union with join on the left selecting multiple columns
EXPLAIN
SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-2 depends on stages: Stage-3
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col4
          Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: UDFToDouble(UDFToLong(_col0)) (type: double), UDFToString(UDFToDouble(_col4)) (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t2
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double), key (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double), _col1 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double), _col1 (type: string)
          TableScan
            Union
              Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: double), _col1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: double)
                  sort order: +
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: double), _col1 (type: string)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2) a
ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM 
(SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key
UNION ALL
SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2) a
ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
0.0	0
0.0	0
0.0	0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
2.0	2.0
2.0	2
4.0	4
4.0	4.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5
5.0	5
5.0	5
8.0	8
8.0	8.0
9.0	9.0
9.0	9
PREHOOK: query: -- Test union with join on the right selecting multiple columns
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
PREHOOK: type: QUERY
POSTHOOK: query: -- Test union with join on the right selecting multiple columns
EXPLAIN
SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0}
            1 {VALUE._col0}
          outputColumnNames: _col0, _col4
          Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: UDFToDouble(UDFToLong(_col0)) (type: double), UDFToDouble(_col4) (type: double)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: double), _col1 (type: double)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: double)
                  sort order: +
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: double), _col1 (type: double)
          TableScan
            alias: t2
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double), UDFToDouble(key) (type: double)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: double), _col1 (type: double)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: double)
                    sort order: +
                    Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: double), _col1 (type: double)
      Reduce Operator Tree:
        Extract
          Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 21 Data size: 147 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM 
(SELECT CAST(key AS DOUBLE) AS key, CAST(key AS STRING) AS value FROM t2
UNION ALL
SELECT CAST(a.key AS BIGINT) AS key, CAST(b.key AS DOUBLE) AS value FROM t1 a JOIN t2 b ON a.key = b.key) a
ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
0.0	0.0
2.0	2.0
2.0	2.0
4.0	4.0
4.0	4.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
5.0	5.0
8.0	8.0
8.0	8.0
9.0	9.0
9.0	9.0
