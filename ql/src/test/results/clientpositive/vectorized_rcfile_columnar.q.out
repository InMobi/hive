PREHOOK: query: --This query must pass even when vectorized reader is not available for
--RC files. The query must fall back to the non-vector mode and run successfully.

CREATE table columnTable (key STRING, value STRING)
ROW FORMAT SERDE
  'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe'
STORED AS
  INPUTFORMAT 'org.apache.hadoop.hive.ql.io.RCFileInputFormat'
  OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.RCFileOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: --This query must pass even when vectorized reader is not available for
--RC files. The query must fall back to the non-vector mode and run successfully.

CREATE table columnTable (key STRING, value STRING)
ROW FORMAT SERDE
  'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe'
STORED AS
  INPUTFORMAT 'org.apache.hadoop.hive.ql.io.RCFileInputFormat'
  OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.RCFileOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@columnTable
PREHOOK: query: FROM src
INSERT OVERWRITE TABLE columnTable SELECT src.key, src.value LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@columntable
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE columnTable SELECT src.key, src.value LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@columntable
POSTHOOK: Lineage: columntable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: columntable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: describe columnTable
PREHOOK: type: DESCTABLE
POSTHOOK: query: describe columnTable
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: columntable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: columntable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
key                 	string              	None                
value               	string              	None                
PREHOOK: query: SELECT key, value FROM columnTable
PREHOOK: type: QUERY
PREHOOK: Input: default@columntable
#### A masked pattern was here ####
POSTHOOK: query: SELECT key, value FROM columnTable
POSTHOOK: type: QUERY
POSTHOOK: Input: default@columntable
#### A masked pattern was here ####
POSTHOOK: Lineage: columntable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: columntable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
238	val_238
86	val_86
311	val_311
27	val_27
165	val_165
409	val_409
255	val_255
278	val_278
98	val_98
484	val_484
