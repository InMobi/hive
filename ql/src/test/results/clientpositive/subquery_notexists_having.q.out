PREHOOK: query: -- no agg, corr
explain
select * 
from src b 
group by key, value
having not exists 
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_12'
  )
PREHOOK: type: QUERY
POSTHOOK: query: -- no agg, corr
explain
select * 
from src b 
group by key, value
having not exists 
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_12'
  )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string), _col0 (type: string)
              sort order: ++
              Map-reduce partition columns: _col1 (type: string), _col0 (type: string)
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: string), _col1 (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (value > 'val_12') (type: boolean)
              Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: value (type: string), key (type: string)
                outputColumnNames: _col1, _col2
                Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col1 (type: string), _col2 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col1 (type: string), _col2 (type: string)
                  Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col2}
          outputColumnNames: _col0, _col1, _col8
          Statistics: Num rows: 31 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: ((1 = 1) and _col8 is null) (type: boolean)
            Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), _col1 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select * 
from src b 
group by key, value
having not exists 
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_12'
  )
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * 
from src b 
group by key, value
having not exists 
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_12'
  )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
103	val_103
104	val_104
105	val_105
11	val_11
111	val_111
113	val_113
114	val_114
116	val_116
118	val_118
119	val_119
12	val_12
PREHOOK: query: -- distinct, corr
explain
select * 
from src b 
group by key, value
having not exists 
  (select distinct a.key 
  from src a 
  where b.value = a.value and a.value > 'val_12'
  )
PREHOOK: type: QUERY
POSTHOOK: query: -- distinct, corr
explain
select * 
from src b 
group by key, value
having not exists 
  (select distinct a.key 
  from src a 
  where b.value = a.value and a.value > 'val_12'
  )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-3
  Stage-3 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string)
              sort order: +
              Map-reduce partition columns: _col1 (type: string)
              Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: string), _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string)
              sort order: +
              Map-reduce partition columns: _col1 (type: string)
              Statistics: Num rows: 4 Data size: 801 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col1}
          outputColumnNames: _col0, _col1, _col6
          Statistics: Num rows: 31 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: ((1 = 1) and _col6 is null) (type: boolean)
            Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), _col1 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 7 Data size: 1443 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (value > 'val_12') (type: boolean)
              Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), value (type: string)
                outputColumnNames: key, value
                Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  keys: key (type: string), value (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 9 Data size: 1803 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 4 Data size: 801 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col1 (type: string)
            outputColumnNames: _col1
            Statistics: Num rows: 4 Data size: 801 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select * 
from src b 
group by key, value
having not exists 
  (select distinct a.key 
  from src a 
  where b.value = a.value and a.value > 'val_12'
  )
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * 
from src b 
group by key, value
having not exists 
  (select distinct a.key 
  from src a 
  where b.value = a.value and a.value > 'val_12'
  )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
103	val_103
104	val_104
105	val_105
11	val_11
111	val_111
113	val_113
114	val_114
116	val_116
118	val_118
119	val_119
12	val_12
